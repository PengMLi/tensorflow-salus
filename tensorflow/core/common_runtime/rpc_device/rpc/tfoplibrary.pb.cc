// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tfoplibrary.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tfoplibrary.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace executor {
class TFOpKernelDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFOpKernelDef> {
} _TFOpKernelDef_default_instance_;
class TFOpContextDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFOpContextDef> {
} _TFOpContextDef_default_instance_;

namespace protobuf_tfoplibrary_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpKernelDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpKernelDef, graph_def_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpKernelDef, nodedef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpKernelDef, cfgproto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpKernelDef, funcdef_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, step_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, iter_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, is_input_dead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, host_temp_memory_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, device_temp_memory_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, host_persistent_alloc_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, device_persistent_alloc_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, host_persistent_memory_allocated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, device_persistent_memory_allocated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, is_output_dead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, status_msg_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(TFOpKernelDef)},
  { 8, -1, sizeof(TFOpContextDef)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFOpKernelDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFOpContextDef_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tfoplibrary.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _TFOpKernelDef_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TFOpContextDef_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::InitDefaults();
  ::tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::InitDefaults();
  _TFOpKernelDef_default_instance_.DefaultConstruct();
  _TFOpContextDef_default_instance_.DefaultConstruct();
  _TFOpKernelDef_default_instance_.get_mutable()->nodedef_ = const_cast< ::tensorflow::NodeDef*>(
      ::tensorflow::NodeDef::internal_default_instance());
  _TFOpKernelDef_default_instance_.get_mutable()->cfgproto_ = const_cast< ::tensorflow::ConfigProto*>(
      ::tensorflow::ConfigProto::internal_default_instance());
  _TFOpKernelDef_default_instance_.get_mutable()->funcdef_ = const_cast< ::tensorflow::FunctionDefLibrary*>(
      ::tensorflow::FunctionDefLibrary::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021tfoplibrary.proto\022\010executor\032(tensorflo"
      "w/core/framework/node_def.proto\032(tensorf"
      "low/core/framework/function.proto\032%tenso"
      "rflow/core/protobuf/config.proto\032*tensor"
      "flow/core/lib/core/error_codes.proto\"\254\001\n"
      "\rTFOpKernelDef\022\031\n\021graph_def_version\030\001 \001("
      "\005\022$\n\007nodedef\030\002 \001(\0132\023.tensorflow.NodeDef\022"
      ")\n\010cfgProto\030\003 \001(\0132\027.tensorflow.ConfigPro"
      "to\022/\n\007funcDef\030\004 \001(\0132\036.tensorflow.Functio"
      "nDefLibrary\"\222\003\n\016TFOpContextDef\022\017\n\007step_i"
      "d\030\001 \001(\003\022\020\n\010frame_id\030\004 \001(\004\022\017\n\007iter_id\030\005 \001"
      "(\003\022\025\n\ris_input_dead\030\006 \001(\010\022\035\n\025host_temp_m"
      "emory_size\030\007 \001(\003\022\037\n\027device_temp_memory_s"
      "ize\030\010 \001(\003\022!\n\031host_persistent_alloc_ids\030\t"
      " \003(\003\022#\n\033device_persistent_alloc_ids\030\n \003("
      "\003\022(\n host_persistent_memory_allocated\030\013 "
      "\001(\003\022*\n\"device_persistent_memory_allocate"
      "d\030\014 \001(\003\022\026\n\016is_output_dead\030\r \001(\010\022+\n\013statu"
      "s_code\030\016 \001(\0162\026.tensorflow.error.Code\022\022\n\n"
      "status_msg\030\017 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 784);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tfoplibrary.proto", &protobuf_RegisterTypes);
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::AddDescriptors();
  ::tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tfoplibrary_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFOpKernelDef::kGraphDefVersionFieldNumber;
const int TFOpKernelDef::kNodedefFieldNumber;
const int TFOpKernelDef::kCfgProtoFieldNumber;
const int TFOpKernelDef::kFuncDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFOpKernelDef::TFOpKernelDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFOpKernelDef)
}
TFOpKernelDef::TFOpKernelDef(const TFOpKernelDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_nodedef()) {
    nodedef_ = new ::tensorflow::NodeDef(*from.nodedef_);
  } else {
    nodedef_ = NULL;
  }
  if (from.has_cfgproto()) {
    cfgproto_ = new ::tensorflow::ConfigProto(*from.cfgproto_);
  } else {
    cfgproto_ = NULL;
  }
  if (from.has_funcdef()) {
    funcdef_ = new ::tensorflow::FunctionDefLibrary(*from.funcdef_);
  } else {
    funcdef_ = NULL;
  }
  graph_def_version_ = from.graph_def_version_;
  // @@protoc_insertion_point(copy_constructor:executor.TFOpKernelDef)
}

void TFOpKernelDef::SharedCtor() {
  ::memset(&nodedef_, 0, reinterpret_cast<char*>(&graph_def_version_) -
    reinterpret_cast<char*>(&nodedef_) + sizeof(graph_def_version_));
  _cached_size_ = 0;
}

TFOpKernelDef::~TFOpKernelDef() {
  // @@protoc_insertion_point(destructor:executor.TFOpKernelDef)
  SharedDtor();
}

void TFOpKernelDef::SharedDtor() {
  if (this != internal_default_instance()) {
    delete nodedef_;
  }
  if (this != internal_default_instance()) {
    delete cfgproto_;
  }
  if (this != internal_default_instance()) {
    delete funcdef_;
  }
}

void TFOpKernelDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFOpKernelDef::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[0].descriptor;
}

const TFOpKernelDef& TFOpKernelDef::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFOpKernelDef* TFOpKernelDef::New(::google::protobuf::Arena* arena) const {
  TFOpKernelDef* n = new TFOpKernelDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFOpKernelDef::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFOpKernelDef)
  if (GetArenaNoVirtual() == NULL && nodedef_ != NULL) {
    delete nodedef_;
  }
  nodedef_ = NULL;
  if (GetArenaNoVirtual() == NULL && cfgproto_ != NULL) {
    delete cfgproto_;
  }
  cfgproto_ = NULL;
  if (GetArenaNoVirtual() == NULL && funcdef_ != NULL) {
    delete funcdef_;
  }
  funcdef_ = NULL;
  graph_def_version_ = 0;
}

bool TFOpKernelDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFOpKernelDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 graph_def_version = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &graph_def_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.NodeDef nodedef = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nodedef()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ConfigProto cfgProto = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cfgproto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.FunctionDefLibrary funcDef = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_funcdef()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFOpKernelDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFOpKernelDef)
  return false;
#undef DO_
}

void TFOpKernelDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFOpKernelDef)
  // int32 graph_def_version = 1;
  if (this->graph_def_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->graph_def_version(), output);
  }

  // .tensorflow.NodeDef nodedef = 2;
  if (this->has_nodedef()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->nodedef_, output);
  }

  // .tensorflow.ConfigProto cfgProto = 3;
  if (this->has_cfgproto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cfgproto_, output);
  }

  // .tensorflow.FunctionDefLibrary funcDef = 4;
  if (this->has_funcdef()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->funcdef_, output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFOpKernelDef)
}

::google::protobuf::uint8* TFOpKernelDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFOpKernelDef)
  // int32 graph_def_version = 1;
  if (this->graph_def_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->graph_def_version(), target);
  }

  // .tensorflow.NodeDef nodedef = 2;
  if (this->has_nodedef()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->nodedef_, false, target);
  }

  // .tensorflow.ConfigProto cfgProto = 3;
  if (this->has_cfgproto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->cfgproto_, false, target);
  }

  // .tensorflow.FunctionDefLibrary funcDef = 4;
  if (this->has_funcdef()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->funcdef_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFOpKernelDef)
  return target;
}

size_t TFOpKernelDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFOpKernelDef)
  size_t total_size = 0;

  // .tensorflow.NodeDef nodedef = 2;
  if (this->has_nodedef()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nodedef_);
  }

  // .tensorflow.ConfigProto cfgProto = 3;
  if (this->has_cfgproto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cfgproto_);
  }

  // .tensorflow.FunctionDefLibrary funcDef = 4;
  if (this->has_funcdef()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->funcdef_);
  }

  // int32 graph_def_version = 1;
  if (this->graph_def_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->graph_def_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFOpKernelDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFOpKernelDef)
  GOOGLE_DCHECK_NE(&from, this);
  const TFOpKernelDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFOpKernelDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFOpKernelDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFOpKernelDef)
    MergeFrom(*source);
  }
}

void TFOpKernelDef::MergeFrom(const TFOpKernelDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFOpKernelDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_nodedef()) {
    mutable_nodedef()->::tensorflow::NodeDef::MergeFrom(from.nodedef());
  }
  if (from.has_cfgproto()) {
    mutable_cfgproto()->::tensorflow::ConfigProto::MergeFrom(from.cfgproto());
  }
  if (from.has_funcdef()) {
    mutable_funcdef()->::tensorflow::FunctionDefLibrary::MergeFrom(from.funcdef());
  }
  if (from.graph_def_version() != 0) {
    set_graph_def_version(from.graph_def_version());
  }
}

void TFOpKernelDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFOpKernelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFOpKernelDef::CopyFrom(const TFOpKernelDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFOpKernelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFOpKernelDef::IsInitialized() const {
  return true;
}

void TFOpKernelDef::Swap(TFOpKernelDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFOpKernelDef::InternalSwap(TFOpKernelDef* other) {
  std::swap(nodedef_, other->nodedef_);
  std::swap(cfgproto_, other->cfgproto_);
  std::swap(funcdef_, other->funcdef_);
  std::swap(graph_def_version_, other->graph_def_version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFOpKernelDef::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFOpKernelDef

// int32 graph_def_version = 1;
void TFOpKernelDef::clear_graph_def_version() {
  graph_def_version_ = 0;
}
::google::protobuf::int32 TFOpKernelDef::graph_def_version() const {
  // @@protoc_insertion_point(field_get:executor.TFOpKernelDef.graph_def_version)
  return graph_def_version_;
}
void TFOpKernelDef::set_graph_def_version(::google::protobuf::int32 value) {
  
  graph_def_version_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpKernelDef.graph_def_version)
}

// .tensorflow.NodeDef nodedef = 2;
bool TFOpKernelDef::has_nodedef() const {
  return this != internal_default_instance() && nodedef_ != NULL;
}
void TFOpKernelDef::clear_nodedef() {
  if (GetArenaNoVirtual() == NULL && nodedef_ != NULL) delete nodedef_;
  nodedef_ = NULL;
}
const ::tensorflow::NodeDef& TFOpKernelDef::nodedef() const {
  // @@protoc_insertion_point(field_get:executor.TFOpKernelDef.nodedef)
  return nodedef_ != NULL ? *nodedef_
                         : *::tensorflow::NodeDef::internal_default_instance();
}
::tensorflow::NodeDef* TFOpKernelDef::mutable_nodedef() {
  
  if (nodedef_ == NULL) {
    nodedef_ = new ::tensorflow::NodeDef;
  }
  // @@protoc_insertion_point(field_mutable:executor.TFOpKernelDef.nodedef)
  return nodedef_;
}
::tensorflow::NodeDef* TFOpKernelDef::release_nodedef() {
  // @@protoc_insertion_point(field_release:executor.TFOpKernelDef.nodedef)
  
  ::tensorflow::NodeDef* temp = nodedef_;
  nodedef_ = NULL;
  return temp;
}
void TFOpKernelDef::set_allocated_nodedef(::tensorflow::NodeDef* nodedef) {
  delete nodedef_;
  if (nodedef != NULL && nodedef->GetArena() != NULL) {
    ::tensorflow::NodeDef* new_nodedef = new ::tensorflow::NodeDef;
    new_nodedef->CopyFrom(*nodedef);
    nodedef = new_nodedef;
  }
  nodedef_ = nodedef;
  if (nodedef) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.TFOpKernelDef.nodedef)
}

// .tensorflow.ConfigProto cfgProto = 3;
bool TFOpKernelDef::has_cfgproto() const {
  return this != internal_default_instance() && cfgproto_ != NULL;
}
void TFOpKernelDef::clear_cfgproto() {
  if (GetArenaNoVirtual() == NULL && cfgproto_ != NULL) delete cfgproto_;
  cfgproto_ = NULL;
}
const ::tensorflow::ConfigProto& TFOpKernelDef::cfgproto() const {
  // @@protoc_insertion_point(field_get:executor.TFOpKernelDef.cfgProto)
  return cfgproto_ != NULL ? *cfgproto_
                         : *::tensorflow::ConfigProto::internal_default_instance();
}
::tensorflow::ConfigProto* TFOpKernelDef::mutable_cfgproto() {
  
  if (cfgproto_ == NULL) {
    cfgproto_ = new ::tensorflow::ConfigProto;
  }
  // @@protoc_insertion_point(field_mutable:executor.TFOpKernelDef.cfgProto)
  return cfgproto_;
}
::tensorflow::ConfigProto* TFOpKernelDef::release_cfgproto() {
  // @@protoc_insertion_point(field_release:executor.TFOpKernelDef.cfgProto)
  
  ::tensorflow::ConfigProto* temp = cfgproto_;
  cfgproto_ = NULL;
  return temp;
}
void TFOpKernelDef::set_allocated_cfgproto(::tensorflow::ConfigProto* cfgproto) {
  delete cfgproto_;
  if (cfgproto != NULL && cfgproto->GetArena() != NULL) {
    ::tensorflow::ConfigProto* new_cfgproto = new ::tensorflow::ConfigProto;
    new_cfgproto->CopyFrom(*cfgproto);
    cfgproto = new_cfgproto;
  }
  cfgproto_ = cfgproto;
  if (cfgproto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.TFOpKernelDef.cfgProto)
}

// .tensorflow.FunctionDefLibrary funcDef = 4;
bool TFOpKernelDef::has_funcdef() const {
  return this != internal_default_instance() && funcdef_ != NULL;
}
void TFOpKernelDef::clear_funcdef() {
  if (GetArenaNoVirtual() == NULL && funcdef_ != NULL) delete funcdef_;
  funcdef_ = NULL;
}
const ::tensorflow::FunctionDefLibrary& TFOpKernelDef::funcdef() const {
  // @@protoc_insertion_point(field_get:executor.TFOpKernelDef.funcDef)
  return funcdef_ != NULL ? *funcdef_
                         : *::tensorflow::FunctionDefLibrary::internal_default_instance();
}
::tensorflow::FunctionDefLibrary* TFOpKernelDef::mutable_funcdef() {
  
  if (funcdef_ == NULL) {
    funcdef_ = new ::tensorflow::FunctionDefLibrary;
  }
  // @@protoc_insertion_point(field_mutable:executor.TFOpKernelDef.funcDef)
  return funcdef_;
}
::tensorflow::FunctionDefLibrary* TFOpKernelDef::release_funcdef() {
  // @@protoc_insertion_point(field_release:executor.TFOpKernelDef.funcDef)
  
  ::tensorflow::FunctionDefLibrary* temp = funcdef_;
  funcdef_ = NULL;
  return temp;
}
void TFOpKernelDef::set_allocated_funcdef(::tensorflow::FunctionDefLibrary* funcdef) {
  delete funcdef_;
  if (funcdef != NULL && funcdef->GetArena() != NULL) {
    ::tensorflow::FunctionDefLibrary* new_funcdef = new ::tensorflow::FunctionDefLibrary;
    new_funcdef->CopyFrom(*funcdef);
    funcdef = new_funcdef;
  }
  funcdef_ = funcdef;
  if (funcdef) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.TFOpKernelDef.funcDef)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFOpContextDef::kStepIdFieldNumber;
const int TFOpContextDef::kFrameIdFieldNumber;
const int TFOpContextDef::kIterIdFieldNumber;
const int TFOpContextDef::kIsInputDeadFieldNumber;
const int TFOpContextDef::kHostTempMemorySizeFieldNumber;
const int TFOpContextDef::kDeviceTempMemorySizeFieldNumber;
const int TFOpContextDef::kHostPersistentAllocIdsFieldNumber;
const int TFOpContextDef::kDevicePersistentAllocIdsFieldNumber;
const int TFOpContextDef::kHostPersistentMemoryAllocatedFieldNumber;
const int TFOpContextDef::kDevicePersistentMemoryAllocatedFieldNumber;
const int TFOpContextDef::kIsOutputDeadFieldNumber;
const int TFOpContextDef::kStatusCodeFieldNumber;
const int TFOpContextDef::kStatusMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFOpContextDef::TFOpContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFOpContextDef)
}
TFOpContextDef::TFOpContextDef(const TFOpContextDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      host_persistent_alloc_ids_(from.host_persistent_alloc_ids_),
      device_persistent_alloc_ids_(from.device_persistent_alloc_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_msg().size() > 0) {
    status_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_msg_);
  }
  ::memcpy(&step_id_, &from.step_id_,
    reinterpret_cast<char*>(&device_persistent_memory_allocated_) -
    reinterpret_cast<char*>(&step_id_) + sizeof(device_persistent_memory_allocated_));
  // @@protoc_insertion_point(copy_constructor:executor.TFOpContextDef)
}

void TFOpContextDef::SharedCtor() {
  status_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&step_id_, 0, reinterpret_cast<char*>(&device_persistent_memory_allocated_) -
    reinterpret_cast<char*>(&step_id_) + sizeof(device_persistent_memory_allocated_));
  _cached_size_ = 0;
}

TFOpContextDef::~TFOpContextDef() {
  // @@protoc_insertion_point(destructor:executor.TFOpContextDef)
  SharedDtor();
}

void TFOpContextDef::SharedDtor() {
  status_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TFOpContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFOpContextDef::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[1].descriptor;
}

const TFOpContextDef& TFOpContextDef::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFOpContextDef* TFOpContextDef::New(::google::protobuf::Arena* arena) const {
  TFOpContextDef* n = new TFOpContextDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFOpContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFOpContextDef)
  host_persistent_alloc_ids_.Clear();
  device_persistent_alloc_ids_.Clear();
  status_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&step_id_, 0, reinterpret_cast<char*>(&device_persistent_memory_allocated_) -
    reinterpret_cast<char*>(&step_id_) + sizeof(device_persistent_memory_allocated_));
}

bool TFOpContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFOpContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 step_id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 frame_id = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frame_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 iter_id = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iter_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_input_dead = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_input_dead_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 host_temp_memory_size = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &host_temp_memory_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 device_temp_memory_size = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &device_temp_memory_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 host_persistent_alloc_ids = 9;
      case 9: {
        if (tag == 74u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_host_persistent_alloc_ids())));
        } else if (tag == 72u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 74u, input, this->mutable_host_persistent_alloc_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 device_persistent_alloc_ids = 10;
      case 10: {
        if (tag == 82u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_device_persistent_alloc_ids())));
        } else if (tag == 80u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 82u, input, this->mutable_device_persistent_alloc_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 host_persistent_memory_allocated = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &host_persistent_memory_allocated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 device_persistent_memory_allocated = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &device_persistent_memory_allocated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_output_dead = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_output_dead_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.error.Code status_code = 14;
      case 14: {
        if (tag == 112u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status_code(static_cast< ::tensorflow::error::Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_msg = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_msg().data(), this->status_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "executor.TFOpContextDef.status_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFOpContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFOpContextDef)
  return false;
#undef DO_
}

void TFOpContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFOpContextDef)
  // int64 step_id = 1;
  if (this->step_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->step_id(), output);
  }

  // uint64 frame_id = 4;
  if (this->frame_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->frame_id(), output);
  }

  // int64 iter_id = 5;
  if (this->iter_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->iter_id(), output);
  }

  // bool is_input_dead = 6;
  if (this->is_input_dead() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_input_dead(), output);
  }

  // int64 host_temp_memory_size = 7;
  if (this->host_temp_memory_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->host_temp_memory_size(), output);
  }

  // int64 device_temp_memory_size = 8;
  if (this->device_temp_memory_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->device_temp_memory_size(), output);
  }

  // repeated int64 host_persistent_alloc_ids = 9;
  if (this->host_persistent_alloc_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_host_persistent_alloc_ids_cached_byte_size_);
  }
  for (int i = 0; i < this->host_persistent_alloc_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->host_persistent_alloc_ids(i), output);
  }

  // repeated int64 device_persistent_alloc_ids = 10;
  if (this->device_persistent_alloc_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_device_persistent_alloc_ids_cached_byte_size_);
  }
  for (int i = 0; i < this->device_persistent_alloc_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->device_persistent_alloc_ids(i), output);
  }

  // int64 host_persistent_memory_allocated = 11;
  if (this->host_persistent_memory_allocated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->host_persistent_memory_allocated(), output);
  }

  // int64 device_persistent_memory_allocated = 12;
  if (this->device_persistent_memory_allocated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->device_persistent_memory_allocated(), output);
  }

  // bool is_output_dead = 13;
  if (this->is_output_dead() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_output_dead(), output);
  }

  // .tensorflow.error.Code status_code = 14;
  if (this->status_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->status_code(), output);
  }

  // string status_msg = 15;
  if (this->status_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_msg().data(), this->status_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFOpContextDef.status_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->status_msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFOpContextDef)
}

::google::protobuf::uint8* TFOpContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFOpContextDef)
  // int64 step_id = 1;
  if (this->step_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->step_id(), target);
  }

  // uint64 frame_id = 4;
  if (this->frame_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->frame_id(), target);
  }

  // int64 iter_id = 5;
  if (this->iter_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->iter_id(), target);
  }

  // bool is_input_dead = 6;
  if (this->is_input_dead() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_input_dead(), target);
  }

  // int64 host_temp_memory_size = 7;
  if (this->host_temp_memory_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->host_temp_memory_size(), target);
  }

  // int64 device_temp_memory_size = 8;
  if (this->device_temp_memory_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->device_temp_memory_size(), target);
  }

  // repeated int64 host_persistent_alloc_ids = 9;
  if (this->host_persistent_alloc_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _host_persistent_alloc_ids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->host_persistent_alloc_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->host_persistent_alloc_ids(i), target);
  }

  // repeated int64 device_persistent_alloc_ids = 10;
  if (this->device_persistent_alloc_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _device_persistent_alloc_ids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->device_persistent_alloc_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->device_persistent_alloc_ids(i), target);
  }

  // int64 host_persistent_memory_allocated = 11;
  if (this->host_persistent_memory_allocated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->host_persistent_memory_allocated(), target);
  }

  // int64 device_persistent_memory_allocated = 12;
  if (this->device_persistent_memory_allocated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->device_persistent_memory_allocated(), target);
  }

  // bool is_output_dead = 13;
  if (this->is_output_dead() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_output_dead(), target);
  }

  // .tensorflow.error.Code status_code = 14;
  if (this->status_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->status_code(), target);
  }

  // string status_msg = 15;
  if (this->status_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_msg().data(), this->status_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFOpContextDef.status_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->status_msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFOpContextDef)
  return target;
}

size_t TFOpContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFOpContextDef)
  size_t total_size = 0;

  // repeated int64 host_persistent_alloc_ids = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->host_persistent_alloc_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _host_persistent_alloc_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 device_persistent_alloc_ids = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->device_persistent_alloc_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _device_persistent_alloc_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string status_msg = 15;
  if (this->status_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_msg());
  }

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->step_id());
  }

  // uint64 frame_id = 4;
  if (this->frame_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->frame_id());
  }

  // int64 iter_id = 5;
  if (this->iter_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->iter_id());
  }

  // int64 host_temp_memory_size = 7;
  if (this->host_temp_memory_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->host_temp_memory_size());
  }

  // int64 device_temp_memory_size = 8;
  if (this->device_temp_memory_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->device_temp_memory_size());
  }

  // int64 host_persistent_memory_allocated = 11;
  if (this->host_persistent_memory_allocated() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->host_persistent_memory_allocated());
  }

  // bool is_input_dead = 6;
  if (this->is_input_dead() != 0) {
    total_size += 1 + 1;
  }

  // bool is_output_dead = 13;
  if (this->is_output_dead() != 0) {
    total_size += 1 + 1;
  }

  // .tensorflow.error.Code status_code = 14;
  if (this->status_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_code());
  }

  // int64 device_persistent_memory_allocated = 12;
  if (this->device_persistent_memory_allocated() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->device_persistent_memory_allocated());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFOpContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFOpContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  const TFOpContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFOpContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFOpContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFOpContextDef)
    MergeFrom(*source);
  }
}

void TFOpContextDef::MergeFrom(const TFOpContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFOpContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_persistent_alloc_ids_.MergeFrom(from.host_persistent_alloc_ids_);
  device_persistent_alloc_ids_.MergeFrom(from.device_persistent_alloc_ids_);
  if (from.status_msg().size() > 0) {

    status_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_msg_);
  }
  if (from.step_id() != 0) {
    set_step_id(from.step_id());
  }
  if (from.frame_id() != 0) {
    set_frame_id(from.frame_id());
  }
  if (from.iter_id() != 0) {
    set_iter_id(from.iter_id());
  }
  if (from.host_temp_memory_size() != 0) {
    set_host_temp_memory_size(from.host_temp_memory_size());
  }
  if (from.device_temp_memory_size() != 0) {
    set_device_temp_memory_size(from.device_temp_memory_size());
  }
  if (from.host_persistent_memory_allocated() != 0) {
    set_host_persistent_memory_allocated(from.host_persistent_memory_allocated());
  }
  if (from.is_input_dead() != 0) {
    set_is_input_dead(from.is_input_dead());
  }
  if (from.is_output_dead() != 0) {
    set_is_output_dead(from.is_output_dead());
  }
  if (from.status_code() != 0) {
    set_status_code(from.status_code());
  }
  if (from.device_persistent_memory_allocated() != 0) {
    set_device_persistent_memory_allocated(from.device_persistent_memory_allocated());
  }
}

void TFOpContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFOpContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFOpContextDef::CopyFrom(const TFOpContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFOpContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFOpContextDef::IsInitialized() const {
  return true;
}

void TFOpContextDef::Swap(TFOpContextDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFOpContextDef::InternalSwap(TFOpContextDef* other) {
  host_persistent_alloc_ids_.UnsafeArenaSwap(&other->host_persistent_alloc_ids_);
  device_persistent_alloc_ids_.UnsafeArenaSwap(&other->device_persistent_alloc_ids_);
  status_msg_.Swap(&other->status_msg_);
  std::swap(step_id_, other->step_id_);
  std::swap(frame_id_, other->frame_id_);
  std::swap(iter_id_, other->iter_id_);
  std::swap(host_temp_memory_size_, other->host_temp_memory_size_);
  std::swap(device_temp_memory_size_, other->device_temp_memory_size_);
  std::swap(host_persistent_memory_allocated_, other->host_persistent_memory_allocated_);
  std::swap(is_input_dead_, other->is_input_dead_);
  std::swap(is_output_dead_, other->is_output_dead_);
  std::swap(status_code_, other->status_code_);
  std::swap(device_persistent_memory_allocated_, other->device_persistent_memory_allocated_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFOpContextDef::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFOpContextDef

// int64 step_id = 1;
void TFOpContextDef::clear_step_id() {
  step_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TFOpContextDef::step_id() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.step_id)
  return step_id_;
}
void TFOpContextDef::set_step_id(::google::protobuf::int64 value) {
  
  step_id_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.step_id)
}

// uint64 frame_id = 4;
void TFOpContextDef::clear_frame_id() {
  frame_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TFOpContextDef::frame_id() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.frame_id)
  return frame_id_;
}
void TFOpContextDef::set_frame_id(::google::protobuf::uint64 value) {
  
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.frame_id)
}

// int64 iter_id = 5;
void TFOpContextDef::clear_iter_id() {
  iter_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TFOpContextDef::iter_id() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.iter_id)
  return iter_id_;
}
void TFOpContextDef::set_iter_id(::google::protobuf::int64 value) {
  
  iter_id_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.iter_id)
}

// bool is_input_dead = 6;
void TFOpContextDef::clear_is_input_dead() {
  is_input_dead_ = false;
}
bool TFOpContextDef::is_input_dead() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.is_input_dead)
  return is_input_dead_;
}
void TFOpContextDef::set_is_input_dead(bool value) {
  
  is_input_dead_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.is_input_dead)
}

// int64 host_temp_memory_size = 7;
void TFOpContextDef::clear_host_temp_memory_size() {
  host_temp_memory_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TFOpContextDef::host_temp_memory_size() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.host_temp_memory_size)
  return host_temp_memory_size_;
}
void TFOpContextDef::set_host_temp_memory_size(::google::protobuf::int64 value) {
  
  host_temp_memory_size_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.host_temp_memory_size)
}

// int64 device_temp_memory_size = 8;
void TFOpContextDef::clear_device_temp_memory_size() {
  device_temp_memory_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TFOpContextDef::device_temp_memory_size() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.device_temp_memory_size)
  return device_temp_memory_size_;
}
void TFOpContextDef::set_device_temp_memory_size(::google::protobuf::int64 value) {
  
  device_temp_memory_size_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.device_temp_memory_size)
}

// repeated int64 host_persistent_alloc_ids = 9;
int TFOpContextDef::host_persistent_alloc_ids_size() const {
  return host_persistent_alloc_ids_.size();
}
void TFOpContextDef::clear_host_persistent_alloc_ids() {
  host_persistent_alloc_ids_.Clear();
}
::google::protobuf::int64 TFOpContextDef::host_persistent_alloc_ids(int index) const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.host_persistent_alloc_ids)
  return host_persistent_alloc_ids_.Get(index);
}
void TFOpContextDef::set_host_persistent_alloc_ids(int index, ::google::protobuf::int64 value) {
  host_persistent_alloc_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.host_persistent_alloc_ids)
}
void TFOpContextDef::add_host_persistent_alloc_ids(::google::protobuf::int64 value) {
  host_persistent_alloc_ids_.Add(value);
  // @@protoc_insertion_point(field_add:executor.TFOpContextDef.host_persistent_alloc_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TFOpContextDef::host_persistent_alloc_ids() const {
  // @@protoc_insertion_point(field_list:executor.TFOpContextDef.host_persistent_alloc_ids)
  return host_persistent_alloc_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TFOpContextDef::mutable_host_persistent_alloc_ids() {
  // @@protoc_insertion_point(field_mutable_list:executor.TFOpContextDef.host_persistent_alloc_ids)
  return &host_persistent_alloc_ids_;
}

// repeated int64 device_persistent_alloc_ids = 10;
int TFOpContextDef::device_persistent_alloc_ids_size() const {
  return device_persistent_alloc_ids_.size();
}
void TFOpContextDef::clear_device_persistent_alloc_ids() {
  device_persistent_alloc_ids_.Clear();
}
::google::protobuf::int64 TFOpContextDef::device_persistent_alloc_ids(int index) const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.device_persistent_alloc_ids)
  return device_persistent_alloc_ids_.Get(index);
}
void TFOpContextDef::set_device_persistent_alloc_ids(int index, ::google::protobuf::int64 value) {
  device_persistent_alloc_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.device_persistent_alloc_ids)
}
void TFOpContextDef::add_device_persistent_alloc_ids(::google::protobuf::int64 value) {
  device_persistent_alloc_ids_.Add(value);
  // @@protoc_insertion_point(field_add:executor.TFOpContextDef.device_persistent_alloc_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TFOpContextDef::device_persistent_alloc_ids() const {
  // @@protoc_insertion_point(field_list:executor.TFOpContextDef.device_persistent_alloc_ids)
  return device_persistent_alloc_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TFOpContextDef::mutable_device_persistent_alloc_ids() {
  // @@protoc_insertion_point(field_mutable_list:executor.TFOpContextDef.device_persistent_alloc_ids)
  return &device_persistent_alloc_ids_;
}

// int64 host_persistent_memory_allocated = 11;
void TFOpContextDef::clear_host_persistent_memory_allocated() {
  host_persistent_memory_allocated_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TFOpContextDef::host_persistent_memory_allocated() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.host_persistent_memory_allocated)
  return host_persistent_memory_allocated_;
}
void TFOpContextDef::set_host_persistent_memory_allocated(::google::protobuf::int64 value) {
  
  host_persistent_memory_allocated_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.host_persistent_memory_allocated)
}

// int64 device_persistent_memory_allocated = 12;
void TFOpContextDef::clear_device_persistent_memory_allocated() {
  device_persistent_memory_allocated_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TFOpContextDef::device_persistent_memory_allocated() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.device_persistent_memory_allocated)
  return device_persistent_memory_allocated_;
}
void TFOpContextDef::set_device_persistent_memory_allocated(::google::protobuf::int64 value) {
  
  device_persistent_memory_allocated_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.device_persistent_memory_allocated)
}

// bool is_output_dead = 13;
void TFOpContextDef::clear_is_output_dead() {
  is_output_dead_ = false;
}
bool TFOpContextDef::is_output_dead() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.is_output_dead)
  return is_output_dead_;
}
void TFOpContextDef::set_is_output_dead(bool value) {
  
  is_output_dead_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.is_output_dead)
}

// .tensorflow.error.Code status_code = 14;
void TFOpContextDef::clear_status_code() {
  status_code_ = 0;
}
::tensorflow::error::Code TFOpContextDef::status_code() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.status_code)
  return static_cast< ::tensorflow::error::Code >(status_code_);
}
void TFOpContextDef::set_status_code(::tensorflow::error::Code value) {
  
  status_code_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.status_code)
}

// string status_msg = 15;
void TFOpContextDef::clear_status_msg() {
  status_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TFOpContextDef::status_msg() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.status_msg)
  return status_msg_.GetNoArena();
}
void TFOpContextDef::set_status_msg(const ::std::string& value) {
  
  status_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.status_msg)
}
#if LANG_CXX11
void TFOpContextDef::set_status_msg(::std::string&& value) {
  
  status_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.TFOpContextDef.status_msg)
}
#endif
void TFOpContextDef::set_status_msg(const char* value) {
  
  status_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.TFOpContextDef.status_msg)
}
void TFOpContextDef::set_status_msg(const char* value, size_t size) {
  
  status_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.TFOpContextDef.status_msg)
}
::std::string* TFOpContextDef::mutable_status_msg() {
  
  // @@protoc_insertion_point(field_mutable:executor.TFOpContextDef.status_msg)
  return status_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFOpContextDef::release_status_msg() {
  // @@protoc_insertion_point(field_release:executor.TFOpContextDef.status_msg)
  
  return status_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFOpContextDef::set_allocated_status_msg(::std::string* status_msg) {
  if (status_msg != NULL) {
    
  } else {
    
  }
  status_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_msg);
  // @@protoc_insertion_point(field_set_allocated:executor.TFOpContextDef.status_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace executor

// @@protoc_insertion_point(global_scope)
