// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tfoplibrary.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tfoplibrary.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace executor {
class TFSessionArgsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFSessionArgs> {
} _TFSessionArgs_default_instance_;
class TFSessionCreatedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFSessionCreated> {
} _TFSessionCreated_default_instance_;
class TFSessionCloseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFSessionClose> {
} _TFSessionClose_default_instance_;
class TFOpKernelDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFOpKernelDef> {
} _TFOpKernelDef_default_instance_;
class TFOpContextDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFOpContextDef> {
} _TFOpContextDef_default_instance_;
class TFOpContextUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFOpContextUpdate> {
} _TFOpContextUpdate_default_instance_;
class TFRendezItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFRendezItem> {
} _TFRendezItem_default_instance_;
class TFRendezRecvRequestsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFRendezRecvRequests> {
} _TFRendezRecvRequests_default_instance_;
class TFRendezRecvUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFRendezRecvUpdate> {
} _TFRendezRecvUpdate_default_instance_;
class TFTensorItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TFTensorItem> {
} _TFTensorItem_default_instance_;

namespace protobuf_tfoplibrary_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSessionArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSessionArgs, cfgproto_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSessionCreated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSessionCreated, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSessionClose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFSessionClose, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpKernelDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpKernelDef, nodedef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpKernelDef, isasync_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, step_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, iter_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, is_input_dead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextDef, inputs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextUpdate, is_output_dead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextUpdate, outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextUpdate, rendeztensors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextUpdate, status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFOpContextUpdate, status_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezItem, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezItem, allocattributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezItem, isdead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezItem, val_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezRecvRequests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezRecvRequests, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezRecvRequests, allocattributes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezRecvUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezRecvUpdate, forseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFRendezRecvUpdate, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFTensorItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFTensorItem, is_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFTensorItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFTensorItem, meta_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(TFSessionArgs)},
  { 5, -1, sizeof(TFSessionCreated)},
  { 10, -1, sizeof(TFSessionClose)},
  { 15, -1, sizeof(TFOpKernelDef)},
  { 21, -1, sizeof(TFOpContextDef)},
  { 30, -1, sizeof(TFOpContextUpdate)},
  { 39, -1, sizeof(TFRendezItem)},
  { 47, -1, sizeof(TFRendezRecvRequests)},
  { 53, -1, sizeof(TFRendezRecvUpdate)},
  { 59, -1, sizeof(TFTensorItem)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFSessionArgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFSessionCreated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFSessionClose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFOpKernelDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFOpContextDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFOpContextUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFRendezItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFRendezRecvRequests_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFRendezRecvUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TFTensorItem_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tfoplibrary.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace

void TableStruct::Shutdown() {
  _TFSessionArgs_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TFSessionCreated_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TFSessionClose_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _TFOpKernelDef_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _TFOpContextDef_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _TFOpContextUpdate_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _TFRendezItem_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _TFRendezRecvRequests_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _TFRendezRecvUpdate_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _TFTensorItem_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::InitDefaults();
  ::tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::InitDefaults();
  _TFSessionArgs_default_instance_.DefaultConstruct();
  _TFSessionCreated_default_instance_.DefaultConstruct();
  _TFSessionClose_default_instance_.DefaultConstruct();
  _TFOpKernelDef_default_instance_.DefaultConstruct();
  _TFOpContextDef_default_instance_.DefaultConstruct();
  _TFOpContextUpdate_default_instance_.DefaultConstruct();
  _TFRendezItem_default_instance_.DefaultConstruct();
  _TFRendezRecvRequests_default_instance_.DefaultConstruct();
  _TFRendezRecvUpdate_default_instance_.DefaultConstruct();
  _TFTensorItem_default_instance_.DefaultConstruct();
  _TFSessionArgs_default_instance_.get_mutable()->cfgproto_ = const_cast< ::tensorflow::ConfigProto*>(
      ::tensorflow::ConfigProto::internal_default_instance());
  _TFOpKernelDef_default_instance_.get_mutable()->nodedef_ = const_cast< ::tensorflow::NodeDef*>(
      ::tensorflow::NodeDef::internal_default_instance());
  _TFRendezItem_default_instance_.get_mutable()->val_ = const_cast< ::tensorflow::TensorProto*>(
      ::tensorflow::TensorProto::internal_default_instance());
  _TFTensorItem_default_instance_.get_mutable()->meta_ = const_cast< ::tensorflow::TensorProto*>(
      ::tensorflow::TensorProto::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021tfoplibrary.proto\022\010executor\032(tensorflo"
      "w/core/framework/node_def.proto\032(tensorf"
      "low/core/framework/function.proto\032&tenso"
      "rflow/core/framework/tensor.proto\032%tenso"
      "rflow/core/protobuf/config.proto\032*tensor"
      "flow/core/lib/core/error_codes.proto\":\n\r"
      "TFSessionArgs\022)\n\010cfgProto\030\001 \001(\0132\027.tensor"
      "flow.ConfigProto\"%\n\020TFSessionCreated\022\021\n\t"
      "sessionId\030\002 \001(\014\"#\n\016TFSessionClose\022\021\n\tses"
      "sionId\030\001 \001(\014\"F\n\rTFOpKernelDef\022$\n\007nodedef"
      "\030\002 \001(\0132\023.tensorflow.NodeDef\022\017\n\007isAsync\030\005"
      " \001(\010\"\203\001\n\016TFOpContextDef\022\017\n\007step_id\030\001 \001(\003"
      "\022\020\n\010frame_id\030\002 \001(\004\022\017\n\007iter_id\030\003 \001(\003\022\025\n\ri"
      "s_input_dead\030\004 \001(\010\022&\n\006inputs\030\005 \003(\0132\026.exe"
      "cutor.TFTensorItem\"\304\001\n\021TFOpContextUpdate"
      "\022\026\n\016is_output_dead\030\001 \001(\010\022\'\n\007outputs\030\002 \003("
      "\0132\026.executor.TFTensorItem\022-\n\rrendezTenso"
      "rs\030\003 \003(\0132\026.executor.TFRendezItem\022+\n\013stat"
      "us_code\030\004 \001(\0162\026.tensorflow.error.Code\022\022\n"
      "\nstatus_msg\030\005 \001(\t\"j\n\014TFRendezItem\022\013\n\003key"
      "\030\001 \001(\t\022\027\n\017allocAttributes\030\002 \001(\r\022\016\n\006isDea"
      "d\030\003 \001(\010\022$\n\003val\030\004 \001(\0132\027.tensorflow.Tensor"
      "Proto\"<\n\024TFRendezRecvRequests\022\013\n\003key\030\001 \003"
      "(\t\022\027\n\017allocAttributes\030\002 \003(\r\"K\n\022TFRendezR"
      "ecvUpdate\022\016\n\006forSeq\030\001 \001(\004\022%\n\005items\030\002 \003(\013"
      "2\026.executor.TFRendezItem\"S\n\014TFTensorItem"
      "\022\016\n\006is_ref\030\001 \001(\010\022\014\n\004name\030\002 \001(\t\022%\n\004meta\030\003"
      " \001(\0132\027.tensorflow.TensorProtob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tfoplibrary.proto", &protobuf_RegisterTypes);
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::AddDescriptors();
  ::tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tfoplibrary_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFSessionArgs::kCfgProtoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFSessionArgs::TFSessionArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFSessionArgs)
}
TFSessionArgs::TFSessionArgs(const TFSessionArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cfgproto()) {
    cfgproto_ = new ::tensorflow::ConfigProto(*from.cfgproto_);
  } else {
    cfgproto_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:executor.TFSessionArgs)
}

void TFSessionArgs::SharedCtor() {
  cfgproto_ = NULL;
  _cached_size_ = 0;
}

TFSessionArgs::~TFSessionArgs() {
  // @@protoc_insertion_point(destructor:executor.TFSessionArgs)
  SharedDtor();
}

void TFSessionArgs::SharedDtor() {
  if (this != internal_default_instance()) {
    delete cfgproto_;
  }
}

void TFSessionArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFSessionArgs::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[0].descriptor;
}

const TFSessionArgs& TFSessionArgs::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFSessionArgs* TFSessionArgs::New(::google::protobuf::Arena* arena) const {
  TFSessionArgs* n = new TFSessionArgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFSessionArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFSessionArgs)
  if (GetArenaNoVirtual() == NULL && cfgproto_ != NULL) {
    delete cfgproto_;
  }
  cfgproto_ = NULL;
}

bool TFSessionArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFSessionArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.ConfigProto cfgProto = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cfgproto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFSessionArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFSessionArgs)
  return false;
#undef DO_
}

void TFSessionArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFSessionArgs)
  // .tensorflow.ConfigProto cfgProto = 1;
  if (this->has_cfgproto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cfgproto_, output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFSessionArgs)
}

::google::protobuf::uint8* TFSessionArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFSessionArgs)
  // .tensorflow.ConfigProto cfgProto = 1;
  if (this->has_cfgproto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->cfgproto_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFSessionArgs)
  return target;
}

size_t TFSessionArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFSessionArgs)
  size_t total_size = 0;

  // .tensorflow.ConfigProto cfgProto = 1;
  if (this->has_cfgproto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cfgproto_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFSessionArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFSessionArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const TFSessionArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFSessionArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFSessionArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFSessionArgs)
    MergeFrom(*source);
  }
}

void TFSessionArgs::MergeFrom(const TFSessionArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFSessionArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cfgproto()) {
    mutable_cfgproto()->::tensorflow::ConfigProto::MergeFrom(from.cfgproto());
  }
}

void TFSessionArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFSessionArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFSessionArgs::CopyFrom(const TFSessionArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFSessionArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFSessionArgs::IsInitialized() const {
  return true;
}

void TFSessionArgs::Swap(TFSessionArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFSessionArgs::InternalSwap(TFSessionArgs* other) {
  std::swap(cfgproto_, other->cfgproto_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFSessionArgs::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFSessionArgs

// .tensorflow.ConfigProto cfgProto = 1;
bool TFSessionArgs::has_cfgproto() const {
  return this != internal_default_instance() && cfgproto_ != NULL;
}
void TFSessionArgs::clear_cfgproto() {
  if (GetArenaNoVirtual() == NULL && cfgproto_ != NULL) delete cfgproto_;
  cfgproto_ = NULL;
}
const ::tensorflow::ConfigProto& TFSessionArgs::cfgproto() const {
  // @@protoc_insertion_point(field_get:executor.TFSessionArgs.cfgProto)
  return cfgproto_ != NULL ? *cfgproto_
                         : *::tensorflow::ConfigProto::internal_default_instance();
}
::tensorflow::ConfigProto* TFSessionArgs::mutable_cfgproto() {
  
  if (cfgproto_ == NULL) {
    cfgproto_ = new ::tensorflow::ConfigProto;
  }
  // @@protoc_insertion_point(field_mutable:executor.TFSessionArgs.cfgProto)
  return cfgproto_;
}
::tensorflow::ConfigProto* TFSessionArgs::release_cfgproto() {
  // @@protoc_insertion_point(field_release:executor.TFSessionArgs.cfgProto)
  
  ::tensorflow::ConfigProto* temp = cfgproto_;
  cfgproto_ = NULL;
  return temp;
}
void TFSessionArgs::set_allocated_cfgproto(::tensorflow::ConfigProto* cfgproto) {
  delete cfgproto_;
  if (cfgproto != NULL && cfgproto->GetArena() != NULL) {
    ::tensorflow::ConfigProto* new_cfgproto = new ::tensorflow::ConfigProto;
    new_cfgproto->CopyFrom(*cfgproto);
    cfgproto = new_cfgproto;
  }
  cfgproto_ = cfgproto;
  if (cfgproto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.TFSessionArgs.cfgProto)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFSessionCreated::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFSessionCreated::TFSessionCreated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFSessionCreated)
}
TFSessionCreated::TFSessionCreated(const TFSessionCreated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionid().size() > 0) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  // @@protoc_insertion_point(copy_constructor:executor.TFSessionCreated)
}

void TFSessionCreated::SharedCtor() {
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TFSessionCreated::~TFSessionCreated() {
  // @@protoc_insertion_point(destructor:executor.TFSessionCreated)
  SharedDtor();
}

void TFSessionCreated::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TFSessionCreated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFSessionCreated::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[1].descriptor;
}

const TFSessionCreated& TFSessionCreated::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFSessionCreated* TFSessionCreated::New(::google::protobuf::Arena* arena) const {
  TFSessionCreated* n = new TFSessionCreated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFSessionCreated::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFSessionCreated)
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TFSessionCreated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFSessionCreated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes sessionId = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sessionid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFSessionCreated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFSessionCreated)
  return false;
#undef DO_
}

void TFSessionCreated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFSessionCreated)
  // bytes sessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sessionid(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFSessionCreated)
}

::google::protobuf::uint8* TFSessionCreated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFSessionCreated)
  // bytes sessionId = 2;
  if (this->sessionid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sessionid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFSessionCreated)
  return target;
}

size_t TFSessionCreated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFSessionCreated)
  size_t total_size = 0;

  // bytes sessionId = 2;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFSessionCreated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFSessionCreated)
  GOOGLE_DCHECK_NE(&from, this);
  const TFSessionCreated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFSessionCreated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFSessionCreated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFSessionCreated)
    MergeFrom(*source);
  }
}

void TFSessionCreated::MergeFrom(const TFSessionCreated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFSessionCreated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
}

void TFSessionCreated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFSessionCreated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFSessionCreated::CopyFrom(const TFSessionCreated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFSessionCreated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFSessionCreated::IsInitialized() const {
  return true;
}

void TFSessionCreated::Swap(TFSessionCreated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFSessionCreated::InternalSwap(TFSessionCreated* other) {
  sessionid_.Swap(&other->sessionid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFSessionCreated::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFSessionCreated

// bytes sessionId = 2;
void TFSessionCreated::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TFSessionCreated::sessionid() const {
  // @@protoc_insertion_point(field_get:executor.TFSessionCreated.sessionId)
  return sessionid_.GetNoArena();
}
void TFSessionCreated::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.TFSessionCreated.sessionId)
}
#if LANG_CXX11
void TFSessionCreated::set_sessionid(::std::string&& value) {
  
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.TFSessionCreated.sessionId)
}
#endif
void TFSessionCreated::set_sessionid(const char* value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.TFSessionCreated.sessionId)
}
void TFSessionCreated::set_sessionid(const void* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.TFSessionCreated.sessionId)
}
::std::string* TFSessionCreated::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:executor.TFSessionCreated.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFSessionCreated::release_sessionid() {
  // @@protoc_insertion_point(field_release:executor.TFSessionCreated.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFSessionCreated::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:executor.TFSessionCreated.sessionId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFSessionClose::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFSessionClose::TFSessionClose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFSessionClose)
}
TFSessionClose::TFSessionClose(const TFSessionClose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionid().size() > 0) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  // @@protoc_insertion_point(copy_constructor:executor.TFSessionClose)
}

void TFSessionClose::SharedCtor() {
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TFSessionClose::~TFSessionClose() {
  // @@protoc_insertion_point(destructor:executor.TFSessionClose)
  SharedDtor();
}

void TFSessionClose::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TFSessionClose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFSessionClose::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[2].descriptor;
}

const TFSessionClose& TFSessionClose::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFSessionClose* TFSessionClose::New(::google::protobuf::Arena* arena) const {
  TFSessionClose* n = new TFSessionClose;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFSessionClose::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFSessionClose)
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TFSessionClose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFSessionClose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes sessionId = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sessionid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFSessionClose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFSessionClose)
  return false;
#undef DO_
}

void TFSessionClose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFSessionClose)
  // bytes sessionId = 1;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sessionid(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFSessionClose)
}

::google::protobuf::uint8* TFSessionClose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFSessionClose)
  // bytes sessionId = 1;
  if (this->sessionid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sessionid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFSessionClose)
  return target;
}

size_t TFSessionClose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFSessionClose)
  size_t total_size = 0;

  // bytes sessionId = 1;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFSessionClose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFSessionClose)
  GOOGLE_DCHECK_NE(&from, this);
  const TFSessionClose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFSessionClose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFSessionClose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFSessionClose)
    MergeFrom(*source);
  }
}

void TFSessionClose::MergeFrom(const TFSessionClose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFSessionClose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
}

void TFSessionClose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFSessionClose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFSessionClose::CopyFrom(const TFSessionClose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFSessionClose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFSessionClose::IsInitialized() const {
  return true;
}

void TFSessionClose::Swap(TFSessionClose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFSessionClose::InternalSwap(TFSessionClose* other) {
  sessionid_.Swap(&other->sessionid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFSessionClose::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFSessionClose

// bytes sessionId = 1;
void TFSessionClose::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TFSessionClose::sessionid() const {
  // @@protoc_insertion_point(field_get:executor.TFSessionClose.sessionId)
  return sessionid_.GetNoArena();
}
void TFSessionClose::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.TFSessionClose.sessionId)
}
#if LANG_CXX11
void TFSessionClose::set_sessionid(::std::string&& value) {
  
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.TFSessionClose.sessionId)
}
#endif
void TFSessionClose::set_sessionid(const char* value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.TFSessionClose.sessionId)
}
void TFSessionClose::set_sessionid(const void* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.TFSessionClose.sessionId)
}
::std::string* TFSessionClose::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:executor.TFSessionClose.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFSessionClose::release_sessionid() {
  // @@protoc_insertion_point(field_release:executor.TFSessionClose.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFSessionClose::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:executor.TFSessionClose.sessionId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFOpKernelDef::kNodedefFieldNumber;
const int TFOpKernelDef::kIsAsyncFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFOpKernelDef::TFOpKernelDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFOpKernelDef)
}
TFOpKernelDef::TFOpKernelDef(const TFOpKernelDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_nodedef()) {
    nodedef_ = new ::tensorflow::NodeDef(*from.nodedef_);
  } else {
    nodedef_ = NULL;
  }
  isasync_ = from.isasync_;
  // @@protoc_insertion_point(copy_constructor:executor.TFOpKernelDef)
}

void TFOpKernelDef::SharedCtor() {
  ::memset(&nodedef_, 0, reinterpret_cast<char*>(&isasync_) -
    reinterpret_cast<char*>(&nodedef_) + sizeof(isasync_));
  _cached_size_ = 0;
}

TFOpKernelDef::~TFOpKernelDef() {
  // @@protoc_insertion_point(destructor:executor.TFOpKernelDef)
  SharedDtor();
}

void TFOpKernelDef::SharedDtor() {
  if (this != internal_default_instance()) {
    delete nodedef_;
  }
}

void TFOpKernelDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFOpKernelDef::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[3].descriptor;
}

const TFOpKernelDef& TFOpKernelDef::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFOpKernelDef* TFOpKernelDef::New(::google::protobuf::Arena* arena) const {
  TFOpKernelDef* n = new TFOpKernelDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFOpKernelDef::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFOpKernelDef)
  if (GetArenaNoVirtual() == NULL && nodedef_ != NULL) {
    delete nodedef_;
  }
  nodedef_ = NULL;
  isasync_ = false;
}

bool TFOpKernelDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFOpKernelDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.NodeDef nodedef = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nodedef()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isAsync = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isasync_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFOpKernelDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFOpKernelDef)
  return false;
#undef DO_
}

void TFOpKernelDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFOpKernelDef)
  // .tensorflow.NodeDef nodedef = 2;
  if (this->has_nodedef()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->nodedef_, output);
  }

  // bool isAsync = 5;
  if (this->isasync() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isasync(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFOpKernelDef)
}

::google::protobuf::uint8* TFOpKernelDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFOpKernelDef)
  // .tensorflow.NodeDef nodedef = 2;
  if (this->has_nodedef()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->nodedef_, false, target);
  }

  // bool isAsync = 5;
  if (this->isasync() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isasync(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFOpKernelDef)
  return target;
}

size_t TFOpKernelDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFOpKernelDef)
  size_t total_size = 0;

  // .tensorflow.NodeDef nodedef = 2;
  if (this->has_nodedef()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nodedef_);
  }

  // bool isAsync = 5;
  if (this->isasync() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFOpKernelDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFOpKernelDef)
  GOOGLE_DCHECK_NE(&from, this);
  const TFOpKernelDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFOpKernelDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFOpKernelDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFOpKernelDef)
    MergeFrom(*source);
  }
}

void TFOpKernelDef::MergeFrom(const TFOpKernelDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFOpKernelDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_nodedef()) {
    mutable_nodedef()->::tensorflow::NodeDef::MergeFrom(from.nodedef());
  }
  if (from.isasync() != 0) {
    set_isasync(from.isasync());
  }
}

void TFOpKernelDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFOpKernelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFOpKernelDef::CopyFrom(const TFOpKernelDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFOpKernelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFOpKernelDef::IsInitialized() const {
  return true;
}

void TFOpKernelDef::Swap(TFOpKernelDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFOpKernelDef::InternalSwap(TFOpKernelDef* other) {
  std::swap(nodedef_, other->nodedef_);
  std::swap(isasync_, other->isasync_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFOpKernelDef::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFOpKernelDef

// .tensorflow.NodeDef nodedef = 2;
bool TFOpKernelDef::has_nodedef() const {
  return this != internal_default_instance() && nodedef_ != NULL;
}
void TFOpKernelDef::clear_nodedef() {
  if (GetArenaNoVirtual() == NULL && nodedef_ != NULL) delete nodedef_;
  nodedef_ = NULL;
}
const ::tensorflow::NodeDef& TFOpKernelDef::nodedef() const {
  // @@protoc_insertion_point(field_get:executor.TFOpKernelDef.nodedef)
  return nodedef_ != NULL ? *nodedef_
                         : *::tensorflow::NodeDef::internal_default_instance();
}
::tensorflow::NodeDef* TFOpKernelDef::mutable_nodedef() {
  
  if (nodedef_ == NULL) {
    nodedef_ = new ::tensorflow::NodeDef;
  }
  // @@protoc_insertion_point(field_mutable:executor.TFOpKernelDef.nodedef)
  return nodedef_;
}
::tensorflow::NodeDef* TFOpKernelDef::release_nodedef() {
  // @@protoc_insertion_point(field_release:executor.TFOpKernelDef.nodedef)
  
  ::tensorflow::NodeDef* temp = nodedef_;
  nodedef_ = NULL;
  return temp;
}
void TFOpKernelDef::set_allocated_nodedef(::tensorflow::NodeDef* nodedef) {
  delete nodedef_;
  if (nodedef != NULL && nodedef->GetArena() != NULL) {
    ::tensorflow::NodeDef* new_nodedef = new ::tensorflow::NodeDef;
    new_nodedef->CopyFrom(*nodedef);
    nodedef = new_nodedef;
  }
  nodedef_ = nodedef;
  if (nodedef) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.TFOpKernelDef.nodedef)
}

// bool isAsync = 5;
void TFOpKernelDef::clear_isasync() {
  isasync_ = false;
}
bool TFOpKernelDef::isasync() const {
  // @@protoc_insertion_point(field_get:executor.TFOpKernelDef.isAsync)
  return isasync_;
}
void TFOpKernelDef::set_isasync(bool value) {
  
  isasync_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpKernelDef.isAsync)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFOpContextDef::kStepIdFieldNumber;
const int TFOpContextDef::kFrameIdFieldNumber;
const int TFOpContextDef::kIterIdFieldNumber;
const int TFOpContextDef::kIsInputDeadFieldNumber;
const int TFOpContextDef::kInputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFOpContextDef::TFOpContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFOpContextDef)
}
TFOpContextDef::TFOpContextDef(const TFOpContextDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&step_id_, &from.step_id_,
    reinterpret_cast<char*>(&is_input_dead_) -
    reinterpret_cast<char*>(&step_id_) + sizeof(is_input_dead_));
  // @@protoc_insertion_point(copy_constructor:executor.TFOpContextDef)
}

void TFOpContextDef::SharedCtor() {
  ::memset(&step_id_, 0, reinterpret_cast<char*>(&is_input_dead_) -
    reinterpret_cast<char*>(&step_id_) + sizeof(is_input_dead_));
  _cached_size_ = 0;
}

TFOpContextDef::~TFOpContextDef() {
  // @@protoc_insertion_point(destructor:executor.TFOpContextDef)
  SharedDtor();
}

void TFOpContextDef::SharedDtor() {
}

void TFOpContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFOpContextDef::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[4].descriptor;
}

const TFOpContextDef& TFOpContextDef::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFOpContextDef* TFOpContextDef::New(::google::protobuf::Arena* arena) const {
  TFOpContextDef* n = new TFOpContextDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFOpContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFOpContextDef)
  inputs_.Clear();
  ::memset(&step_id_, 0, reinterpret_cast<char*>(&is_input_dead_) -
    reinterpret_cast<char*>(&step_id_) + sizeof(is_input_dead_));
}

bool TFOpContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFOpContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 step_id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 frame_id = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frame_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 iter_id = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iter_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_input_dead = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_input_dead_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .executor.TFTensorItem inputs = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFOpContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFOpContextDef)
  return false;
#undef DO_
}

void TFOpContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFOpContextDef)
  // int64 step_id = 1;
  if (this->step_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->step_id(), output);
  }

  // uint64 frame_id = 2;
  if (this->frame_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->frame_id(), output);
  }

  // int64 iter_id = 3;
  if (this->iter_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iter_id(), output);
  }

  // bool is_input_dead = 4;
  if (this->is_input_dead() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_input_dead(), output);
  }

  // repeated .executor.TFTensorItem inputs = 5;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->inputs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFOpContextDef)
}

::google::protobuf::uint8* TFOpContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFOpContextDef)
  // int64 step_id = 1;
  if (this->step_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->step_id(), target);
  }

  // uint64 frame_id = 2;
  if (this->frame_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->frame_id(), target);
  }

  // int64 iter_id = 3;
  if (this->iter_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iter_id(), target);
  }

  // bool is_input_dead = 4;
  if (this->is_input_dead() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_input_dead(), target);
  }

  // repeated .executor.TFTensorItem inputs = 5;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->inputs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFOpContextDef)
  return target;
}

size_t TFOpContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFOpContextDef)
  size_t total_size = 0;

  // repeated .executor.TFTensorItem inputs = 5;
  {
    unsigned int count = this->inputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inputs(i));
    }
  }

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->step_id());
  }

  // uint64 frame_id = 2;
  if (this->frame_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->frame_id());
  }

  // int64 iter_id = 3;
  if (this->iter_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->iter_id());
  }

  // bool is_input_dead = 4;
  if (this->is_input_dead() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFOpContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFOpContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  const TFOpContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFOpContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFOpContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFOpContextDef)
    MergeFrom(*source);
  }
}

void TFOpContextDef::MergeFrom(const TFOpContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFOpContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inputs_.MergeFrom(from.inputs_);
  if (from.step_id() != 0) {
    set_step_id(from.step_id());
  }
  if (from.frame_id() != 0) {
    set_frame_id(from.frame_id());
  }
  if (from.iter_id() != 0) {
    set_iter_id(from.iter_id());
  }
  if (from.is_input_dead() != 0) {
    set_is_input_dead(from.is_input_dead());
  }
}

void TFOpContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFOpContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFOpContextDef::CopyFrom(const TFOpContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFOpContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFOpContextDef::IsInitialized() const {
  return true;
}

void TFOpContextDef::Swap(TFOpContextDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFOpContextDef::InternalSwap(TFOpContextDef* other) {
  inputs_.UnsafeArenaSwap(&other->inputs_);
  std::swap(step_id_, other->step_id_);
  std::swap(frame_id_, other->frame_id_);
  std::swap(iter_id_, other->iter_id_);
  std::swap(is_input_dead_, other->is_input_dead_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFOpContextDef::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFOpContextDef

// int64 step_id = 1;
void TFOpContextDef::clear_step_id() {
  step_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TFOpContextDef::step_id() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.step_id)
  return step_id_;
}
void TFOpContextDef::set_step_id(::google::protobuf::int64 value) {
  
  step_id_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.step_id)
}

// uint64 frame_id = 2;
void TFOpContextDef::clear_frame_id() {
  frame_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TFOpContextDef::frame_id() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.frame_id)
  return frame_id_;
}
void TFOpContextDef::set_frame_id(::google::protobuf::uint64 value) {
  
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.frame_id)
}

// int64 iter_id = 3;
void TFOpContextDef::clear_iter_id() {
  iter_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TFOpContextDef::iter_id() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.iter_id)
  return iter_id_;
}
void TFOpContextDef::set_iter_id(::google::protobuf::int64 value) {
  
  iter_id_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.iter_id)
}

// bool is_input_dead = 4;
void TFOpContextDef::clear_is_input_dead() {
  is_input_dead_ = false;
}
bool TFOpContextDef::is_input_dead() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.is_input_dead)
  return is_input_dead_;
}
void TFOpContextDef::set_is_input_dead(bool value) {
  
  is_input_dead_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextDef.is_input_dead)
}

// repeated .executor.TFTensorItem inputs = 5;
int TFOpContextDef::inputs_size() const {
  return inputs_.size();
}
void TFOpContextDef::clear_inputs() {
  inputs_.Clear();
}
const ::executor::TFTensorItem& TFOpContextDef::inputs(int index) const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextDef.inputs)
  return inputs_.Get(index);
}
::executor::TFTensorItem* TFOpContextDef::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:executor.TFOpContextDef.inputs)
  return inputs_.Mutable(index);
}
::executor::TFTensorItem* TFOpContextDef::add_inputs() {
  // @@protoc_insertion_point(field_add:executor.TFOpContextDef.inputs)
  return inputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::executor::TFTensorItem >*
TFOpContextDef::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:executor.TFOpContextDef.inputs)
  return &inputs_;
}
const ::google::protobuf::RepeatedPtrField< ::executor::TFTensorItem >&
TFOpContextDef::inputs() const {
  // @@protoc_insertion_point(field_list:executor.TFOpContextDef.inputs)
  return inputs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFOpContextUpdate::kIsOutputDeadFieldNumber;
const int TFOpContextUpdate::kOutputsFieldNumber;
const int TFOpContextUpdate::kRendezTensorsFieldNumber;
const int TFOpContextUpdate::kStatusCodeFieldNumber;
const int TFOpContextUpdate::kStatusMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFOpContextUpdate::TFOpContextUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFOpContextUpdate)
}
TFOpContextUpdate::TFOpContextUpdate(const TFOpContextUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      outputs_(from.outputs_),
      rendeztensors_(from.rendeztensors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_msg().size() > 0) {
    status_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_msg_);
  }
  ::memcpy(&is_output_dead_, &from.is_output_dead_,
    reinterpret_cast<char*>(&status_code_) -
    reinterpret_cast<char*>(&is_output_dead_) + sizeof(status_code_));
  // @@protoc_insertion_point(copy_constructor:executor.TFOpContextUpdate)
}

void TFOpContextUpdate::SharedCtor() {
  status_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_output_dead_, 0, reinterpret_cast<char*>(&status_code_) -
    reinterpret_cast<char*>(&is_output_dead_) + sizeof(status_code_));
  _cached_size_ = 0;
}

TFOpContextUpdate::~TFOpContextUpdate() {
  // @@protoc_insertion_point(destructor:executor.TFOpContextUpdate)
  SharedDtor();
}

void TFOpContextUpdate::SharedDtor() {
  status_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TFOpContextUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFOpContextUpdate::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[5].descriptor;
}

const TFOpContextUpdate& TFOpContextUpdate::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFOpContextUpdate* TFOpContextUpdate::New(::google::protobuf::Arena* arena) const {
  TFOpContextUpdate* n = new TFOpContextUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFOpContextUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFOpContextUpdate)
  outputs_.Clear();
  rendeztensors_.Clear();
  status_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_output_dead_, 0, reinterpret_cast<char*>(&status_code_) -
    reinterpret_cast<char*>(&is_output_dead_) + sizeof(status_code_));
}

bool TFOpContextUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFOpContextUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_output_dead = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_output_dead_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .executor.TFTensorItem outputs = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .executor.TFRendezItem rendezTensors = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rendeztensors()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .tensorflow.error.Code status_code = 4;
      case 4: {
        if (tag == 32u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status_code(static_cast< ::tensorflow::error::Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_msg = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_msg().data(), this->status_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "executor.TFOpContextUpdate.status_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFOpContextUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFOpContextUpdate)
  return false;
#undef DO_
}

void TFOpContextUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFOpContextUpdate)
  // bool is_output_dead = 1;
  if (this->is_output_dead() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_output_dead(), output);
  }

  // repeated .executor.TFTensorItem outputs = 2;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->outputs(i), output);
  }

  // repeated .executor.TFRendezItem rendezTensors = 3;
  for (unsigned int i = 0, n = this->rendeztensors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rendeztensors(i), output);
  }

  // .tensorflow.error.Code status_code = 4;
  if (this->status_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status_code(), output);
  }

  // string status_msg = 5;
  if (this->status_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_msg().data(), this->status_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFOpContextUpdate.status_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->status_msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFOpContextUpdate)
}

::google::protobuf::uint8* TFOpContextUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFOpContextUpdate)
  // bool is_output_dead = 1;
  if (this->is_output_dead() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_output_dead(), target);
  }

  // repeated .executor.TFTensorItem outputs = 2;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->outputs(i), false, target);
  }

  // repeated .executor.TFRendezItem rendezTensors = 3;
  for (unsigned int i = 0, n = this->rendeztensors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rendeztensors(i), false, target);
  }

  // .tensorflow.error.Code status_code = 4;
  if (this->status_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status_code(), target);
  }

  // string status_msg = 5;
  if (this->status_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_msg().data(), this->status_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFOpContextUpdate.status_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->status_msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFOpContextUpdate)
  return target;
}

size_t TFOpContextUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFOpContextUpdate)
  size_t total_size = 0;

  // repeated .executor.TFTensorItem outputs = 2;
  {
    unsigned int count = this->outputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->outputs(i));
    }
  }

  // repeated .executor.TFRendezItem rendezTensors = 3;
  {
    unsigned int count = this->rendeztensors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rendeztensors(i));
    }
  }

  // string status_msg = 5;
  if (this->status_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_msg());
  }

  // bool is_output_dead = 1;
  if (this->is_output_dead() != 0) {
    total_size += 1 + 1;
  }

  // .tensorflow.error.Code status_code = 4;
  if (this->status_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFOpContextUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFOpContextUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const TFOpContextUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFOpContextUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFOpContextUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFOpContextUpdate)
    MergeFrom(*source);
  }
}

void TFOpContextUpdate::MergeFrom(const TFOpContextUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFOpContextUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  outputs_.MergeFrom(from.outputs_);
  rendeztensors_.MergeFrom(from.rendeztensors_);
  if (from.status_msg().size() > 0) {

    status_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_msg_);
  }
  if (from.is_output_dead() != 0) {
    set_is_output_dead(from.is_output_dead());
  }
  if (from.status_code() != 0) {
    set_status_code(from.status_code());
  }
}

void TFOpContextUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFOpContextUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFOpContextUpdate::CopyFrom(const TFOpContextUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFOpContextUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFOpContextUpdate::IsInitialized() const {
  return true;
}

void TFOpContextUpdate::Swap(TFOpContextUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFOpContextUpdate::InternalSwap(TFOpContextUpdate* other) {
  outputs_.UnsafeArenaSwap(&other->outputs_);
  rendeztensors_.UnsafeArenaSwap(&other->rendeztensors_);
  status_msg_.Swap(&other->status_msg_);
  std::swap(is_output_dead_, other->is_output_dead_);
  std::swap(status_code_, other->status_code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFOpContextUpdate::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFOpContextUpdate

// bool is_output_dead = 1;
void TFOpContextUpdate::clear_is_output_dead() {
  is_output_dead_ = false;
}
bool TFOpContextUpdate::is_output_dead() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextUpdate.is_output_dead)
  return is_output_dead_;
}
void TFOpContextUpdate::set_is_output_dead(bool value) {
  
  is_output_dead_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextUpdate.is_output_dead)
}

// repeated .executor.TFTensorItem outputs = 2;
int TFOpContextUpdate::outputs_size() const {
  return outputs_.size();
}
void TFOpContextUpdate::clear_outputs() {
  outputs_.Clear();
}
const ::executor::TFTensorItem& TFOpContextUpdate::outputs(int index) const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextUpdate.outputs)
  return outputs_.Get(index);
}
::executor::TFTensorItem* TFOpContextUpdate::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:executor.TFOpContextUpdate.outputs)
  return outputs_.Mutable(index);
}
::executor::TFTensorItem* TFOpContextUpdate::add_outputs() {
  // @@protoc_insertion_point(field_add:executor.TFOpContextUpdate.outputs)
  return outputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::executor::TFTensorItem >*
TFOpContextUpdate::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:executor.TFOpContextUpdate.outputs)
  return &outputs_;
}
const ::google::protobuf::RepeatedPtrField< ::executor::TFTensorItem >&
TFOpContextUpdate::outputs() const {
  // @@protoc_insertion_point(field_list:executor.TFOpContextUpdate.outputs)
  return outputs_;
}

// repeated .executor.TFRendezItem rendezTensors = 3;
int TFOpContextUpdate::rendeztensors_size() const {
  return rendeztensors_.size();
}
void TFOpContextUpdate::clear_rendeztensors() {
  rendeztensors_.Clear();
}
const ::executor::TFRendezItem& TFOpContextUpdate::rendeztensors(int index) const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextUpdate.rendezTensors)
  return rendeztensors_.Get(index);
}
::executor::TFRendezItem* TFOpContextUpdate::mutable_rendeztensors(int index) {
  // @@protoc_insertion_point(field_mutable:executor.TFOpContextUpdate.rendezTensors)
  return rendeztensors_.Mutable(index);
}
::executor::TFRendezItem* TFOpContextUpdate::add_rendeztensors() {
  // @@protoc_insertion_point(field_add:executor.TFOpContextUpdate.rendezTensors)
  return rendeztensors_.Add();
}
::google::protobuf::RepeatedPtrField< ::executor::TFRendezItem >*
TFOpContextUpdate::mutable_rendeztensors() {
  // @@protoc_insertion_point(field_mutable_list:executor.TFOpContextUpdate.rendezTensors)
  return &rendeztensors_;
}
const ::google::protobuf::RepeatedPtrField< ::executor::TFRendezItem >&
TFOpContextUpdate::rendeztensors() const {
  // @@protoc_insertion_point(field_list:executor.TFOpContextUpdate.rendezTensors)
  return rendeztensors_;
}

// .tensorflow.error.Code status_code = 4;
void TFOpContextUpdate::clear_status_code() {
  status_code_ = 0;
}
::tensorflow::error::Code TFOpContextUpdate::status_code() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextUpdate.status_code)
  return static_cast< ::tensorflow::error::Code >(status_code_);
}
void TFOpContextUpdate::set_status_code(::tensorflow::error::Code value) {
  
  status_code_ = value;
  // @@protoc_insertion_point(field_set:executor.TFOpContextUpdate.status_code)
}

// string status_msg = 5;
void TFOpContextUpdate::clear_status_msg() {
  status_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TFOpContextUpdate::status_msg() const {
  // @@protoc_insertion_point(field_get:executor.TFOpContextUpdate.status_msg)
  return status_msg_.GetNoArena();
}
void TFOpContextUpdate::set_status_msg(const ::std::string& value) {
  
  status_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.TFOpContextUpdate.status_msg)
}
#if LANG_CXX11
void TFOpContextUpdate::set_status_msg(::std::string&& value) {
  
  status_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.TFOpContextUpdate.status_msg)
}
#endif
void TFOpContextUpdate::set_status_msg(const char* value) {
  
  status_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.TFOpContextUpdate.status_msg)
}
void TFOpContextUpdate::set_status_msg(const char* value, size_t size) {
  
  status_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.TFOpContextUpdate.status_msg)
}
::std::string* TFOpContextUpdate::mutable_status_msg() {
  
  // @@protoc_insertion_point(field_mutable:executor.TFOpContextUpdate.status_msg)
  return status_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFOpContextUpdate::release_status_msg() {
  // @@protoc_insertion_point(field_release:executor.TFOpContextUpdate.status_msg)
  
  return status_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFOpContextUpdate::set_allocated_status_msg(::std::string* status_msg) {
  if (status_msg != NULL) {
    
  } else {
    
  }
  status_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_msg);
  // @@protoc_insertion_point(field_set_allocated:executor.TFOpContextUpdate.status_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFRendezItem::kKeyFieldNumber;
const int TFRendezItem::kAllocAttributesFieldNumber;
const int TFRendezItem::kIsDeadFieldNumber;
const int TFRendezItem::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFRendezItem::TFRendezItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFRendezItem)
}
TFRendezItem::TFRendezItem(const TFRendezItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_val()) {
    val_ = new ::tensorflow::TensorProto(*from.val_);
  } else {
    val_ = NULL;
  }
  ::memcpy(&allocattributes_, &from.allocattributes_,
    reinterpret_cast<char*>(&isdead_) -
    reinterpret_cast<char*>(&allocattributes_) + sizeof(isdead_));
  // @@protoc_insertion_point(copy_constructor:executor.TFRendezItem)
}

void TFRendezItem::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&val_, 0, reinterpret_cast<char*>(&isdead_) -
    reinterpret_cast<char*>(&val_) + sizeof(isdead_));
  _cached_size_ = 0;
}

TFRendezItem::~TFRendezItem() {
  // @@protoc_insertion_point(destructor:executor.TFRendezItem)
  SharedDtor();
}

void TFRendezItem::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete val_;
  }
}

void TFRendezItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFRendezItem::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[6].descriptor;
}

const TFRendezItem& TFRendezItem::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFRendezItem* TFRendezItem::New(::google::protobuf::Arena* arena) const {
  TFRendezItem* n = new TFRendezItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFRendezItem::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFRendezItem)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && val_ != NULL) {
    delete val_;
  }
  val_ = NULL;
  ::memset(&allocattributes_, 0, reinterpret_cast<char*>(&isdead_) -
    reinterpret_cast<char*>(&allocattributes_) + sizeof(isdead_));
}

bool TFRendezItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFRendezItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "executor.TFRendezItem.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 allocAttributes = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &allocattributes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isDead = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdead_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TensorProto val = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFRendezItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFRendezItem)
  return false;
#undef DO_
}

void TFRendezItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFRendezItem)
  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFRendezItem.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // uint32 allocAttributes = 2;
  if (this->allocattributes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->allocattributes(), output);
  }

  // bool isDead = 3;
  if (this->isdead() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isdead(), output);
  }

  // .tensorflow.TensorProto val = 4;
  if (this->has_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->val_, output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFRendezItem)
}

::google::protobuf::uint8* TFRendezItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFRendezItem)
  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFRendezItem.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // uint32 allocAttributes = 2;
  if (this->allocattributes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->allocattributes(), target);
  }

  // bool isDead = 3;
  if (this->isdead() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isdead(), target);
  }

  // .tensorflow.TensorProto val = 4;
  if (this->has_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->val_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFRendezItem)
  return target;
}

size_t TFRendezItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFRendezItem)
  size_t total_size = 0;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // .tensorflow.TensorProto val = 4;
  if (this->has_val()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->val_);
  }

  // uint32 allocAttributes = 2;
  if (this->allocattributes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->allocattributes());
  }

  // bool isDead = 3;
  if (this->isdead() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFRendezItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFRendezItem)
  GOOGLE_DCHECK_NE(&from, this);
  const TFRendezItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFRendezItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFRendezItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFRendezItem)
    MergeFrom(*source);
  }
}

void TFRendezItem::MergeFrom(const TFRendezItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFRendezItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_val()) {
    mutable_val()->::tensorflow::TensorProto::MergeFrom(from.val());
  }
  if (from.allocattributes() != 0) {
    set_allocattributes(from.allocattributes());
  }
  if (from.isdead() != 0) {
    set_isdead(from.isdead());
  }
}

void TFRendezItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFRendezItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFRendezItem::CopyFrom(const TFRendezItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFRendezItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFRendezItem::IsInitialized() const {
  return true;
}

void TFRendezItem::Swap(TFRendezItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFRendezItem::InternalSwap(TFRendezItem* other) {
  key_.Swap(&other->key_);
  std::swap(val_, other->val_);
  std::swap(allocattributes_, other->allocattributes_);
  std::swap(isdead_, other->isdead_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFRendezItem::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFRendezItem

// string key = 1;
void TFRendezItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TFRendezItem::key() const {
  // @@protoc_insertion_point(field_get:executor.TFRendezItem.key)
  return key_.GetNoArena();
}
void TFRendezItem::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.TFRendezItem.key)
}
#if LANG_CXX11
void TFRendezItem::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.TFRendezItem.key)
}
#endif
void TFRendezItem::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.TFRendezItem.key)
}
void TFRendezItem::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.TFRendezItem.key)
}
::std::string* TFRendezItem::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:executor.TFRendezItem.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFRendezItem::release_key() {
  // @@protoc_insertion_point(field_release:executor.TFRendezItem.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFRendezItem::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:executor.TFRendezItem.key)
}

// uint32 allocAttributes = 2;
void TFRendezItem::clear_allocattributes() {
  allocattributes_ = 0u;
}
::google::protobuf::uint32 TFRendezItem::allocattributes() const {
  // @@protoc_insertion_point(field_get:executor.TFRendezItem.allocAttributes)
  return allocattributes_;
}
void TFRendezItem::set_allocattributes(::google::protobuf::uint32 value) {
  
  allocattributes_ = value;
  // @@protoc_insertion_point(field_set:executor.TFRendezItem.allocAttributes)
}

// bool isDead = 3;
void TFRendezItem::clear_isdead() {
  isdead_ = false;
}
bool TFRendezItem::isdead() const {
  // @@protoc_insertion_point(field_get:executor.TFRendezItem.isDead)
  return isdead_;
}
void TFRendezItem::set_isdead(bool value) {
  
  isdead_ = value;
  // @@protoc_insertion_point(field_set:executor.TFRendezItem.isDead)
}

// .tensorflow.TensorProto val = 4;
bool TFRendezItem::has_val() const {
  return this != internal_default_instance() && val_ != NULL;
}
void TFRendezItem::clear_val() {
  if (GetArenaNoVirtual() == NULL && val_ != NULL) delete val_;
  val_ = NULL;
}
const ::tensorflow::TensorProto& TFRendezItem::val() const {
  // @@protoc_insertion_point(field_get:executor.TFRendezItem.val)
  return val_ != NULL ? *val_
                         : *::tensorflow::TensorProto::internal_default_instance();
}
::tensorflow::TensorProto* TFRendezItem::mutable_val() {
  
  if (val_ == NULL) {
    val_ = new ::tensorflow::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:executor.TFRendezItem.val)
  return val_;
}
::tensorflow::TensorProto* TFRendezItem::release_val() {
  // @@protoc_insertion_point(field_release:executor.TFRendezItem.val)
  
  ::tensorflow::TensorProto* temp = val_;
  val_ = NULL;
  return temp;
}
void TFRendezItem::set_allocated_val(::tensorflow::TensorProto* val) {
  delete val_;
  if (val != NULL && val->GetArena() != NULL) {
    ::tensorflow::TensorProto* new_val = new ::tensorflow::TensorProto;
    new_val->CopyFrom(*val);
    val = new_val;
  }
  val_ = val;
  if (val) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.TFRendezItem.val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFRendezRecvRequests::kKeyFieldNumber;
const int TFRendezRecvRequests::kAllocAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFRendezRecvRequests::TFRendezRecvRequests()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFRendezRecvRequests)
}
TFRendezRecvRequests::TFRendezRecvRequests(const TFRendezRecvRequests& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      key_(from.key_),
      allocattributes_(from.allocattributes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:executor.TFRendezRecvRequests)
}

void TFRendezRecvRequests::SharedCtor() {
  _cached_size_ = 0;
}

TFRendezRecvRequests::~TFRendezRecvRequests() {
  // @@protoc_insertion_point(destructor:executor.TFRendezRecvRequests)
  SharedDtor();
}

void TFRendezRecvRequests::SharedDtor() {
}

void TFRendezRecvRequests::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFRendezRecvRequests::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[7].descriptor;
}

const TFRendezRecvRequests& TFRendezRecvRequests::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFRendezRecvRequests* TFRendezRecvRequests::New(::google::protobuf::Arena* arena) const {
  TFRendezRecvRequests* n = new TFRendezRecvRequests;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFRendezRecvRequests::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFRendezRecvRequests)
  key_.Clear();
  allocattributes_.Clear();
}

bool TFRendezRecvRequests::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFRendezRecvRequests)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string key = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key(this->key_size() - 1).data(),
            this->key(this->key_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "executor.TFRendezRecvRequests.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 allocAttributes = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_allocattributes())));
        } else if (tag == 16u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_allocattributes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFRendezRecvRequests)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFRendezRecvRequests)
  return false;
#undef DO_
}

void TFRendezRecvRequests::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFRendezRecvRequests)
  // repeated string key = 1;
  for (int i = 0; i < this->key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key(i).data(), this->key(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFRendezRecvRequests.key");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->key(i), output);
  }

  // repeated uint32 allocAttributes = 2;
  if (this->allocattributes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_allocattributes_cached_byte_size_);
  }
  for (int i = 0; i < this->allocattributes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->allocattributes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFRendezRecvRequests)
}

::google::protobuf::uint8* TFRendezRecvRequests::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFRendezRecvRequests)
  // repeated string key = 1;
  for (int i = 0; i < this->key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key(i).data(), this->key(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFRendezRecvRequests.key");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->key(i), target);
  }

  // repeated uint32 allocAttributes = 2;
  if (this->allocattributes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _allocattributes_cached_byte_size_, target);
  }
  for (int i = 0; i < this->allocattributes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->allocattributes(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFRendezRecvRequests)
  return target;
}

size_t TFRendezRecvRequests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFRendezRecvRequests)
  size_t total_size = 0;

  // repeated string key = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->key_size());
  for (int i = 0; i < this->key_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->key(i));
  }

  // repeated uint32 allocAttributes = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->allocattributes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _allocattributes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFRendezRecvRequests::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFRendezRecvRequests)
  GOOGLE_DCHECK_NE(&from, this);
  const TFRendezRecvRequests* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFRendezRecvRequests>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFRendezRecvRequests)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFRendezRecvRequests)
    MergeFrom(*source);
  }
}

void TFRendezRecvRequests::MergeFrom(const TFRendezRecvRequests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFRendezRecvRequests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.MergeFrom(from.key_);
  allocattributes_.MergeFrom(from.allocattributes_);
}

void TFRendezRecvRequests::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFRendezRecvRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFRendezRecvRequests::CopyFrom(const TFRendezRecvRequests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFRendezRecvRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFRendezRecvRequests::IsInitialized() const {
  return true;
}

void TFRendezRecvRequests::Swap(TFRendezRecvRequests* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFRendezRecvRequests::InternalSwap(TFRendezRecvRequests* other) {
  key_.UnsafeArenaSwap(&other->key_);
  allocattributes_.UnsafeArenaSwap(&other->allocattributes_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFRendezRecvRequests::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFRendezRecvRequests

// repeated string key = 1;
int TFRendezRecvRequests::key_size() const {
  return key_.size();
}
void TFRendezRecvRequests::clear_key() {
  key_.Clear();
}
const ::std::string& TFRendezRecvRequests::key(int index) const {
  // @@protoc_insertion_point(field_get:executor.TFRendezRecvRequests.key)
  return key_.Get(index);
}
::std::string* TFRendezRecvRequests::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:executor.TFRendezRecvRequests.key)
  return key_.Mutable(index);
}
void TFRendezRecvRequests::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:executor.TFRendezRecvRequests.key)
  key_.Mutable(index)->assign(value);
}
void TFRendezRecvRequests::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:executor.TFRendezRecvRequests.key)
}
void TFRendezRecvRequests::set_key(int index, const char* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:executor.TFRendezRecvRequests.key)
}
::std::string* TFRendezRecvRequests::add_key() {
  // @@protoc_insertion_point(field_add_mutable:executor.TFRendezRecvRequests.key)
  return key_.Add();
}
void TFRendezRecvRequests::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:executor.TFRendezRecvRequests.key)
}
void TFRendezRecvRequests::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:executor.TFRendezRecvRequests.key)
}
void TFRendezRecvRequests::add_key(const char* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:executor.TFRendezRecvRequests.key)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TFRendezRecvRequests::key() const {
  // @@protoc_insertion_point(field_list:executor.TFRendezRecvRequests.key)
  return key_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TFRendezRecvRequests::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:executor.TFRendezRecvRequests.key)
  return &key_;
}

// repeated uint32 allocAttributes = 2;
int TFRendezRecvRequests::allocattributes_size() const {
  return allocattributes_.size();
}
void TFRendezRecvRequests::clear_allocattributes() {
  allocattributes_.Clear();
}
::google::protobuf::uint32 TFRendezRecvRequests::allocattributes(int index) const {
  // @@protoc_insertion_point(field_get:executor.TFRendezRecvRequests.allocAttributes)
  return allocattributes_.Get(index);
}
void TFRendezRecvRequests::set_allocattributes(int index, ::google::protobuf::uint32 value) {
  allocattributes_.Set(index, value);
  // @@protoc_insertion_point(field_set:executor.TFRendezRecvRequests.allocAttributes)
}
void TFRendezRecvRequests::add_allocattributes(::google::protobuf::uint32 value) {
  allocattributes_.Add(value);
  // @@protoc_insertion_point(field_add:executor.TFRendezRecvRequests.allocAttributes)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TFRendezRecvRequests::allocattributes() const {
  // @@protoc_insertion_point(field_list:executor.TFRendezRecvRequests.allocAttributes)
  return allocattributes_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TFRendezRecvRequests::mutable_allocattributes() {
  // @@protoc_insertion_point(field_mutable_list:executor.TFRendezRecvRequests.allocAttributes)
  return &allocattributes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFRendezRecvUpdate::kForSeqFieldNumber;
const int TFRendezRecvUpdate::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFRendezRecvUpdate::TFRendezRecvUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFRendezRecvUpdate)
}
TFRendezRecvUpdate::TFRendezRecvUpdate(const TFRendezRecvUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  forseq_ = from.forseq_;
  // @@protoc_insertion_point(copy_constructor:executor.TFRendezRecvUpdate)
}

void TFRendezRecvUpdate::SharedCtor() {
  forseq_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

TFRendezRecvUpdate::~TFRendezRecvUpdate() {
  // @@protoc_insertion_point(destructor:executor.TFRendezRecvUpdate)
  SharedDtor();
}

void TFRendezRecvUpdate::SharedDtor() {
}

void TFRendezRecvUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFRendezRecvUpdate::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[8].descriptor;
}

const TFRendezRecvUpdate& TFRendezRecvUpdate::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFRendezRecvUpdate* TFRendezRecvUpdate::New(::google::protobuf::Arena* arena) const {
  TFRendezRecvUpdate* n = new TFRendezRecvUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFRendezRecvUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFRendezRecvUpdate)
  items_.Clear();
  forseq_ = GOOGLE_ULONGLONG(0);
}

bool TFRendezRecvUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFRendezRecvUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 forSeq = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &forseq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .executor.TFRendezItem items = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFRendezRecvUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFRendezRecvUpdate)
  return false;
#undef DO_
}

void TFRendezRecvUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFRendezRecvUpdate)
  // uint64 forSeq = 1;
  if (this->forseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->forseq(), output);
  }

  // repeated .executor.TFRendezItem items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFRendezRecvUpdate)
}

::google::protobuf::uint8* TFRendezRecvUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFRendezRecvUpdate)
  // uint64 forSeq = 1;
  if (this->forseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->forseq(), target);
  }

  // repeated .executor.TFRendezItem items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->items(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFRendezRecvUpdate)
  return target;
}

size_t TFRendezRecvUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFRendezRecvUpdate)
  size_t total_size = 0;

  // repeated .executor.TFRendezItem items = 2;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // uint64 forSeq = 1;
  if (this->forseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->forseq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFRendezRecvUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFRendezRecvUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const TFRendezRecvUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFRendezRecvUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFRendezRecvUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFRendezRecvUpdate)
    MergeFrom(*source);
  }
}

void TFRendezRecvUpdate::MergeFrom(const TFRendezRecvUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFRendezRecvUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  items_.MergeFrom(from.items_);
  if (from.forseq() != 0) {
    set_forseq(from.forseq());
  }
}

void TFRendezRecvUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFRendezRecvUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFRendezRecvUpdate::CopyFrom(const TFRendezRecvUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFRendezRecvUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFRendezRecvUpdate::IsInitialized() const {
  return true;
}

void TFRendezRecvUpdate::Swap(TFRendezRecvUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFRendezRecvUpdate::InternalSwap(TFRendezRecvUpdate* other) {
  items_.UnsafeArenaSwap(&other->items_);
  std::swap(forseq_, other->forseq_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFRendezRecvUpdate::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFRendezRecvUpdate

// uint64 forSeq = 1;
void TFRendezRecvUpdate::clear_forseq() {
  forseq_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TFRendezRecvUpdate::forseq() const {
  // @@protoc_insertion_point(field_get:executor.TFRendezRecvUpdate.forSeq)
  return forseq_;
}
void TFRendezRecvUpdate::set_forseq(::google::protobuf::uint64 value) {
  
  forseq_ = value;
  // @@protoc_insertion_point(field_set:executor.TFRendezRecvUpdate.forSeq)
}

// repeated .executor.TFRendezItem items = 2;
int TFRendezRecvUpdate::items_size() const {
  return items_.size();
}
void TFRendezRecvUpdate::clear_items() {
  items_.Clear();
}
const ::executor::TFRendezItem& TFRendezRecvUpdate::items(int index) const {
  // @@protoc_insertion_point(field_get:executor.TFRendezRecvUpdate.items)
  return items_.Get(index);
}
::executor::TFRendezItem* TFRendezRecvUpdate::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:executor.TFRendezRecvUpdate.items)
  return items_.Mutable(index);
}
::executor::TFRendezItem* TFRendezRecvUpdate::add_items() {
  // @@protoc_insertion_point(field_add:executor.TFRendezRecvUpdate.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::executor::TFRendezItem >*
TFRendezRecvUpdate::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:executor.TFRendezRecvUpdate.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::executor::TFRendezItem >&
TFRendezRecvUpdate::items() const {
  // @@protoc_insertion_point(field_list:executor.TFRendezRecvUpdate.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TFTensorItem::kIsRefFieldNumber;
const int TFTensorItem::kNameFieldNumber;
const int TFTensorItem::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TFTensorItem::TFTensorItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tfoplibrary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.TFTensorItem)
}
TFTensorItem::TFTensorItem(const TFTensorItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_meta()) {
    meta_ = new ::tensorflow::TensorProto(*from.meta_);
  } else {
    meta_ = NULL;
  }
  is_ref_ = from.is_ref_;
  // @@protoc_insertion_point(copy_constructor:executor.TFTensorItem)
}

void TFTensorItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&meta_, 0, reinterpret_cast<char*>(&is_ref_) -
    reinterpret_cast<char*>(&meta_) + sizeof(is_ref_));
  _cached_size_ = 0;
}

TFTensorItem::~TFTensorItem() {
  // @@protoc_insertion_point(destructor:executor.TFTensorItem)
  SharedDtor();
}

void TFTensorItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete meta_;
  }
}

void TFTensorItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFTensorItem::descriptor() {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[9].descriptor;
}

const TFTensorItem& TFTensorItem::default_instance() {
  protobuf_tfoplibrary_2eproto::InitDefaults();
  return *internal_default_instance();
}

TFTensorItem* TFTensorItem::New(::google::protobuf::Arena* arena) const {
  TFTensorItem* n = new TFTensorItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TFTensorItem::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.TFTensorItem)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  is_ref_ = false;
}

bool TFTensorItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.TFTensorItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_ref = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "executor.TFTensorItem.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TensorProto meta = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.TFTensorItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.TFTensorItem)
  return false;
#undef DO_
}

void TFTensorItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.TFTensorItem)
  // bool is_ref = 1;
  if (this->is_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_ref(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFTensorItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .tensorflow.TensorProto meta = 3;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->meta_, output);
  }

  // @@protoc_insertion_point(serialize_end:executor.TFTensorItem)
}

::google::protobuf::uint8* TFTensorItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.TFTensorItem)
  // bool is_ref = 1;
  if (this->is_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_ref(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.TFTensorItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .tensorflow.TensorProto meta = 3;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->meta_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.TFTensorItem)
  return target;
}

size_t TFTensorItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.TFTensorItem)
  size_t total_size = 0;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .tensorflow.TensorProto meta = 3;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->meta_);
  }

  // bool is_ref = 1;
  if (this->is_ref() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFTensorItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.TFTensorItem)
  GOOGLE_DCHECK_NE(&from, this);
  const TFTensorItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TFTensorItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.TFTensorItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.TFTensorItem)
    MergeFrom(*source);
  }
}

void TFTensorItem::MergeFrom(const TFTensorItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.TFTensorItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_meta()) {
    mutable_meta()->::tensorflow::TensorProto::MergeFrom(from.meta());
  }
  if (from.is_ref() != 0) {
    set_is_ref(from.is_ref());
  }
}

void TFTensorItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.TFTensorItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFTensorItem::CopyFrom(const TFTensorItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.TFTensorItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFTensorItem::IsInitialized() const {
  return true;
}

void TFTensorItem::Swap(TFTensorItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TFTensorItem::InternalSwap(TFTensorItem* other) {
  name_.Swap(&other->name_);
  std::swap(meta_, other->meta_);
  std::swap(is_ref_, other->is_ref_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TFTensorItem::GetMetadata() const {
  protobuf_tfoplibrary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tfoplibrary_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TFTensorItem

// bool is_ref = 1;
void TFTensorItem::clear_is_ref() {
  is_ref_ = false;
}
bool TFTensorItem::is_ref() const {
  // @@protoc_insertion_point(field_get:executor.TFTensorItem.is_ref)
  return is_ref_;
}
void TFTensorItem::set_is_ref(bool value) {
  
  is_ref_ = value;
  // @@protoc_insertion_point(field_set:executor.TFTensorItem.is_ref)
}

// string name = 2;
void TFTensorItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TFTensorItem::name() const {
  // @@protoc_insertion_point(field_get:executor.TFTensorItem.name)
  return name_.GetNoArena();
}
void TFTensorItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.TFTensorItem.name)
}
#if LANG_CXX11
void TFTensorItem::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.TFTensorItem.name)
}
#endif
void TFTensorItem::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.TFTensorItem.name)
}
void TFTensorItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.TFTensorItem.name)
}
::std::string* TFTensorItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:executor.TFTensorItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TFTensorItem::release_name() {
  // @@protoc_insertion_point(field_release:executor.TFTensorItem.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TFTensorItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:executor.TFTensorItem.name)
}

// .tensorflow.TensorProto meta = 3;
bool TFTensorItem::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
void TFTensorItem::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) delete meta_;
  meta_ = NULL;
}
const ::tensorflow::TensorProto& TFTensorItem::meta() const {
  // @@protoc_insertion_point(field_get:executor.TFTensorItem.meta)
  return meta_ != NULL ? *meta_
                         : *::tensorflow::TensorProto::internal_default_instance();
}
::tensorflow::TensorProto* TFTensorItem::mutable_meta() {
  
  if (meta_ == NULL) {
    meta_ = new ::tensorflow::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:executor.TFTensorItem.meta)
  return meta_;
}
::tensorflow::TensorProto* TFTensorItem::release_meta() {
  // @@protoc_insertion_point(field_release:executor.TFTensorItem.meta)
  
  ::tensorflow::TensorProto* temp = meta_;
  meta_ = NULL;
  return temp;
}
void TFTensorItem::set_allocated_meta(::tensorflow::TensorProto* meta) {
  delete meta_;
  if (meta != NULL && meta->GetArena() != NULL) {
    ::tensorflow::TensorProto* new_meta = new ::tensorflow::TensorProto;
    new_meta->CopyFrom(*meta);
    meta = new_meta;
  }
  meta_ = meta;
  if (meta) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.TFTensorItem.meta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace executor

// @@protoc_insertion_point(global_scope)
