// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: executor.proto

#ifndef PROTOBUF_executor_2eproto__INCLUDED
#define PROTOBUF_executor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace executor {
class AllocRequest;
class AllocRequestDefaultTypeInternal;
extern AllocRequestDefaultTypeInternal _AllocRequest_default_instance_;
class AllocResponse;
class AllocResponseDefaultTypeInternal;
extern AllocResponseDefaultTypeInternal _AllocResponse_default_instance_;
class DeallocRequest;
class DeallocRequestDefaultTypeInternal;
extern DeallocRequestDefaultTypeInternal _DeallocRequest_default_instance_;
class DeallocResponse;
class DeallocResponseDefaultTypeInternal;
extern DeallocResponseDefaultTypeInternal _DeallocResponse_default_instance_;
class OpContext;
class OpContextDefaultTypeInternal;
extern OpContextDefaultTypeInternal _OpContext_default_instance_;
class OpKernel;
class OpKernelDefaultTypeInternal;
extern OpKernelDefaultTypeInternal _OpKernel_default_instance_;
class ResultCode;
class ResultCodeDefaultTypeInternal;
extern ResultCodeDefaultTypeInternal _ResultCode_default_instance_;
class RunRequest;
class RunRequestDefaultTypeInternal;
extern RunRequestDefaultTypeInternal _RunRequest_default_instance_;
class RunResponse;
class RunResponseDefaultTypeInternal;
extern RunResponseDefaultTypeInternal _RunResponse_default_instance_;
}  // namespace executor

namespace executor {

namespace protobuf_executor_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_executor_2eproto

enum OpKernel_OpLibraryType {
  OpKernel_OpLibraryType_TENSORFLOW = 0,
  OpKernel_OpLibraryType_OpKernel_OpLibraryType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpKernel_OpLibraryType_OpKernel_OpLibraryType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpKernel_OpLibraryType_IsValid(int value);
const OpKernel_OpLibraryType OpKernel_OpLibraryType_OpLibraryType_MIN = OpKernel_OpLibraryType_TENSORFLOW;
const OpKernel_OpLibraryType OpKernel_OpLibraryType_OpLibraryType_MAX = OpKernel_OpLibraryType_TENSORFLOW;
const int OpKernel_OpLibraryType_OpLibraryType_ARRAYSIZE = OpKernel_OpLibraryType_OpLibraryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpKernel_OpLibraryType_descriptor();
inline const ::std::string& OpKernel_OpLibraryType_Name(OpKernel_OpLibraryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpKernel_OpLibraryType_descriptor(), value);
}
inline bool OpKernel_OpLibraryType_Parse(
    const ::std::string& name, OpKernel_OpLibraryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpKernel_OpLibraryType>(
    OpKernel_OpLibraryType_descriptor(), name, value);
}
// ===================================================================

class RunRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.RunRequest) */ {
 public:
  RunRequest();
  virtual ~RunRequest();

  RunRequest(const RunRequest& from);

  inline RunRequest& operator=(const RunRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunRequest& default_instance();

  static inline const RunRequest* internal_default_instance() {
    return reinterpret_cast<const RunRequest*>(
               &_RunRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RunRequest* other);

  // implements Message ----------------------------------------------

  inline RunRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RunRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RunRequest& from);
  void MergeFrom(const RunRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RunRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .executor.OpKernel opkernel = 1;
  bool has_opkernel() const;
  void clear_opkernel();
  static const int kOpkernelFieldNumber = 1;
  const ::executor::OpKernel& opkernel() const;
  ::executor::OpKernel* mutable_opkernel();
  ::executor::OpKernel* release_opkernel();
  void set_allocated_opkernel(::executor::OpKernel* opkernel);

  // .executor.OpContext context = 2;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::executor::OpContext& context() const;
  ::executor::OpContext* mutable_context();
  ::executor::OpContext* release_context();
  void set_allocated_context(::executor::OpContext* context);

  // @@protoc_insertion_point(class_scope:executor.RunRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::executor::OpKernel* opkernel_;
  ::executor::OpContext* context_;
  mutable int _cached_size_;
  friend struct protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.RunResponse) */ {
 public:
  RunResponse();
  virtual ~RunResponse();

  RunResponse(const RunResponse& from);

  inline RunResponse& operator=(const RunResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunResponse& default_instance();

  static inline const RunResponse* internal_default_instance() {
    return reinterpret_cast<const RunResponse*>(
               &_RunResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RunResponse* other);

  // implements Message ----------------------------------------------

  inline RunResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RunResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RunResponse& from);
  void MergeFrom(const RunResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RunResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .executor.ResultCode result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::executor::ResultCode& result() const;
  ::executor::ResultCode* mutable_result();
  ::executor::ResultCode* release_result();
  void set_allocated_result(::executor::ResultCode* result);

  // .executor.OpContext context = 2;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::executor::OpContext& context() const;
  ::executor::OpContext* mutable_context();
  ::executor::OpContext* release_context();
  void set_allocated_context(::executor::OpContext* context);

  // @@protoc_insertion_point(class_scope:executor.RunResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::executor::ResultCode* result_;
  ::executor::OpContext* context_;
  mutable int _cached_size_;
  friend struct protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeallocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.DeallocRequest) */ {
 public:
  DeallocRequest();
  virtual ~DeallocRequest();

  DeallocRequest(const DeallocRequest& from);

  inline DeallocRequest& operator=(const DeallocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeallocRequest& default_instance();

  static inline const DeallocRequest* internal_default_instance() {
    return reinterpret_cast<const DeallocRequest*>(
               &_DeallocRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DeallocRequest* other);

  // implements Message ----------------------------------------------

  inline DeallocRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeallocRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeallocRequest& from);
  void MergeFrom(const DeallocRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeallocRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 addr_handle = 1;
  void clear_addr_handle();
  static const int kAddrHandleFieldNumber = 1;
  ::google::protobuf::uint64 addr_handle() const;
  void set_addr_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:executor.DeallocRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 addr_handle_;
  mutable int _cached_size_;
  friend struct protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeallocResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.DeallocResponse) */ {
 public:
  DeallocResponse();
  virtual ~DeallocResponse();

  DeallocResponse(const DeallocResponse& from);

  inline DeallocResponse& operator=(const DeallocResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeallocResponse& default_instance();

  static inline const DeallocResponse* internal_default_instance() {
    return reinterpret_cast<const DeallocResponse*>(
               &_DeallocResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DeallocResponse* other);

  // implements Message ----------------------------------------------

  inline DeallocResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DeallocResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeallocResponse& from);
  void MergeFrom(const DeallocResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeallocResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .executor.ResultCode result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::executor::ResultCode& result() const;
  ::executor::ResultCode* mutable_result();
  ::executor::ResultCode* release_result();
  void set_allocated_result(::executor::ResultCode* result);

  // @@protoc_insertion_point(class_scope:executor.DeallocResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::executor::ResultCode* result_;
  mutable int _cached_size_;
  friend struct protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.AllocRequest) */ {
 public:
  AllocRequest();
  virtual ~AllocRequest();

  AllocRequest(const AllocRequest& from);

  inline AllocRequest& operator=(const AllocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocRequest& default_instance();

  static inline const AllocRequest* internal_default_instance() {
    return reinterpret_cast<const AllocRequest*>(
               &_AllocRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AllocRequest* other);

  // implements Message ----------------------------------------------

  inline AllocRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AllocRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllocRequest& from);
  void MergeFrom(const AllocRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllocRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 alignment = 1;
  void clear_alignment();
  static const int kAlignmentFieldNumber = 1;
  ::google::protobuf::uint64 alignment() const;
  void set_alignment(::google::protobuf::uint64 value);

  // uint64 num_bytes = 2;
  void clear_num_bytes();
  static const int kNumBytesFieldNumber = 2;
  ::google::protobuf::uint64 num_bytes() const;
  void set_num_bytes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:executor.AllocRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 alignment_;
  ::google::protobuf::uint64 num_bytes_;
  mutable int _cached_size_;
  friend struct protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllocResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.AllocResponse) */ {
 public:
  AllocResponse();
  virtual ~AllocResponse();

  AllocResponse(const AllocResponse& from);

  inline AllocResponse& operator=(const AllocResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocResponse& default_instance();

  static inline const AllocResponse* internal_default_instance() {
    return reinterpret_cast<const AllocResponse*>(
               &_AllocResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AllocResponse* other);

  // implements Message ----------------------------------------------

  inline AllocResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AllocResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllocResponse& from);
  void MergeFrom(const AllocResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllocResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .executor.ResultCode result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::executor::ResultCode& result() const;
  ::executor::ResultCode* mutable_result();
  ::executor::ResultCode* release_result();
  void set_allocated_result(::executor::ResultCode* result);

  // uint64 addr_handle = 2;
  void clear_addr_handle();
  static const int kAddrHandleFieldNumber = 2;
  ::google::protobuf::uint64 addr_handle() const;
  void set_addr_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:executor.AllocResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::executor::ResultCode* result_;
  ::google::protobuf::uint64 addr_handle_;
  mutable int _cached_size_;
  friend struct protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpKernel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.OpKernel) */ {
 public:
  OpKernel();
  virtual ~OpKernel();

  OpKernel(const OpKernel& from);

  inline OpKernel& operator=(const OpKernel& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpKernel& default_instance();

  static inline const OpKernel* internal_default_instance() {
    return reinterpret_cast<const OpKernel*>(
               &_OpKernel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(OpKernel* other);

  // implements Message ----------------------------------------------

  inline OpKernel* New() const PROTOBUF_FINAL { return New(NULL); }

  OpKernel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpKernel& from);
  void MergeFrom(const OpKernel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpKernel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpKernel_OpLibraryType OpLibraryType;
  static const OpLibraryType TENSORFLOW =
    OpKernel_OpLibraryType_TENSORFLOW;
  static inline bool OpLibraryType_IsValid(int value) {
    return OpKernel_OpLibraryType_IsValid(value);
  }
  static const OpLibraryType OpLibraryType_MIN =
    OpKernel_OpLibraryType_OpLibraryType_MIN;
  static const OpLibraryType OpLibraryType_MAX =
    OpKernel_OpLibraryType_OpLibraryType_MAX;
  static const int OpLibraryType_ARRAYSIZE =
    OpKernel_OpLibraryType_OpLibraryType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OpLibraryType_descriptor() {
    return OpKernel_OpLibraryType_descriptor();
  }
  static inline const ::std::string& OpLibraryType_Name(OpLibraryType value) {
    return OpKernel_OpLibraryType_Name(value);
  }
  static inline bool OpLibraryType_Parse(const ::std::string& name,
      OpLibraryType* value) {
    return OpKernel_OpLibraryType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .executor.OpKernel.OpLibraryType oplibrary = 1;
  void clear_oplibrary();
  static const int kOplibraryFieldNumber = 1;
  ::executor::OpKernel_OpLibraryType oplibrary() const;
  void set_oplibrary(::executor::OpKernel_OpLibraryType value);

  // @@protoc_insertion_point(class_scope:executor.OpKernel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int oplibrary_;
  mutable int _cached_size_;
  friend struct protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.OpContext) */ {
 public:
  OpContext();
  virtual ~OpContext();

  OpContext(const OpContext& from);

  inline OpContext& operator=(const OpContext& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpContext& default_instance();

  static inline const OpContext* internal_default_instance() {
    return reinterpret_cast<const OpContext*>(
               &_OpContext_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(OpContext* other);

  // implements Message ----------------------------------------------

  inline OpContext* New() const PROTOBUF_FINAL { return New(NULL); }

  OpContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpContext& from);
  void MergeFrom(const OpContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 host_persistent_alloc_ids = 3;
  int host_persistent_alloc_ids_size() const;
  void clear_host_persistent_alloc_ids();
  static const int kHostPersistentAllocIdsFieldNumber = 3;
  ::google::protobuf::int64 host_persistent_alloc_ids(int index) const;
  void set_host_persistent_alloc_ids(int index, ::google::protobuf::int64 value);
  void add_host_persistent_alloc_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      host_persistent_alloc_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_host_persistent_alloc_ids();

  // repeated int64 device_persistent_alloc_ids = 4;
  int device_persistent_alloc_ids_size() const;
  void clear_device_persistent_alloc_ids();
  static const int kDevicePersistentAllocIdsFieldNumber = 4;
  ::google::protobuf::int64 device_persistent_alloc_ids(int index) const;
  void set_device_persistent_alloc_ids(int index, ::google::protobuf::int64 value);
  void add_device_persistent_alloc_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      device_persistent_alloc_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_device_persistent_alloc_ids();

  // int64 host_temp_memory_size = 1;
  void clear_host_temp_memory_size();
  static const int kHostTempMemorySizeFieldNumber = 1;
  ::google::protobuf::int64 host_temp_memory_size() const;
  void set_host_temp_memory_size(::google::protobuf::int64 value);

  // int64 device_temp_memory_size = 2;
  void clear_device_temp_memory_size();
  static const int kDeviceTempMemorySizeFieldNumber = 2;
  ::google::protobuf::int64 device_temp_memory_size() const;
  void set_device_temp_memory_size(::google::protobuf::int64 value);

  // int64 host_persistent_memory_allocated = 5;
  void clear_host_persistent_memory_allocated();
  static const int kHostPersistentMemoryAllocatedFieldNumber = 5;
  ::google::protobuf::int64 host_persistent_memory_allocated() const;
  void set_host_persistent_memory_allocated(::google::protobuf::int64 value);

  // int64 device_persistent_memory_allocated = 6;
  void clear_device_persistent_memory_allocated();
  static const int kDevicePersistentMemoryAllocatedFieldNumber = 6;
  ::google::protobuf::int64 device_persistent_memory_allocated() const;
  void set_device_persistent_memory_allocated(::google::protobuf::int64 value);

  // bool is_output_dead = 7;
  void clear_is_output_dead();
  static const int kIsOutputDeadFieldNumber = 7;
  bool is_output_dead() const;
  void set_is_output_dead(bool value);

  // @@protoc_insertion_point(class_scope:executor.OpContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > host_persistent_alloc_ids_;
  mutable int _host_persistent_alloc_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > device_persistent_alloc_ids_;
  mutable int _device_persistent_alloc_ids_cached_byte_size_;
  ::google::protobuf::int64 host_temp_memory_size_;
  ::google::protobuf::int64 device_temp_memory_size_;
  ::google::protobuf::int64 host_persistent_memory_allocated_;
  ::google::protobuf::int64 device_persistent_memory_allocated_;
  bool is_output_dead_;
  mutable int _cached_size_;
  friend struct protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResultCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.ResultCode) */ {
 public:
  ResultCode();
  virtual ~ResultCode();

  ResultCode(const ResultCode& from);

  inline ResultCode& operator=(const ResultCode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultCode& default_instance();

  static inline const ResultCode* internal_default_instance() {
    return reinterpret_cast<const ResultCode*>(
               &_ResultCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ResultCode* other);

  // implements Message ----------------------------------------------

  inline ResultCode* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultCode& from);
  void MergeFrom(const ResultCode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:executor.ResultCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_executor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RunRequest

// .executor.OpKernel opkernel = 1;
inline bool RunRequest::has_opkernel() const {
  return this != internal_default_instance() && opkernel_ != NULL;
}
inline void RunRequest::clear_opkernel() {
  if (GetArenaNoVirtual() == NULL && opkernel_ != NULL) delete opkernel_;
  opkernel_ = NULL;
}
inline const ::executor::OpKernel& RunRequest::opkernel() const {
  // @@protoc_insertion_point(field_get:executor.RunRequest.opkernel)
  return opkernel_ != NULL ? *opkernel_
                         : *::executor::OpKernel::internal_default_instance();
}
inline ::executor::OpKernel* RunRequest::mutable_opkernel() {
  
  if (opkernel_ == NULL) {
    opkernel_ = new ::executor::OpKernel;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunRequest.opkernel)
  return opkernel_;
}
inline ::executor::OpKernel* RunRequest::release_opkernel() {
  // @@protoc_insertion_point(field_release:executor.RunRequest.opkernel)
  
  ::executor::OpKernel* temp = opkernel_;
  opkernel_ = NULL;
  return temp;
}
inline void RunRequest::set_allocated_opkernel(::executor::OpKernel* opkernel) {
  delete opkernel_;
  opkernel_ = opkernel;
  if (opkernel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunRequest.opkernel)
}

// .executor.OpContext context = 2;
inline bool RunRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void RunRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
inline const ::executor::OpContext& RunRequest::context() const {
  // @@protoc_insertion_point(field_get:executor.RunRequest.context)
  return context_ != NULL ? *context_
                         : *::executor::OpContext::internal_default_instance();
}
inline ::executor::OpContext* RunRequest::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::executor::OpContext;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunRequest.context)
  return context_;
}
inline ::executor::OpContext* RunRequest::release_context() {
  // @@protoc_insertion_point(field_release:executor.RunRequest.context)
  
  ::executor::OpContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline void RunRequest::set_allocated_context(::executor::OpContext* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunRequest.context)
}

// -------------------------------------------------------------------

// RunResponse

// .executor.ResultCode result = 1;
inline bool RunResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void RunResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::executor::ResultCode& RunResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.RunResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::ResultCode::internal_default_instance();
}
inline ::executor::ResultCode* RunResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::ResultCode;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunResponse.result)
  return result_;
}
inline ::executor::ResultCode* RunResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.RunResponse.result)
  
  ::executor::ResultCode* temp = result_;
  result_ = NULL;
  return temp;
}
inline void RunResponse::set_allocated_result(::executor::ResultCode* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunResponse.result)
}

// .executor.OpContext context = 2;
inline bool RunResponse::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void RunResponse::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
inline const ::executor::OpContext& RunResponse::context() const {
  // @@protoc_insertion_point(field_get:executor.RunResponse.context)
  return context_ != NULL ? *context_
                         : *::executor::OpContext::internal_default_instance();
}
inline ::executor::OpContext* RunResponse::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::executor::OpContext;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunResponse.context)
  return context_;
}
inline ::executor::OpContext* RunResponse::release_context() {
  // @@protoc_insertion_point(field_release:executor.RunResponse.context)
  
  ::executor::OpContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline void RunResponse::set_allocated_context(::executor::OpContext* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunResponse.context)
}

// -------------------------------------------------------------------

// DeallocRequest

// uint64 addr_handle = 1;
inline void DeallocRequest::clear_addr_handle() {
  addr_handle_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DeallocRequest::addr_handle() const {
  // @@protoc_insertion_point(field_get:executor.DeallocRequest.addr_handle)
  return addr_handle_;
}
inline void DeallocRequest::set_addr_handle(::google::protobuf::uint64 value) {
  
  addr_handle_ = value;
  // @@protoc_insertion_point(field_set:executor.DeallocRequest.addr_handle)
}

// -------------------------------------------------------------------

// DeallocResponse

// .executor.ResultCode result = 1;
inline bool DeallocResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void DeallocResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::executor::ResultCode& DeallocResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.DeallocResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::ResultCode::internal_default_instance();
}
inline ::executor::ResultCode* DeallocResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::ResultCode;
  }
  // @@protoc_insertion_point(field_mutable:executor.DeallocResponse.result)
  return result_;
}
inline ::executor::ResultCode* DeallocResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.DeallocResponse.result)
  
  ::executor::ResultCode* temp = result_;
  result_ = NULL;
  return temp;
}
inline void DeallocResponse::set_allocated_result(::executor::ResultCode* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.DeallocResponse.result)
}

// -------------------------------------------------------------------

// AllocRequest

// uint64 alignment = 1;
inline void AllocRequest::clear_alignment() {
  alignment_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AllocRequest::alignment() const {
  // @@protoc_insertion_point(field_get:executor.AllocRequest.alignment)
  return alignment_;
}
inline void AllocRequest::set_alignment(::google::protobuf::uint64 value) {
  
  alignment_ = value;
  // @@protoc_insertion_point(field_set:executor.AllocRequest.alignment)
}

// uint64 num_bytes = 2;
inline void AllocRequest::clear_num_bytes() {
  num_bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AllocRequest::num_bytes() const {
  // @@protoc_insertion_point(field_get:executor.AllocRequest.num_bytes)
  return num_bytes_;
}
inline void AllocRequest::set_num_bytes(::google::protobuf::uint64 value) {
  
  num_bytes_ = value;
  // @@protoc_insertion_point(field_set:executor.AllocRequest.num_bytes)
}

// -------------------------------------------------------------------

// AllocResponse

// .executor.ResultCode result = 1;
inline bool AllocResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void AllocResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::executor::ResultCode& AllocResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.AllocResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::ResultCode::internal_default_instance();
}
inline ::executor::ResultCode* AllocResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::ResultCode;
  }
  // @@protoc_insertion_point(field_mutable:executor.AllocResponse.result)
  return result_;
}
inline ::executor::ResultCode* AllocResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.AllocResponse.result)
  
  ::executor::ResultCode* temp = result_;
  result_ = NULL;
  return temp;
}
inline void AllocResponse::set_allocated_result(::executor::ResultCode* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.AllocResponse.result)
}

// uint64 addr_handle = 2;
inline void AllocResponse::clear_addr_handle() {
  addr_handle_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AllocResponse::addr_handle() const {
  // @@protoc_insertion_point(field_get:executor.AllocResponse.addr_handle)
  return addr_handle_;
}
inline void AllocResponse::set_addr_handle(::google::protobuf::uint64 value) {
  
  addr_handle_ = value;
  // @@protoc_insertion_point(field_set:executor.AllocResponse.addr_handle)
}

// -------------------------------------------------------------------

// OpKernel

// .executor.OpKernel.OpLibraryType oplibrary = 1;
inline void OpKernel::clear_oplibrary() {
  oplibrary_ = 0;
}
inline ::executor::OpKernel_OpLibraryType OpKernel::oplibrary() const {
  // @@protoc_insertion_point(field_get:executor.OpKernel.oplibrary)
  return static_cast< ::executor::OpKernel_OpLibraryType >(oplibrary_);
}
inline void OpKernel::set_oplibrary(::executor::OpKernel_OpLibraryType value) {
  
  oplibrary_ = value;
  // @@protoc_insertion_point(field_set:executor.OpKernel.oplibrary)
}

// string id = 2;
inline void OpKernel::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpKernel::id() const {
  // @@protoc_insertion_point(field_get:executor.OpKernel.id)
  return id_.GetNoArena();
}
inline void OpKernel::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.OpKernel.id)
}
#if LANG_CXX11
inline void OpKernel::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.OpKernel.id)
}
#endif
inline void OpKernel::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.OpKernel.id)
}
inline void OpKernel::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.OpKernel.id)
}
inline ::std::string* OpKernel::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:executor.OpKernel.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpKernel::release_id() {
  // @@protoc_insertion_point(field_release:executor.OpKernel.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpKernel::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:executor.OpKernel.id)
}

// -------------------------------------------------------------------

// OpContext

// int64 host_temp_memory_size = 1;
inline void OpContext::clear_host_temp_memory_size() {
  host_temp_memory_size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OpContext::host_temp_memory_size() const {
  // @@protoc_insertion_point(field_get:executor.OpContext.host_temp_memory_size)
  return host_temp_memory_size_;
}
inline void OpContext::set_host_temp_memory_size(::google::protobuf::int64 value) {
  
  host_temp_memory_size_ = value;
  // @@protoc_insertion_point(field_set:executor.OpContext.host_temp_memory_size)
}

// int64 device_temp_memory_size = 2;
inline void OpContext::clear_device_temp_memory_size() {
  device_temp_memory_size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OpContext::device_temp_memory_size() const {
  // @@protoc_insertion_point(field_get:executor.OpContext.device_temp_memory_size)
  return device_temp_memory_size_;
}
inline void OpContext::set_device_temp_memory_size(::google::protobuf::int64 value) {
  
  device_temp_memory_size_ = value;
  // @@protoc_insertion_point(field_set:executor.OpContext.device_temp_memory_size)
}

// repeated int64 host_persistent_alloc_ids = 3;
inline int OpContext::host_persistent_alloc_ids_size() const {
  return host_persistent_alloc_ids_.size();
}
inline void OpContext::clear_host_persistent_alloc_ids() {
  host_persistent_alloc_ids_.Clear();
}
inline ::google::protobuf::int64 OpContext::host_persistent_alloc_ids(int index) const {
  // @@protoc_insertion_point(field_get:executor.OpContext.host_persistent_alloc_ids)
  return host_persistent_alloc_ids_.Get(index);
}
inline void OpContext::set_host_persistent_alloc_ids(int index, ::google::protobuf::int64 value) {
  host_persistent_alloc_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:executor.OpContext.host_persistent_alloc_ids)
}
inline void OpContext::add_host_persistent_alloc_ids(::google::protobuf::int64 value) {
  host_persistent_alloc_ids_.Add(value);
  // @@protoc_insertion_point(field_add:executor.OpContext.host_persistent_alloc_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
OpContext::host_persistent_alloc_ids() const {
  // @@protoc_insertion_point(field_list:executor.OpContext.host_persistent_alloc_ids)
  return host_persistent_alloc_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
OpContext::mutable_host_persistent_alloc_ids() {
  // @@protoc_insertion_point(field_mutable_list:executor.OpContext.host_persistent_alloc_ids)
  return &host_persistent_alloc_ids_;
}

// repeated int64 device_persistent_alloc_ids = 4;
inline int OpContext::device_persistent_alloc_ids_size() const {
  return device_persistent_alloc_ids_.size();
}
inline void OpContext::clear_device_persistent_alloc_ids() {
  device_persistent_alloc_ids_.Clear();
}
inline ::google::protobuf::int64 OpContext::device_persistent_alloc_ids(int index) const {
  // @@protoc_insertion_point(field_get:executor.OpContext.device_persistent_alloc_ids)
  return device_persistent_alloc_ids_.Get(index);
}
inline void OpContext::set_device_persistent_alloc_ids(int index, ::google::protobuf::int64 value) {
  device_persistent_alloc_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:executor.OpContext.device_persistent_alloc_ids)
}
inline void OpContext::add_device_persistent_alloc_ids(::google::protobuf::int64 value) {
  device_persistent_alloc_ids_.Add(value);
  // @@protoc_insertion_point(field_add:executor.OpContext.device_persistent_alloc_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
OpContext::device_persistent_alloc_ids() const {
  // @@protoc_insertion_point(field_list:executor.OpContext.device_persistent_alloc_ids)
  return device_persistent_alloc_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
OpContext::mutable_device_persistent_alloc_ids() {
  // @@protoc_insertion_point(field_mutable_list:executor.OpContext.device_persistent_alloc_ids)
  return &device_persistent_alloc_ids_;
}

// int64 host_persistent_memory_allocated = 5;
inline void OpContext::clear_host_persistent_memory_allocated() {
  host_persistent_memory_allocated_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OpContext::host_persistent_memory_allocated() const {
  // @@protoc_insertion_point(field_get:executor.OpContext.host_persistent_memory_allocated)
  return host_persistent_memory_allocated_;
}
inline void OpContext::set_host_persistent_memory_allocated(::google::protobuf::int64 value) {
  
  host_persistent_memory_allocated_ = value;
  // @@protoc_insertion_point(field_set:executor.OpContext.host_persistent_memory_allocated)
}

// int64 device_persistent_memory_allocated = 6;
inline void OpContext::clear_device_persistent_memory_allocated() {
  device_persistent_memory_allocated_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OpContext::device_persistent_memory_allocated() const {
  // @@protoc_insertion_point(field_get:executor.OpContext.device_persistent_memory_allocated)
  return device_persistent_memory_allocated_;
}
inline void OpContext::set_device_persistent_memory_allocated(::google::protobuf::int64 value) {
  
  device_persistent_memory_allocated_ = value;
  // @@protoc_insertion_point(field_set:executor.OpContext.device_persistent_memory_allocated)
}

// bool is_output_dead = 7;
inline void OpContext::clear_is_output_dead() {
  is_output_dead_ = false;
}
inline bool OpContext::is_output_dead() const {
  // @@protoc_insertion_point(field_get:executor.OpContext.is_output_dead)
  return is_output_dead_;
}
inline void OpContext::set_is_output_dead(bool value) {
  
  is_output_dead_ = value;
  // @@protoc_insertion_point(field_set:executor.OpContext.is_output_dead)
}

// -------------------------------------------------------------------

// ResultCode

// int32 code = 1;
inline void ResultCode::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 ResultCode::code() const {
  // @@protoc_insertion_point(field_get:executor.ResultCode.code)
  return code_;
}
inline void ResultCode::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:executor.ResultCode.code)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace executor

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::executor::OpKernel_OpLibraryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::executor::OpKernel_OpLibraryType>() {
  return ::executor::OpKernel_OpLibraryType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_executor_2eproto__INCLUDED
