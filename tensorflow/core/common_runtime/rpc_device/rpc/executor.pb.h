// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: executor.proto

#ifndef PROTOBUF_executor_2eproto__INCLUDED
#define PROTOBUF_executor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace executor {
class AllocRequest;
class AllocRequestDefaultTypeInternal;
extern AllocRequestDefaultTypeInternal _AllocRequest_default_instance_;
class AllocResponse;
class AllocResponseDefaultTypeInternal;
extern AllocResponseDefaultTypeInternal _AllocResponse_default_instance_;
class CustomRequest;
class CustomRequestDefaultTypeInternal;
extern CustomRequestDefaultTypeInternal _CustomRequest_default_instance_;
class CustomResponse;
class CustomResponseDefaultTypeInternal;
extern CustomResponseDefaultTypeInternal _CustomResponse_default_instance_;
class DeallocRequest;
class DeallocRequestDefaultTypeInternal;
extern DeallocRequestDefaultTypeInternal _DeallocRequest_default_instance_;
class DeallocResponse;
class DeallocResponseDefaultTypeInternal;
extern DeallocResponseDefaultTypeInternal _DeallocResponse_default_instance_;
class EvenlopDef;
class EvenlopDefDefaultTypeInternal;
extern EvenlopDefDefaultTypeInternal _EvenlopDef_default_instance_;
class InitSessionRequest;
class InitSessionRequestDefaultTypeInternal;
extern InitSessionRequestDefaultTypeInternal _InitSessionRequest_default_instance_;
class InitSessionResponse;
class InitSessionResponseDefaultTypeInternal;
extern InitSessionResponseDefaultTypeInternal _InitSessionResponse_default_instance_;
class OpContextDef;
class OpContextDefDefaultTypeInternal;
extern OpContextDefDefaultTypeInternal _OpContextDef_default_instance_;
class OpKernelDef;
class OpKernelDefDefaultTypeInternal;
extern OpKernelDefDefaultTypeInternal _OpKernelDef_default_instance_;
class RunRequest;
class RunRequestDefaultTypeInternal;
extern RunRequestDefaultTypeInternal _RunRequest_default_instance_;
class RunResponse;
class RunResponseDefaultTypeInternal;
extern RunResponseDefaultTypeInternal _RunResponse_default_instance_;
class Status;
class StatusDefaultTypeInternal;
extern StatusDefaultTypeInternal _Status_default_instance_;
}  // namespace executor

namespace executor {

namespace protobuf_executor_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_executor_2eproto

enum OpLibraryType {
  TENSORFLOW = 0,
  OpLibraryType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpLibraryType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpLibraryType_IsValid(int value);
const OpLibraryType OpLibraryType_MIN = TENSORFLOW;
const OpLibraryType OpLibraryType_MAX = TENSORFLOW;
const int OpLibraryType_ARRAYSIZE = OpLibraryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpLibraryType_descriptor();
inline const ::std::string& OpLibraryType_Name(OpLibraryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpLibraryType_descriptor(), value);
}
inline bool OpLibraryType_Parse(
    const ::std::string& name, OpLibraryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpLibraryType>(
    OpLibraryType_descriptor(), name, value);
}
// ===================================================================

class CustomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.CustomRequest) */ {
 public:
  CustomRequest();
  virtual ~CustomRequest();

  CustomRequest(const CustomRequest& from);

  inline CustomRequest& operator=(const CustomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomRequest& default_instance();

  static inline const CustomRequest* internal_default_instance() {
    return reinterpret_cast<const CustomRequest*>(
               &_CustomRequest_default_instance_);
  }

  void Swap(CustomRequest* other);

  // implements Message ----------------------------------------------

  inline CustomRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomRequest& from);
  void MergeFrom(const CustomRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // bytes extra = 2;
  void clear_extra();
  static const int kExtraFieldNumber = 2;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const void* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // @@protoc_insertion_point(class_scope:executor.CustomRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.CustomResponse) */ {
 public:
  CustomResponse();
  virtual ~CustomResponse();

  CustomResponse(const CustomResponse& from);

  inline CustomResponse& operator=(const CustomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomResponse& default_instance();

  static inline const CustomResponse* internal_default_instance() {
    return reinterpret_cast<const CustomResponse*>(
               &_CustomResponse_default_instance_);
  }

  void Swap(CustomResponse* other);

  // implements Message ----------------------------------------------

  inline CustomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomResponse& from);
  void MergeFrom(const CustomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes extra = 2;
  void clear_extra();
  static const int kExtraFieldNumber = 2;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const void* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // .executor.Status result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::executor::Status& result() const;
  ::executor::Status* mutable_result();
  ::executor::Status* release_result();
  void set_allocated_result(::executor::Status* result);

  // @@protoc_insertion_point(class_scope:executor.CustomResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  ::executor::Status* result_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitSessionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.InitSessionRequest) */ {
 public:
  InitSessionRequest();
  virtual ~InitSessionRequest();

  InitSessionRequest(const InitSessionRequest& from);

  inline InitSessionRequest& operator=(const InitSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitSessionRequest& default_instance();

  static inline const InitSessionRequest* internal_default_instance() {
    return reinterpret_cast<const InitSessionRequest*>(
               &_InitSessionRequest_default_instance_);
  }

  void Swap(InitSessionRequest* other);

  // implements Message ----------------------------------------------

  inline InitSessionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  InitSessionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitSessionRequest& from);
  void MergeFrom(const InitSessionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes extra = 1;
  void clear_extra();
  static const int kExtraFieldNumber = 1;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const void* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // @@protoc_insertion_point(class_scope:executor.InitSessionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitSessionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.InitSessionResponse) */ {
 public:
  InitSessionResponse();
  virtual ~InitSessionResponse();

  InitSessionResponse(const InitSessionResponse& from);

  inline InitSessionResponse& operator=(const InitSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitSessionResponse& default_instance();

  static inline const InitSessionResponse* internal_default_instance() {
    return reinterpret_cast<const InitSessionResponse*>(
               &_InitSessionResponse_default_instance_);
  }

  void Swap(InitSessionResponse* other);

  // implements Message ----------------------------------------------

  inline InitSessionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  InitSessionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitSessionResponse& from);
  void MergeFrom(const InitSessionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes extra = 2;
  void clear_extra();
  static const int kExtraFieldNumber = 2;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const void* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // .executor.Status result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::executor::Status& result() const;
  ::executor::Status* mutable_result();
  ::executor::Status* release_result();
  void set_allocated_result(::executor::Status* result);

  // @@protoc_insertion_point(class_scope:executor.InitSessionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  ::executor::Status* result_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.RunRequest) */ {
 public:
  RunRequest();
  virtual ~RunRequest();

  RunRequest(const RunRequest& from);

  inline RunRequest& operator=(const RunRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunRequest& default_instance();

  static inline const RunRequest* internal_default_instance() {
    return reinterpret_cast<const RunRequest*>(
               &_RunRequest_default_instance_);
  }

  void Swap(RunRequest* other);

  // implements Message ----------------------------------------------

  inline RunRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RunRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RunRequest& from);
  void MergeFrom(const RunRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RunRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .executor.OpKernelDef opkernel = 1;
  bool has_opkernel() const;
  void clear_opkernel();
  static const int kOpkernelFieldNumber = 1;
  const ::executor::OpKernelDef& opkernel() const;
  ::executor::OpKernelDef* mutable_opkernel();
  ::executor::OpKernelDef* release_opkernel();
  void set_allocated_opkernel(::executor::OpKernelDef* opkernel);

  // .executor.OpContextDef context = 2;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::executor::OpContextDef& context() const;
  ::executor::OpContextDef* mutable_context();
  ::executor::OpContextDef* release_context();
  void set_allocated_context(::executor::OpContextDef* context);

  // @@protoc_insertion_point(class_scope:executor.RunRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::executor::OpKernelDef* opkernel_;
  ::executor::OpContextDef* context_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.RunResponse) */ {
 public:
  RunResponse();
  virtual ~RunResponse();

  RunResponse(const RunResponse& from);

  inline RunResponse& operator=(const RunResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunResponse& default_instance();

  static inline const RunResponse* internal_default_instance() {
    return reinterpret_cast<const RunResponse*>(
               &_RunResponse_default_instance_);
  }

  void Swap(RunResponse* other);

  // implements Message ----------------------------------------------

  inline RunResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RunResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RunResponse& from);
  void MergeFrom(const RunResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RunResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .executor.Status result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::executor::Status& result() const;
  ::executor::Status* mutable_result();
  ::executor::Status* release_result();
  void set_allocated_result(::executor::Status* result);

  // .executor.OpContextDef context = 2;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::executor::OpContextDef& context() const;
  ::executor::OpContextDef* mutable_context();
  ::executor::OpContextDef* release_context();
  void set_allocated_context(::executor::OpContextDef* context);

  // @@protoc_insertion_point(class_scope:executor.RunResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::executor::Status* result_;
  ::executor::OpContextDef* context_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeallocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.DeallocRequest) */ {
 public:
  DeallocRequest();
  virtual ~DeallocRequest();

  DeallocRequest(const DeallocRequest& from);

  inline DeallocRequest& operator=(const DeallocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeallocRequest& default_instance();

  static inline const DeallocRequest* internal_default_instance() {
    return reinterpret_cast<const DeallocRequest*>(
               &_DeallocRequest_default_instance_);
  }

  void Swap(DeallocRequest* other);

  // implements Message ----------------------------------------------

  inline DeallocRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeallocRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeallocRequest& from);
  void MergeFrom(const DeallocRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeallocRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 addr_handle = 1;
  void clear_addr_handle();
  static const int kAddrHandleFieldNumber = 1;
  ::google::protobuf::uint64 addr_handle() const;
  void set_addr_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:executor.DeallocRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 addr_handle_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeallocResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.DeallocResponse) */ {
 public:
  DeallocResponse();
  virtual ~DeallocResponse();

  DeallocResponse(const DeallocResponse& from);

  inline DeallocResponse& operator=(const DeallocResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeallocResponse& default_instance();

  static inline const DeallocResponse* internal_default_instance() {
    return reinterpret_cast<const DeallocResponse*>(
               &_DeallocResponse_default_instance_);
  }

  void Swap(DeallocResponse* other);

  // implements Message ----------------------------------------------

  inline DeallocResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DeallocResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeallocResponse& from);
  void MergeFrom(const DeallocResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeallocResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .executor.Status result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::executor::Status& result() const;
  ::executor::Status* mutable_result();
  ::executor::Status* release_result();
  void set_allocated_result(::executor::Status* result);

  // @@protoc_insertion_point(class_scope:executor.DeallocResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::executor::Status* result_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.AllocRequest) */ {
 public:
  AllocRequest();
  virtual ~AllocRequest();

  AllocRequest(const AllocRequest& from);

  inline AllocRequest& operator=(const AllocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocRequest& default_instance();

  static inline const AllocRequest* internal_default_instance() {
    return reinterpret_cast<const AllocRequest*>(
               &_AllocRequest_default_instance_);
  }

  void Swap(AllocRequest* other);

  // implements Message ----------------------------------------------

  inline AllocRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AllocRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllocRequest& from);
  void MergeFrom(const AllocRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllocRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 alignment = 1;
  void clear_alignment();
  static const int kAlignmentFieldNumber = 1;
  ::google::protobuf::uint64 alignment() const;
  void set_alignment(::google::protobuf::uint64 value);

  // uint64 num_bytes = 2;
  void clear_num_bytes();
  static const int kNumBytesFieldNumber = 2;
  ::google::protobuf::uint64 num_bytes() const;
  void set_num_bytes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:executor.AllocRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 alignment_;
  ::google::protobuf::uint64 num_bytes_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllocResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.AllocResponse) */ {
 public:
  AllocResponse();
  virtual ~AllocResponse();

  AllocResponse(const AllocResponse& from);

  inline AllocResponse& operator=(const AllocResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocResponse& default_instance();

  static inline const AllocResponse* internal_default_instance() {
    return reinterpret_cast<const AllocResponse*>(
               &_AllocResponse_default_instance_);
  }

  void Swap(AllocResponse* other);

  // implements Message ----------------------------------------------

  inline AllocResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AllocResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllocResponse& from);
  void MergeFrom(const AllocResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllocResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .executor.Status result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::executor::Status& result() const;
  ::executor::Status* mutable_result();
  ::executor::Status* release_result();
  void set_allocated_result(::executor::Status* result);

  // uint64 addr_handle = 2;
  void clear_addr_handle();
  static const int kAddrHandleFieldNumber = 2;
  ::google::protobuf::uint64 addr_handle() const;
  void set_addr_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:executor.AllocResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::executor::Status* result_;
  ::google::protobuf::uint64 addr_handle_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpKernelDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.OpKernelDef) */ {
 public:
  OpKernelDef();
  virtual ~OpKernelDef();

  OpKernelDef(const OpKernelDef& from);

  inline OpKernelDef& operator=(const OpKernelDef& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpKernelDef& default_instance();

  static inline const OpKernelDef* internal_default_instance() {
    return reinterpret_cast<const OpKernelDef*>(
               &_OpKernelDef_default_instance_);
  }

  void Swap(OpKernelDef* other);

  // implements Message ----------------------------------------------

  inline OpKernelDef* New() const PROTOBUF_FINAL { return New(NULL); }

  OpKernelDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpKernelDef& from);
  void MergeFrom(const OpKernelDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpKernelDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // bytes extra = 3;
  void clear_extra();
  static const int kExtraFieldNumber = 3;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const void* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // .executor.OpLibraryType oplibrary = 1;
  void clear_oplibrary();
  static const int kOplibraryFieldNumber = 1;
  ::executor::OpLibraryType oplibrary() const;
  void set_oplibrary(::executor::OpLibraryType value);

  // @@protoc_insertion_point(class_scope:executor.OpKernelDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  int oplibrary_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpContextDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.OpContextDef) */ {
 public:
  OpContextDef();
  virtual ~OpContextDef();

  OpContextDef(const OpContextDef& from);

  inline OpContextDef& operator=(const OpContextDef& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpContextDef& default_instance();

  static inline const OpContextDef* internal_default_instance() {
    return reinterpret_cast<const OpContextDef*>(
               &_OpContextDef_default_instance_);
  }

  void Swap(OpContextDef* other);

  // implements Message ----------------------------------------------

  inline OpContextDef* New() const PROTOBUF_FINAL { return New(NULL); }

  OpContextDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpContextDef& from);
  void MergeFrom(const OpContextDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpContextDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes extra = 1;
  void clear_extra();
  static const int kExtraFieldNumber = 1;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const void* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // @@protoc_insertion_point(class_scope:executor.OpContextDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Status : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.Status) */ {
 public:
  Status();
  virtual ~Status();

  Status(const Status& from);

  inline Status& operator=(const Status& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Status& default_instance();

  static inline const Status* internal_default_instance() {
    return reinterpret_cast<const Status*>(
               &_Status_default_instance_);
  }

  void Swap(Status* other);

  // implements Message ----------------------------------------------

  inline Status* New() const PROTOBUF_FINAL { return New(NULL); }

  Status* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Status& from);
  void MergeFrom(const Status& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:executor.Status)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvenlopDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:executor.EvenlopDef) */ {
 public:
  EvenlopDef();
  virtual ~EvenlopDef();

  EvenlopDef(const EvenlopDef& from);

  inline EvenlopDef& operator=(const EvenlopDef& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EvenlopDef& default_instance();

  static inline const EvenlopDef* internal_default_instance() {
    return reinterpret_cast<const EvenlopDef*>(
               &_EvenlopDef_default_instance_);
  }

  void Swap(EvenlopDef* other);

  // implements Message ----------------------------------------------

  inline EvenlopDef* New() const PROTOBUF_FINAL { return New(NULL); }

  EvenlopDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvenlopDef& from);
  void MergeFrom(const EvenlopDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvenlopDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // bytes recvIdentity = 3;
  void clear_recvidentity();
  static const int kRecvIdentityFieldNumber = 3;
  const ::std::string& recvidentity() const;
  void set_recvidentity(const ::std::string& value);
  #if LANG_CXX11
  void set_recvidentity(::std::string&& value);
  #endif
  void set_recvidentity(const char* value);
  void set_recvidentity(const void* value, size_t size);
  ::std::string* mutable_recvidentity();
  ::std::string* release_recvidentity();
  void set_allocated_recvidentity(::std::string* recvidentity);

  // bytes sessionId = 4;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 4;
  const ::std::string& sessionid() const;
  void set_sessionid(const ::std::string& value);
  #if LANG_CXX11
  void set_sessionid(::std::string&& value);
  #endif
  void set_sessionid(const char* value);
  void set_sessionid(const void* value, size_t size);
  ::std::string* mutable_sessionid();
  ::std::string* release_sessionid();
  void set_allocated_sessionid(::std::string* sessionid);

  // uint64 seq = 2;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  ::google::protobuf::uint64 seq() const;
  void set_seq(::google::protobuf::uint64 value);

  // .executor.OpLibraryType oplibrary = 5;
  void clear_oplibrary();
  static const int kOplibraryFieldNumber = 5;
  ::executor::OpLibraryType oplibrary() const;
  void set_oplibrary(::executor::OpLibraryType value);

  // @@protoc_insertion_point(class_scope:executor.EvenlopDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr recvidentity_;
  ::google::protobuf::internal::ArenaStringPtr sessionid_;
  ::google::protobuf::uint64 seq_;
  int oplibrary_;
  mutable int _cached_size_;
  friend struct  protobuf_executor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomRequest

// string type = 1;
inline void CustomRequest::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CustomRequest::type() const {
  // @@protoc_insertion_point(field_get:executor.CustomRequest.type)
  return type_.GetNoArena();
}
inline void CustomRequest::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.CustomRequest.type)
}
#if LANG_CXX11
inline void CustomRequest::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.CustomRequest.type)
}
#endif
inline void CustomRequest::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.CustomRequest.type)
}
inline void CustomRequest::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.CustomRequest.type)
}
inline ::std::string* CustomRequest::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:executor.CustomRequest.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomRequest::release_type() {
  // @@protoc_insertion_point(field_release:executor.CustomRequest.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomRequest::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:executor.CustomRequest.type)
}

// bytes extra = 2;
inline void CustomRequest::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CustomRequest::extra() const {
  // @@protoc_insertion_point(field_get:executor.CustomRequest.extra)
  return extra_.GetNoArena();
}
inline void CustomRequest::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.CustomRequest.extra)
}
#if LANG_CXX11
inline void CustomRequest::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.CustomRequest.extra)
}
#endif
inline void CustomRequest::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.CustomRequest.extra)
}
inline void CustomRequest::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.CustomRequest.extra)
}
inline ::std::string* CustomRequest::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.CustomRequest.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomRequest::release_extra() {
  // @@protoc_insertion_point(field_release:executor.CustomRequest.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomRequest::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.CustomRequest.extra)
}

// -------------------------------------------------------------------

// CustomResponse

// .executor.Status result = 1;
inline bool CustomResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void CustomResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::executor::Status& CustomResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.CustomResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
inline ::executor::Status* CustomResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.CustomResponse.result)
  return result_;
}
inline ::executor::Status* CustomResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.CustomResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
inline void CustomResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.CustomResponse.result)
}

// bytes extra = 2;
inline void CustomResponse::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CustomResponse::extra() const {
  // @@protoc_insertion_point(field_get:executor.CustomResponse.extra)
  return extra_.GetNoArena();
}
inline void CustomResponse::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.CustomResponse.extra)
}
#if LANG_CXX11
inline void CustomResponse::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.CustomResponse.extra)
}
#endif
inline void CustomResponse::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.CustomResponse.extra)
}
inline void CustomResponse::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.CustomResponse.extra)
}
inline ::std::string* CustomResponse::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.CustomResponse.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomResponse::release_extra() {
  // @@protoc_insertion_point(field_release:executor.CustomResponse.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomResponse::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.CustomResponse.extra)
}

// -------------------------------------------------------------------

// InitSessionRequest

// bytes extra = 1;
inline void InitSessionRequest::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitSessionRequest::extra() const {
  // @@protoc_insertion_point(field_get:executor.InitSessionRequest.extra)
  return extra_.GetNoArena();
}
inline void InitSessionRequest::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.InitSessionRequest.extra)
}
#if LANG_CXX11
inline void InitSessionRequest::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.InitSessionRequest.extra)
}
#endif
inline void InitSessionRequest::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.InitSessionRequest.extra)
}
inline void InitSessionRequest::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.InitSessionRequest.extra)
}
inline ::std::string* InitSessionRequest::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.InitSessionRequest.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitSessionRequest::release_extra() {
  // @@protoc_insertion_point(field_release:executor.InitSessionRequest.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitSessionRequest::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.InitSessionRequest.extra)
}

// -------------------------------------------------------------------

// InitSessionResponse

// .executor.Status result = 1;
inline bool InitSessionResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void InitSessionResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::executor::Status& InitSessionResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.InitSessionResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
inline ::executor::Status* InitSessionResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.InitSessionResponse.result)
  return result_;
}
inline ::executor::Status* InitSessionResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.InitSessionResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
inline void InitSessionResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.InitSessionResponse.result)
}

// bytes extra = 2;
inline void InitSessionResponse::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitSessionResponse::extra() const {
  // @@protoc_insertion_point(field_get:executor.InitSessionResponse.extra)
  return extra_.GetNoArena();
}
inline void InitSessionResponse::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.InitSessionResponse.extra)
}
#if LANG_CXX11
inline void InitSessionResponse::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.InitSessionResponse.extra)
}
#endif
inline void InitSessionResponse::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.InitSessionResponse.extra)
}
inline void InitSessionResponse::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.InitSessionResponse.extra)
}
inline ::std::string* InitSessionResponse::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.InitSessionResponse.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitSessionResponse::release_extra() {
  // @@protoc_insertion_point(field_release:executor.InitSessionResponse.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitSessionResponse::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.InitSessionResponse.extra)
}

// -------------------------------------------------------------------

// RunRequest

// .executor.OpKernelDef opkernel = 1;
inline bool RunRequest::has_opkernel() const {
  return this != internal_default_instance() && opkernel_ != NULL;
}
inline void RunRequest::clear_opkernel() {
  if (GetArenaNoVirtual() == NULL && opkernel_ != NULL) delete opkernel_;
  opkernel_ = NULL;
}
inline const ::executor::OpKernelDef& RunRequest::opkernel() const {
  // @@protoc_insertion_point(field_get:executor.RunRequest.opkernel)
  return opkernel_ != NULL ? *opkernel_
                         : *::executor::OpKernelDef::internal_default_instance();
}
inline ::executor::OpKernelDef* RunRequest::mutable_opkernel() {
  
  if (opkernel_ == NULL) {
    opkernel_ = new ::executor::OpKernelDef;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunRequest.opkernel)
  return opkernel_;
}
inline ::executor::OpKernelDef* RunRequest::release_opkernel() {
  // @@protoc_insertion_point(field_release:executor.RunRequest.opkernel)
  
  ::executor::OpKernelDef* temp = opkernel_;
  opkernel_ = NULL;
  return temp;
}
inline void RunRequest::set_allocated_opkernel(::executor::OpKernelDef* opkernel) {
  delete opkernel_;
  opkernel_ = opkernel;
  if (opkernel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunRequest.opkernel)
}

// .executor.OpContextDef context = 2;
inline bool RunRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void RunRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
inline const ::executor::OpContextDef& RunRequest::context() const {
  // @@protoc_insertion_point(field_get:executor.RunRequest.context)
  return context_ != NULL ? *context_
                         : *::executor::OpContextDef::internal_default_instance();
}
inline ::executor::OpContextDef* RunRequest::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::executor::OpContextDef;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunRequest.context)
  return context_;
}
inline ::executor::OpContextDef* RunRequest::release_context() {
  // @@protoc_insertion_point(field_release:executor.RunRequest.context)
  
  ::executor::OpContextDef* temp = context_;
  context_ = NULL;
  return temp;
}
inline void RunRequest::set_allocated_context(::executor::OpContextDef* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunRequest.context)
}

// -------------------------------------------------------------------

// RunResponse

// .executor.Status result = 1;
inline bool RunResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void RunResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::executor::Status& RunResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.RunResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
inline ::executor::Status* RunResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunResponse.result)
  return result_;
}
inline ::executor::Status* RunResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.RunResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
inline void RunResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunResponse.result)
}

// .executor.OpContextDef context = 2;
inline bool RunResponse::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void RunResponse::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
inline const ::executor::OpContextDef& RunResponse::context() const {
  // @@protoc_insertion_point(field_get:executor.RunResponse.context)
  return context_ != NULL ? *context_
                         : *::executor::OpContextDef::internal_default_instance();
}
inline ::executor::OpContextDef* RunResponse::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::executor::OpContextDef;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunResponse.context)
  return context_;
}
inline ::executor::OpContextDef* RunResponse::release_context() {
  // @@protoc_insertion_point(field_release:executor.RunResponse.context)
  
  ::executor::OpContextDef* temp = context_;
  context_ = NULL;
  return temp;
}
inline void RunResponse::set_allocated_context(::executor::OpContextDef* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunResponse.context)
}

// -------------------------------------------------------------------

// DeallocRequest

// uint64 addr_handle = 1;
inline void DeallocRequest::clear_addr_handle() {
  addr_handle_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DeallocRequest::addr_handle() const {
  // @@protoc_insertion_point(field_get:executor.DeallocRequest.addr_handle)
  return addr_handle_;
}
inline void DeallocRequest::set_addr_handle(::google::protobuf::uint64 value) {
  
  addr_handle_ = value;
  // @@protoc_insertion_point(field_set:executor.DeallocRequest.addr_handle)
}

// -------------------------------------------------------------------

// DeallocResponse

// .executor.Status result = 1;
inline bool DeallocResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void DeallocResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::executor::Status& DeallocResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.DeallocResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
inline ::executor::Status* DeallocResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.DeallocResponse.result)
  return result_;
}
inline ::executor::Status* DeallocResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.DeallocResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
inline void DeallocResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.DeallocResponse.result)
}

// -------------------------------------------------------------------

// AllocRequest

// uint64 alignment = 1;
inline void AllocRequest::clear_alignment() {
  alignment_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AllocRequest::alignment() const {
  // @@protoc_insertion_point(field_get:executor.AllocRequest.alignment)
  return alignment_;
}
inline void AllocRequest::set_alignment(::google::protobuf::uint64 value) {
  
  alignment_ = value;
  // @@protoc_insertion_point(field_set:executor.AllocRequest.alignment)
}

// uint64 num_bytes = 2;
inline void AllocRequest::clear_num_bytes() {
  num_bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AllocRequest::num_bytes() const {
  // @@protoc_insertion_point(field_get:executor.AllocRequest.num_bytes)
  return num_bytes_;
}
inline void AllocRequest::set_num_bytes(::google::protobuf::uint64 value) {
  
  num_bytes_ = value;
  // @@protoc_insertion_point(field_set:executor.AllocRequest.num_bytes)
}

// -------------------------------------------------------------------

// AllocResponse

// .executor.Status result = 1;
inline bool AllocResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void AllocResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::executor::Status& AllocResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.AllocResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
inline ::executor::Status* AllocResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.AllocResponse.result)
  return result_;
}
inline ::executor::Status* AllocResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.AllocResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
inline void AllocResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.AllocResponse.result)
}

// uint64 addr_handle = 2;
inline void AllocResponse::clear_addr_handle() {
  addr_handle_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AllocResponse::addr_handle() const {
  // @@protoc_insertion_point(field_get:executor.AllocResponse.addr_handle)
  return addr_handle_;
}
inline void AllocResponse::set_addr_handle(::google::protobuf::uint64 value) {
  
  addr_handle_ = value;
  // @@protoc_insertion_point(field_set:executor.AllocResponse.addr_handle)
}

// -------------------------------------------------------------------

// OpKernelDef

// .executor.OpLibraryType oplibrary = 1;
inline void OpKernelDef::clear_oplibrary() {
  oplibrary_ = 0;
}
inline ::executor::OpLibraryType OpKernelDef::oplibrary() const {
  // @@protoc_insertion_point(field_get:executor.OpKernelDef.oplibrary)
  return static_cast< ::executor::OpLibraryType >(oplibrary_);
}
inline void OpKernelDef::set_oplibrary(::executor::OpLibraryType value) {
  
  oplibrary_ = value;
  // @@protoc_insertion_point(field_set:executor.OpKernelDef.oplibrary)
}

// string id = 2;
inline void OpKernelDef::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpKernelDef::id() const {
  // @@protoc_insertion_point(field_get:executor.OpKernelDef.id)
  return id_.GetNoArena();
}
inline void OpKernelDef::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.OpKernelDef.id)
}
#if LANG_CXX11
inline void OpKernelDef::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.OpKernelDef.id)
}
#endif
inline void OpKernelDef::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.OpKernelDef.id)
}
inline void OpKernelDef::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.OpKernelDef.id)
}
inline ::std::string* OpKernelDef::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:executor.OpKernelDef.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpKernelDef::release_id() {
  // @@protoc_insertion_point(field_release:executor.OpKernelDef.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpKernelDef::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:executor.OpKernelDef.id)
}

// bytes extra = 3;
inline void OpKernelDef::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpKernelDef::extra() const {
  // @@protoc_insertion_point(field_get:executor.OpKernelDef.extra)
  return extra_.GetNoArena();
}
inline void OpKernelDef::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.OpKernelDef.extra)
}
#if LANG_CXX11
inline void OpKernelDef::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.OpKernelDef.extra)
}
#endif
inline void OpKernelDef::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.OpKernelDef.extra)
}
inline void OpKernelDef::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.OpKernelDef.extra)
}
inline ::std::string* OpKernelDef::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.OpKernelDef.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpKernelDef::release_extra() {
  // @@protoc_insertion_point(field_release:executor.OpKernelDef.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpKernelDef::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.OpKernelDef.extra)
}

// -------------------------------------------------------------------

// OpContextDef

// bytes extra = 1;
inline void OpContextDef::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpContextDef::extra() const {
  // @@protoc_insertion_point(field_get:executor.OpContextDef.extra)
  return extra_.GetNoArena();
}
inline void OpContextDef::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.OpContextDef.extra)
}
#if LANG_CXX11
inline void OpContextDef::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.OpContextDef.extra)
}
#endif
inline void OpContextDef::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.OpContextDef.extra)
}
inline void OpContextDef::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.OpContextDef.extra)
}
inline ::std::string* OpContextDef::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.OpContextDef.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpContextDef::release_extra() {
  // @@protoc_insertion_point(field_release:executor.OpContextDef.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpContextDef::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.OpContextDef.extra)
}

// -------------------------------------------------------------------

// Status

// int32 code = 1;
inline void Status::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 Status::code() const {
  // @@protoc_insertion_point(field_get:executor.Status.code)
  return code_;
}
inline void Status::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:executor.Status.code)
}

// -------------------------------------------------------------------

// EvenlopDef

// string type = 1;
inline void EvenlopDef::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EvenlopDef::type() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.type)
  return type_.GetNoArena();
}
inline void EvenlopDef::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.type)
}
#if LANG_CXX11
inline void EvenlopDef::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.EvenlopDef.type)
}
#endif
inline void EvenlopDef::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.EvenlopDef.type)
}
inline void EvenlopDef::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.EvenlopDef.type)
}
inline ::std::string* EvenlopDef::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:executor.EvenlopDef.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvenlopDef::release_type() {
  // @@protoc_insertion_point(field_release:executor.EvenlopDef.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvenlopDef::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:executor.EvenlopDef.type)
}

// uint64 seq = 2;
inline void EvenlopDef::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EvenlopDef::seq() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.seq)
  return seq_;
}
inline void EvenlopDef::set_seq(::google::protobuf::uint64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.seq)
}

// bytes recvIdentity = 3;
inline void EvenlopDef::clear_recvidentity() {
  recvidentity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EvenlopDef::recvidentity() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.recvIdentity)
  return recvidentity_.GetNoArena();
}
inline void EvenlopDef::set_recvidentity(const ::std::string& value) {
  
  recvidentity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.recvIdentity)
}
#if LANG_CXX11
inline void EvenlopDef::set_recvidentity(::std::string&& value) {
  
  recvidentity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.EvenlopDef.recvIdentity)
}
#endif
inline void EvenlopDef::set_recvidentity(const char* value) {
  
  recvidentity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.EvenlopDef.recvIdentity)
}
inline void EvenlopDef::set_recvidentity(const void* value, size_t size) {
  
  recvidentity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.EvenlopDef.recvIdentity)
}
inline ::std::string* EvenlopDef::mutable_recvidentity() {
  
  // @@protoc_insertion_point(field_mutable:executor.EvenlopDef.recvIdentity)
  return recvidentity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvenlopDef::release_recvidentity() {
  // @@protoc_insertion_point(field_release:executor.EvenlopDef.recvIdentity)
  
  return recvidentity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvenlopDef::set_allocated_recvidentity(::std::string* recvidentity) {
  if (recvidentity != NULL) {
    
  } else {
    
  }
  recvidentity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recvidentity);
  // @@protoc_insertion_point(field_set_allocated:executor.EvenlopDef.recvIdentity)
}

// bytes sessionId = 4;
inline void EvenlopDef::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EvenlopDef::sessionid() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.sessionId)
  return sessionid_.GetNoArena();
}
inline void EvenlopDef::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.sessionId)
}
#if LANG_CXX11
inline void EvenlopDef::set_sessionid(::std::string&& value) {
  
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.EvenlopDef.sessionId)
}
#endif
inline void EvenlopDef::set_sessionid(const char* value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.EvenlopDef.sessionId)
}
inline void EvenlopDef::set_sessionid(const void* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.EvenlopDef.sessionId)
}
inline ::std::string* EvenlopDef::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:executor.EvenlopDef.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvenlopDef::release_sessionid() {
  // @@protoc_insertion_point(field_release:executor.EvenlopDef.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvenlopDef::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:executor.EvenlopDef.sessionId)
}

// .executor.OpLibraryType oplibrary = 5;
inline void EvenlopDef::clear_oplibrary() {
  oplibrary_ = 0;
}
inline ::executor::OpLibraryType EvenlopDef::oplibrary() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.oplibrary)
  return static_cast< ::executor::OpLibraryType >(oplibrary_);
}
inline void EvenlopDef::set_oplibrary(::executor::OpLibraryType value) {
  
  oplibrary_ = value;
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.oplibrary)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace executor

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::executor::OpLibraryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::executor::OpLibraryType>() {
  return ::executor::OpLibraryType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_executor_2eproto__INCLUDED
