// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: executor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "executor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace executor {
class CustomRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CustomRequest> {
} _CustomRequest_default_instance_;
class CustomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CustomResponse> {
} _CustomResponse_default_instance_;
class InitSessionRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InitSessionRequest> {
} _InitSessionRequest_default_instance_;
class InitSessionResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InitSessionResponse> {
} _InitSessionResponse_default_instance_;
class RunRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RunRequest> {
} _RunRequest_default_instance_;
class RunResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RunResponse> {
} _RunResponse_default_instance_;
class DeallocRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeallocRequest> {
} _DeallocRequest_default_instance_;
class DeallocResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeallocResponse> {
} _DeallocResponse_default_instance_;
class AllocRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllocRequest> {
} _AllocRequest_default_instance_;
class AllocResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllocResponse> {
} _AllocResponse_default_instance_;
class OpKernelDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OpKernelDef> {
} _OpKernelDef_default_instance_;
class OpContextDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OpContextDef> {
} _OpContextDef_default_instance_;
class StatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Status> {
} _Status_default_instance_;
class EvenlopDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EvenlopDef> {
} _EvenlopDef_default_instance_;

namespace protobuf_executor_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomRequest, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomResponse, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitSessionRequest, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitSessionResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitSessionResponse, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunRequest, opkernel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunRequest, context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunResponse, context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeallocRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeallocRequest, addr_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeallocResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeallocResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocRequest, alignment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocRequest, num_bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocResponse, addr_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpKernelDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpKernelDef, oplibrary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpKernelDef, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpKernelDef, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpContextDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpContextDef, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvenlopDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvenlopDef, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvenlopDef, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvenlopDef, recvidentity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvenlopDef, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvenlopDef, oplibrary_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CustomRequest)},
  { 6, -1, sizeof(CustomResponse)},
  { 12, -1, sizeof(InitSessionRequest)},
  { 17, -1, sizeof(InitSessionResponse)},
  { 23, -1, sizeof(RunRequest)},
  { 29, -1, sizeof(RunResponse)},
  { 35, -1, sizeof(DeallocRequest)},
  { 40, -1, sizeof(DeallocResponse)},
  { 45, -1, sizeof(AllocRequest)},
  { 51, -1, sizeof(AllocResponse)},
  { 57, -1, sizeof(OpKernelDef)},
  { 64, -1, sizeof(OpContextDef)},
  { 69, -1, sizeof(Status)},
  { 74, -1, sizeof(EvenlopDef)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InitSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InitSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RunRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RunResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeallocRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeallocResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllocRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllocResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpKernelDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpContextDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvenlopDef_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "executor.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace

void TableStruct::Shutdown() {
  _CustomRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CustomResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _InitSessionRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _InitSessionResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RunRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _RunResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _DeallocRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _DeallocResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _AllocRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _AllocResponse_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _OpKernelDef_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _OpContextDef_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _Status_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _EvenlopDef_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CustomRequest_default_instance_.DefaultConstruct();
  _CustomResponse_default_instance_.DefaultConstruct();
  _InitSessionRequest_default_instance_.DefaultConstruct();
  _InitSessionResponse_default_instance_.DefaultConstruct();
  _RunRequest_default_instance_.DefaultConstruct();
  _RunResponse_default_instance_.DefaultConstruct();
  _DeallocRequest_default_instance_.DefaultConstruct();
  _DeallocResponse_default_instance_.DefaultConstruct();
  _AllocRequest_default_instance_.DefaultConstruct();
  _AllocResponse_default_instance_.DefaultConstruct();
  _OpKernelDef_default_instance_.DefaultConstruct();
  _OpContextDef_default_instance_.DefaultConstruct();
  _Status_default_instance_.DefaultConstruct();
  _EvenlopDef_default_instance_.DefaultConstruct();
  _CustomResponse_default_instance_.get_mutable()->result_ = const_cast< ::executor::Status*>(
      ::executor::Status::internal_default_instance());
  _InitSessionResponse_default_instance_.get_mutable()->result_ = const_cast< ::executor::Status*>(
      ::executor::Status::internal_default_instance());
  _RunRequest_default_instance_.get_mutable()->opkernel_ = const_cast< ::executor::OpKernelDef*>(
      ::executor::OpKernelDef::internal_default_instance());
  _RunRequest_default_instance_.get_mutable()->context_ = const_cast< ::executor::OpContextDef*>(
      ::executor::OpContextDef::internal_default_instance());
  _RunResponse_default_instance_.get_mutable()->result_ = const_cast< ::executor::Status*>(
      ::executor::Status::internal_default_instance());
  _RunResponse_default_instance_.get_mutable()->context_ = const_cast< ::executor::OpContextDef*>(
      ::executor::OpContextDef::internal_default_instance());
  _DeallocResponse_default_instance_.get_mutable()->result_ = const_cast< ::executor::Status*>(
      ::executor::Status::internal_default_instance());
  _AllocResponse_default_instance_.get_mutable()->result_ = const_cast< ::executor::Status*>(
      ::executor::Status::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016executor.proto\022\010executor\",\n\rCustomRequ"
      "est\022\014\n\004type\030\001 \001(\t\022\r\n\005extra\030\002 \001(\014\"A\n\016Cust"
      "omResponse\022 \n\006result\030\001 \001(\0132\020.executor.St"
      "atus\022\r\n\005extra\030\002 \001(\014\"#\n\022InitSessionReques"
      "t\022\r\n\005extra\030\001 \001(\014\"F\n\023InitSessionResponse\022"
      " \n\006result\030\001 \001(\0132\020.executor.Status\022\r\n\005ext"
      "ra\030\002 \001(\014\"^\n\nRunRequest\022\'\n\010opkernel\030\001 \001(\013"
      "2\025.executor.OpKernelDef\022\'\n\007context\030\002 \001(\013"
      "2\026.executor.OpContextDef\"X\n\013RunResponse\022"
      " \n\006result\030\001 \001(\0132\020.executor.Status\022\'\n\007con"
      "text\030\002 \001(\0132\026.executor.OpContextDef\"%\n\016De"
      "allocRequest\022\023\n\013addr_handle\030\001 \001(\004\"3\n\017Dea"
      "llocResponse\022 \n\006result\030\001 \001(\0132\020.executor."
      "Status\"4\n\014AllocRequest\022\021\n\talignment\030\001 \001("
      "\004\022\021\n\tnum_bytes\030\002 \001(\004\"F\n\rAllocResponse\022 \n"
      "\006result\030\001 \001(\0132\020.executor.Status\022\023\n\013addr_"
      "handle\030\002 \001(\004\"T\n\013OpKernelDef\022*\n\toplibrary"
      "\030\001 \001(\0162\027.executor.OpLibraryType\022\n\n\002id\030\002 "
      "\001(\t\022\r\n\005extra\030\003 \001(\014\"\035\n\014OpContextDef\022\r\n\005ex"
      "tra\030\001 \001(\014\"\026\n\006Status\022\014\n\004code\030\001 \001(\005\"|\n\nEve"
      "nlopDef\022\014\n\004type\030\001 \001(\t\022\013\n\003seq\030\002 \001(\004\022\024\n\014re"
      "cvIdentity\030\003 \001(\014\022\021\n\tsessionId\030\004 \001(\014\022*\n\to"
      "plibrary\030\005 \001(\0162\027.executor.OpLibraryType*"
      "\037\n\rOpLibraryType\022\016\n\nTENSORFLOW\020\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 960);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "executor.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_executor_2eproto

const ::google::protobuf::EnumDescriptor* OpLibraryType_descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_enum_descriptors[0];
}
bool OpLibraryType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomRequest::kTypeFieldNumber;
const int CustomRequest::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomRequest::CustomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.CustomRequest)
}
CustomRequest::CustomRequest(const CustomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  // @@protoc_insertion_point(copy_constructor:executor.CustomRequest)
}

void CustomRequest::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CustomRequest::~CustomRequest() {
  // @@protoc_insertion_point(destructor:executor.CustomRequest)
  SharedDtor();
}

void CustomRequest::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CustomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomRequest::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[0].descriptor;
}

const CustomRequest& CustomRequest::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

CustomRequest* CustomRequest::New(::google::protobuf::Arena* arena) const {
  CustomRequest* n = new CustomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.CustomRequest)
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CustomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.CustomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "executor.CustomRequest.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes extra = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.CustomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.CustomRequest)
  return false;
#undef DO_
}

void CustomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.CustomRequest)
  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.CustomRequest.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // bytes extra = 2;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.CustomRequest)
}

::google::protobuf::uint8* CustomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.CustomRequest)
  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.CustomRequest.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // bytes extra = 2;
  if (this->extra().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.CustomRequest)
  return target;
}

size_t CustomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.CustomRequest)
  size_t total_size = 0;

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bytes extra = 2;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.CustomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.CustomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.CustomRequest)
    MergeFrom(*source);
  }
}

void CustomRequest::MergeFrom(const CustomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.CustomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
}

void CustomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.CustomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomRequest::CopyFrom(const CustomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.CustomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomRequest::IsInitialized() const {
  return true;
}

void CustomRequest::Swap(CustomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomRequest::InternalSwap(CustomRequest* other) {
  type_.Swap(&other->type_);
  extra_.Swap(&other->extra_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomRequest::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomRequest

// string type = 1;
void CustomRequest::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CustomRequest::type() const {
  // @@protoc_insertion_point(field_get:executor.CustomRequest.type)
  return type_.GetNoArena();
}
void CustomRequest::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.CustomRequest.type)
}
#if LANG_CXX11
void CustomRequest::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.CustomRequest.type)
}
#endif
void CustomRequest::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.CustomRequest.type)
}
void CustomRequest::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.CustomRequest.type)
}
::std::string* CustomRequest::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:executor.CustomRequest.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CustomRequest::release_type() {
  // @@protoc_insertion_point(field_release:executor.CustomRequest.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomRequest::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:executor.CustomRequest.type)
}

// bytes extra = 2;
void CustomRequest::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CustomRequest::extra() const {
  // @@protoc_insertion_point(field_get:executor.CustomRequest.extra)
  return extra_.GetNoArena();
}
void CustomRequest::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.CustomRequest.extra)
}
#if LANG_CXX11
void CustomRequest::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.CustomRequest.extra)
}
#endif
void CustomRequest::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.CustomRequest.extra)
}
void CustomRequest::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.CustomRequest.extra)
}
::std::string* CustomRequest::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.CustomRequest.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CustomRequest::release_extra() {
  // @@protoc_insertion_point(field_release:executor.CustomRequest.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomRequest::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.CustomRequest.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomResponse::kResultFieldNumber;
const int CustomResponse::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomResponse::CustomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.CustomResponse)
}
CustomResponse::CustomResponse(const CustomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.has_result()) {
    result_ = new ::executor::Status(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:executor.CustomResponse)
}

void CustomResponse::SharedCtor() {
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = NULL;
  _cached_size_ = 0;
}

CustomResponse::~CustomResponse() {
  // @@protoc_insertion_point(destructor:executor.CustomResponse)
  SharedDtor();
}

void CustomResponse::SharedDtor() {
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete result_;
  }
}

void CustomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomResponse::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[1].descriptor;
}

const CustomResponse& CustomResponse::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

CustomResponse* CustomResponse::New(::google::protobuf::Arena* arena) const {
  CustomResponse* n = new CustomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.CustomResponse)
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
}

bool CustomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.CustomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .executor.Status result = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes extra = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.CustomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.CustomResponse)
  return false;
#undef DO_
}

void CustomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.CustomResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->result_, output);
  }

  // bytes extra = 2;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.CustomResponse)
}

::google::protobuf::uint8* CustomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.CustomResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->result_, false, target);
  }

  // bytes extra = 2;
  if (this->extra().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.CustomResponse)
  return target;
}

size_t CustomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.CustomResponse)
  size_t total_size = 0;

  // bytes extra = 2;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra());
  }

  // .executor.Status result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.CustomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.CustomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.CustomResponse)
    MergeFrom(*source);
  }
}

void CustomResponse::MergeFrom(const CustomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.CustomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.has_result()) {
    mutable_result()->::executor::Status::MergeFrom(from.result());
  }
}

void CustomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.CustomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomResponse::CopyFrom(const CustomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.CustomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomResponse::IsInitialized() const {
  return true;
}

void CustomResponse::Swap(CustomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomResponse::InternalSwap(CustomResponse* other) {
  extra_.Swap(&other->extra_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomResponse::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomResponse

// .executor.Status result = 1;
bool CustomResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
void CustomResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
const ::executor::Status& CustomResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.CustomResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
::executor::Status* CustomResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.CustomResponse.result)
  return result_;
}
::executor::Status* CustomResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.CustomResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
void CustomResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.CustomResponse.result)
}

// bytes extra = 2;
void CustomResponse::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CustomResponse::extra() const {
  // @@protoc_insertion_point(field_get:executor.CustomResponse.extra)
  return extra_.GetNoArena();
}
void CustomResponse::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.CustomResponse.extra)
}
#if LANG_CXX11
void CustomResponse::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.CustomResponse.extra)
}
#endif
void CustomResponse::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.CustomResponse.extra)
}
void CustomResponse::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.CustomResponse.extra)
}
::std::string* CustomResponse::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.CustomResponse.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CustomResponse::release_extra() {
  // @@protoc_insertion_point(field_release:executor.CustomResponse.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomResponse::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.CustomResponse.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitSessionRequest::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitSessionRequest::InitSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.InitSessionRequest)
}
InitSessionRequest::InitSessionRequest(const InitSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  // @@protoc_insertion_point(copy_constructor:executor.InitSessionRequest)
}

void InitSessionRequest::SharedCtor() {
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InitSessionRequest::~InitSessionRequest() {
  // @@protoc_insertion_point(destructor:executor.InitSessionRequest)
  SharedDtor();
}

void InitSessionRequest::SharedDtor() {
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitSessionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitSessionRequest::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[2].descriptor;
}

const InitSessionRequest& InitSessionRequest::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

InitSessionRequest* InitSessionRequest::New(::google::protobuf::Arena* arena) const {
  InitSessionRequest* n = new InitSessionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.InitSessionRequest)
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InitSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.InitSessionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes extra = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.InitSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.InitSessionRequest)
  return false;
#undef DO_
}

void InitSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.InitSessionRequest)
  // bytes extra = 1;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.InitSessionRequest)
}

::google::protobuf::uint8* InitSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.InitSessionRequest)
  // bytes extra = 1;
  if (this->extra().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.InitSessionRequest)
  return target;
}

size_t InitSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.InitSessionRequest)
  size_t total_size = 0;

  // bytes extra = 1;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.InitSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InitSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.InitSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.InitSessionRequest)
    MergeFrom(*source);
  }
}

void InitSessionRequest::MergeFrom(const InitSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.InitSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
}

void InitSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.InitSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitSessionRequest::CopyFrom(const InitSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.InitSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitSessionRequest::IsInitialized() const {
  return true;
}

void InitSessionRequest::Swap(InitSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitSessionRequest::InternalSwap(InitSessionRequest* other) {
  extra_.Swap(&other->extra_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InitSessionRequest::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitSessionRequest

// bytes extra = 1;
void InitSessionRequest::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InitSessionRequest::extra() const {
  // @@protoc_insertion_point(field_get:executor.InitSessionRequest.extra)
  return extra_.GetNoArena();
}
void InitSessionRequest::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.InitSessionRequest.extra)
}
#if LANG_CXX11
void InitSessionRequest::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.InitSessionRequest.extra)
}
#endif
void InitSessionRequest::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.InitSessionRequest.extra)
}
void InitSessionRequest::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.InitSessionRequest.extra)
}
::std::string* InitSessionRequest::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.InitSessionRequest.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitSessionRequest::release_extra() {
  // @@protoc_insertion_point(field_release:executor.InitSessionRequest.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitSessionRequest::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.InitSessionRequest.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitSessionResponse::kResultFieldNumber;
const int InitSessionResponse::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitSessionResponse::InitSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.InitSessionResponse)
}
InitSessionResponse::InitSessionResponse(const InitSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.has_result()) {
    result_ = new ::executor::Status(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:executor.InitSessionResponse)
}

void InitSessionResponse::SharedCtor() {
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = NULL;
  _cached_size_ = 0;
}

InitSessionResponse::~InitSessionResponse() {
  // @@protoc_insertion_point(destructor:executor.InitSessionResponse)
  SharedDtor();
}

void InitSessionResponse::SharedDtor() {
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete result_;
  }
}

void InitSessionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitSessionResponse::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[3].descriptor;
}

const InitSessionResponse& InitSessionResponse::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

InitSessionResponse* InitSessionResponse::New(::google::protobuf::Arena* arena) const {
  InitSessionResponse* n = new InitSessionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.InitSessionResponse)
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
}

bool InitSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.InitSessionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .executor.Status result = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes extra = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.InitSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.InitSessionResponse)
  return false;
#undef DO_
}

void InitSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.InitSessionResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->result_, output);
  }

  // bytes extra = 2;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.InitSessionResponse)
}

::google::protobuf::uint8* InitSessionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.InitSessionResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->result_, false, target);
  }

  // bytes extra = 2;
  if (this->extra().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.InitSessionResponse)
  return target;
}

size_t InitSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.InitSessionResponse)
  size_t total_size = 0;

  // bytes extra = 2;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra());
  }

  // .executor.Status result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.InitSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InitSessionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitSessionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.InitSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.InitSessionResponse)
    MergeFrom(*source);
  }
}

void InitSessionResponse::MergeFrom(const InitSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.InitSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.has_result()) {
    mutable_result()->::executor::Status::MergeFrom(from.result());
  }
}

void InitSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.InitSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitSessionResponse::CopyFrom(const InitSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.InitSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitSessionResponse::IsInitialized() const {
  return true;
}

void InitSessionResponse::Swap(InitSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitSessionResponse::InternalSwap(InitSessionResponse* other) {
  extra_.Swap(&other->extra_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InitSessionResponse::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitSessionResponse

// .executor.Status result = 1;
bool InitSessionResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
void InitSessionResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
const ::executor::Status& InitSessionResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.InitSessionResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
::executor::Status* InitSessionResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.InitSessionResponse.result)
  return result_;
}
::executor::Status* InitSessionResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.InitSessionResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
void InitSessionResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.InitSessionResponse.result)
}

// bytes extra = 2;
void InitSessionResponse::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InitSessionResponse::extra() const {
  // @@protoc_insertion_point(field_get:executor.InitSessionResponse.extra)
  return extra_.GetNoArena();
}
void InitSessionResponse::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.InitSessionResponse.extra)
}
#if LANG_CXX11
void InitSessionResponse::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.InitSessionResponse.extra)
}
#endif
void InitSessionResponse::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.InitSessionResponse.extra)
}
void InitSessionResponse::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.InitSessionResponse.extra)
}
::std::string* InitSessionResponse::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.InitSessionResponse.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitSessionResponse::release_extra() {
  // @@protoc_insertion_point(field_release:executor.InitSessionResponse.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitSessionResponse::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.InitSessionResponse.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunRequest::kOpkernelFieldNumber;
const int RunRequest::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunRequest::RunRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.RunRequest)
}
RunRequest::RunRequest(const RunRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_opkernel()) {
    opkernel_ = new ::executor::OpKernelDef(*from.opkernel_);
  } else {
    opkernel_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::executor::OpContextDef(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:executor.RunRequest)
}

void RunRequest::SharedCtor() {
  ::memset(&opkernel_, 0, reinterpret_cast<char*>(&context_) -
    reinterpret_cast<char*>(&opkernel_) + sizeof(context_));
  _cached_size_ = 0;
}

RunRequest::~RunRequest() {
  // @@protoc_insertion_point(destructor:executor.RunRequest)
  SharedDtor();
}

void RunRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete opkernel_;
  }
  if (this != internal_default_instance()) {
    delete context_;
  }
}

void RunRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunRequest::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[4].descriptor;
}

const RunRequest& RunRequest::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

RunRequest* RunRequest::New(::google::protobuf::Arena* arena) const {
  RunRequest* n = new RunRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.RunRequest)
  if (GetArenaNoVirtual() == NULL && opkernel_ != NULL) {
    delete opkernel_;
  }
  opkernel_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}

bool RunRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.RunRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .executor.OpKernelDef opkernel = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_opkernel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .executor.OpContextDef context = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.RunRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.RunRequest)
  return false;
#undef DO_
}

void RunRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.RunRequest)
  // .executor.OpKernelDef opkernel = 1;
  if (this->has_opkernel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->opkernel_, output);
  }

  // .executor.OpContextDef context = 2;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->context_, output);
  }

  // @@protoc_insertion_point(serialize_end:executor.RunRequest)
}

::google::protobuf::uint8* RunRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.RunRequest)
  // .executor.OpKernelDef opkernel = 1;
  if (this->has_opkernel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->opkernel_, false, target);
  }

  // .executor.OpContextDef context = 2;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->context_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.RunRequest)
  return target;
}

size_t RunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.RunRequest)
  size_t total_size = 0;

  // .executor.OpKernelDef opkernel = 1;
  if (this->has_opkernel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->opkernel_);
  }

  // .executor.OpContextDef context = 2;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.RunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.RunRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.RunRequest)
    MergeFrom(*source);
  }
}

void RunRequest::MergeFrom(const RunRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.RunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_opkernel()) {
    mutable_opkernel()->::executor::OpKernelDef::MergeFrom(from.opkernel());
  }
  if (from.has_context()) {
    mutable_context()->::executor::OpContextDef::MergeFrom(from.context());
  }
}

void RunRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.RunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunRequest::CopyFrom(const RunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.RunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunRequest::IsInitialized() const {
  return true;
}

void RunRequest::Swap(RunRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunRequest::InternalSwap(RunRequest* other) {
  std::swap(opkernel_, other->opkernel_);
  std::swap(context_, other->context_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunRequest::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RunRequest

// .executor.OpKernelDef opkernel = 1;
bool RunRequest::has_opkernel() const {
  return this != internal_default_instance() && opkernel_ != NULL;
}
void RunRequest::clear_opkernel() {
  if (GetArenaNoVirtual() == NULL && opkernel_ != NULL) delete opkernel_;
  opkernel_ = NULL;
}
const ::executor::OpKernelDef& RunRequest::opkernel() const {
  // @@protoc_insertion_point(field_get:executor.RunRequest.opkernel)
  return opkernel_ != NULL ? *opkernel_
                         : *::executor::OpKernelDef::internal_default_instance();
}
::executor::OpKernelDef* RunRequest::mutable_opkernel() {
  
  if (opkernel_ == NULL) {
    opkernel_ = new ::executor::OpKernelDef;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunRequest.opkernel)
  return opkernel_;
}
::executor::OpKernelDef* RunRequest::release_opkernel() {
  // @@protoc_insertion_point(field_release:executor.RunRequest.opkernel)
  
  ::executor::OpKernelDef* temp = opkernel_;
  opkernel_ = NULL;
  return temp;
}
void RunRequest::set_allocated_opkernel(::executor::OpKernelDef* opkernel) {
  delete opkernel_;
  opkernel_ = opkernel;
  if (opkernel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunRequest.opkernel)
}

// .executor.OpContextDef context = 2;
bool RunRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
void RunRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
const ::executor::OpContextDef& RunRequest::context() const {
  // @@protoc_insertion_point(field_get:executor.RunRequest.context)
  return context_ != NULL ? *context_
                         : *::executor::OpContextDef::internal_default_instance();
}
::executor::OpContextDef* RunRequest::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::executor::OpContextDef;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunRequest.context)
  return context_;
}
::executor::OpContextDef* RunRequest::release_context() {
  // @@protoc_insertion_point(field_release:executor.RunRequest.context)
  
  ::executor::OpContextDef* temp = context_;
  context_ = NULL;
  return temp;
}
void RunRequest::set_allocated_context(::executor::OpContextDef* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunRequest.context)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunResponse::kResultFieldNumber;
const int RunResponse::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunResponse::RunResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.RunResponse)
}
RunResponse::RunResponse(const RunResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::executor::Status(*from.result_);
  } else {
    result_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::executor::OpContextDef(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:executor.RunResponse)
}

void RunResponse::SharedCtor() {
  ::memset(&result_, 0, reinterpret_cast<char*>(&context_) -
    reinterpret_cast<char*>(&result_) + sizeof(context_));
  _cached_size_ = 0;
}

RunResponse::~RunResponse() {
  // @@protoc_insertion_point(destructor:executor.RunResponse)
  SharedDtor();
}

void RunResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete result_;
  }
  if (this != internal_default_instance()) {
    delete context_;
  }
}

void RunResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunResponse::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[5].descriptor;
}

const RunResponse& RunResponse::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

RunResponse* RunResponse::New(::google::protobuf::Arena* arena) const {
  RunResponse* n = new RunResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.RunResponse)
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}

bool RunResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.RunResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .executor.Status result = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .executor.OpContextDef context = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.RunResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.RunResponse)
  return false;
#undef DO_
}

void RunResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.RunResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->result_, output);
  }

  // .executor.OpContextDef context = 2;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->context_, output);
  }

  // @@protoc_insertion_point(serialize_end:executor.RunResponse)
}

::google::protobuf::uint8* RunResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.RunResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->result_, false, target);
  }

  // .executor.OpContextDef context = 2;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->context_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.RunResponse)
  return target;
}

size_t RunResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.RunResponse)
  size_t total_size = 0;

  // .executor.Status result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  // .executor.OpContextDef context = 2;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.RunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.RunResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.RunResponse)
    MergeFrom(*source);
  }
}

void RunResponse::MergeFrom(const RunResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.RunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    mutable_result()->::executor::Status::MergeFrom(from.result());
  }
  if (from.has_context()) {
    mutable_context()->::executor::OpContextDef::MergeFrom(from.context());
  }
}

void RunResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.RunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunResponse::CopyFrom(const RunResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.RunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunResponse::IsInitialized() const {
  return true;
}

void RunResponse::Swap(RunResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunResponse::InternalSwap(RunResponse* other) {
  std::swap(result_, other->result_);
  std::swap(context_, other->context_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunResponse::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RunResponse

// .executor.Status result = 1;
bool RunResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
void RunResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
const ::executor::Status& RunResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.RunResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
::executor::Status* RunResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunResponse.result)
  return result_;
}
::executor::Status* RunResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.RunResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
void RunResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunResponse.result)
}

// .executor.OpContextDef context = 2;
bool RunResponse::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
void RunResponse::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
const ::executor::OpContextDef& RunResponse::context() const {
  // @@protoc_insertion_point(field_get:executor.RunResponse.context)
  return context_ != NULL ? *context_
                         : *::executor::OpContextDef::internal_default_instance();
}
::executor::OpContextDef* RunResponse::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::executor::OpContextDef;
  }
  // @@protoc_insertion_point(field_mutable:executor.RunResponse.context)
  return context_;
}
::executor::OpContextDef* RunResponse::release_context() {
  // @@protoc_insertion_point(field_release:executor.RunResponse.context)
  
  ::executor::OpContextDef* temp = context_;
  context_ = NULL;
  return temp;
}
void RunResponse::set_allocated_context(::executor::OpContextDef* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.RunResponse.context)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeallocRequest::kAddrHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeallocRequest::DeallocRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.DeallocRequest)
}
DeallocRequest::DeallocRequest(const DeallocRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addr_handle_ = from.addr_handle_;
  // @@protoc_insertion_point(copy_constructor:executor.DeallocRequest)
}

void DeallocRequest::SharedCtor() {
  addr_handle_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

DeallocRequest::~DeallocRequest() {
  // @@protoc_insertion_point(destructor:executor.DeallocRequest)
  SharedDtor();
}

void DeallocRequest::SharedDtor() {
}

void DeallocRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeallocRequest::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[6].descriptor;
}

const DeallocRequest& DeallocRequest::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeallocRequest* DeallocRequest::New(::google::protobuf::Arena* arena) const {
  DeallocRequest* n = new DeallocRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeallocRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.DeallocRequest)
  addr_handle_ = GOOGLE_ULONGLONG(0);
}

bool DeallocRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.DeallocRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 addr_handle = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &addr_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.DeallocRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.DeallocRequest)
  return false;
#undef DO_
}

void DeallocRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.DeallocRequest)
  // uint64 addr_handle = 1;
  if (this->addr_handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->addr_handle(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.DeallocRequest)
}

::google::protobuf::uint8* DeallocRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.DeallocRequest)
  // uint64 addr_handle = 1;
  if (this->addr_handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->addr_handle(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.DeallocRequest)
  return target;
}

size_t DeallocRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.DeallocRequest)
  size_t total_size = 0;

  // uint64 addr_handle = 1;
  if (this->addr_handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->addr_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeallocRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.DeallocRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeallocRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeallocRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.DeallocRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.DeallocRequest)
    MergeFrom(*source);
  }
}

void DeallocRequest::MergeFrom(const DeallocRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.DeallocRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.addr_handle() != 0) {
    set_addr_handle(from.addr_handle());
  }
}

void DeallocRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.DeallocRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeallocRequest::CopyFrom(const DeallocRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.DeallocRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeallocRequest::IsInitialized() const {
  return true;
}

void DeallocRequest::Swap(DeallocRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeallocRequest::InternalSwap(DeallocRequest* other) {
  std::swap(addr_handle_, other->addr_handle_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeallocRequest::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeallocRequest

// uint64 addr_handle = 1;
void DeallocRequest::clear_addr_handle() {
  addr_handle_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DeallocRequest::addr_handle() const {
  // @@protoc_insertion_point(field_get:executor.DeallocRequest.addr_handle)
  return addr_handle_;
}
void DeallocRequest::set_addr_handle(::google::protobuf::uint64 value) {
  
  addr_handle_ = value;
  // @@protoc_insertion_point(field_set:executor.DeallocRequest.addr_handle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeallocResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeallocResponse::DeallocResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.DeallocResponse)
}
DeallocResponse::DeallocResponse(const DeallocResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::executor::Status(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:executor.DeallocResponse)
}

void DeallocResponse::SharedCtor() {
  result_ = NULL;
  _cached_size_ = 0;
}

DeallocResponse::~DeallocResponse() {
  // @@protoc_insertion_point(destructor:executor.DeallocResponse)
  SharedDtor();
}

void DeallocResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete result_;
  }
}

void DeallocResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeallocResponse::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[7].descriptor;
}

const DeallocResponse& DeallocResponse::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeallocResponse* DeallocResponse::New(::google::protobuf::Arena* arena) const {
  DeallocResponse* n = new DeallocResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeallocResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.DeallocResponse)
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
}

bool DeallocResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.DeallocResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .executor.Status result = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.DeallocResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.DeallocResponse)
  return false;
#undef DO_
}

void DeallocResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.DeallocResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->result_, output);
  }

  // @@protoc_insertion_point(serialize_end:executor.DeallocResponse)
}

::google::protobuf::uint8* DeallocResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.DeallocResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->result_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.DeallocResponse)
  return target;
}

size_t DeallocResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.DeallocResponse)
  size_t total_size = 0;

  // .executor.Status result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeallocResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.DeallocResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeallocResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeallocResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.DeallocResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.DeallocResponse)
    MergeFrom(*source);
  }
}

void DeallocResponse::MergeFrom(const DeallocResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.DeallocResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    mutable_result()->::executor::Status::MergeFrom(from.result());
  }
}

void DeallocResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.DeallocResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeallocResponse::CopyFrom(const DeallocResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.DeallocResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeallocResponse::IsInitialized() const {
  return true;
}

void DeallocResponse::Swap(DeallocResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeallocResponse::InternalSwap(DeallocResponse* other) {
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeallocResponse::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeallocResponse

// .executor.Status result = 1;
bool DeallocResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
void DeallocResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
const ::executor::Status& DeallocResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.DeallocResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
::executor::Status* DeallocResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.DeallocResponse.result)
  return result_;
}
::executor::Status* DeallocResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.DeallocResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
void DeallocResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.DeallocResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocRequest::kAlignmentFieldNumber;
const int AllocRequest::kNumBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocRequest::AllocRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.AllocRequest)
}
AllocRequest::AllocRequest(const AllocRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&alignment_, &from.alignment_,
    reinterpret_cast<char*>(&num_bytes_) -
    reinterpret_cast<char*>(&alignment_) + sizeof(num_bytes_));
  // @@protoc_insertion_point(copy_constructor:executor.AllocRequest)
}

void AllocRequest::SharedCtor() {
  ::memset(&alignment_, 0, reinterpret_cast<char*>(&num_bytes_) -
    reinterpret_cast<char*>(&alignment_) + sizeof(num_bytes_));
  _cached_size_ = 0;
}

AllocRequest::~AllocRequest() {
  // @@protoc_insertion_point(destructor:executor.AllocRequest)
  SharedDtor();
}

void AllocRequest::SharedDtor() {
}

void AllocRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocRequest::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[8].descriptor;
}

const AllocRequest& AllocRequest::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllocRequest* AllocRequest::New(::google::protobuf::Arena* arena) const {
  AllocRequest* n = new AllocRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllocRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.AllocRequest)
  ::memset(&alignment_, 0, reinterpret_cast<char*>(&num_bytes_) -
    reinterpret_cast<char*>(&alignment_) + sizeof(num_bytes_));
}

bool AllocRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.AllocRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 alignment = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &alignment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_bytes = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.AllocRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.AllocRequest)
  return false;
#undef DO_
}

void AllocRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.AllocRequest)
  // uint64 alignment = 1;
  if (this->alignment() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->alignment(), output);
  }

  // uint64 num_bytes = 2;
  if (this->num_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num_bytes(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.AllocRequest)
}

::google::protobuf::uint8* AllocRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.AllocRequest)
  // uint64 alignment = 1;
  if (this->alignment() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->alignment(), target);
  }

  // uint64 num_bytes = 2;
  if (this->num_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num_bytes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.AllocRequest)
  return target;
}

size_t AllocRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.AllocRequest)
  size_t total_size = 0;

  // uint64 alignment = 1;
  if (this->alignment() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->alignment());
  }

  // uint64 num_bytes = 2;
  if (this->num_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.AllocRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.AllocRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.AllocRequest)
    MergeFrom(*source);
  }
}

void AllocRequest::MergeFrom(const AllocRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.AllocRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.alignment() != 0) {
    set_alignment(from.alignment());
  }
  if (from.num_bytes() != 0) {
    set_num_bytes(from.num_bytes());
  }
}

void AllocRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.AllocRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocRequest::CopyFrom(const AllocRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.AllocRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocRequest::IsInitialized() const {
  return true;
}

void AllocRequest::Swap(AllocRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocRequest::InternalSwap(AllocRequest* other) {
  std::swap(alignment_, other->alignment_);
  std::swap(num_bytes_, other->num_bytes_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllocRequest::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllocRequest

// uint64 alignment = 1;
void AllocRequest::clear_alignment() {
  alignment_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AllocRequest::alignment() const {
  // @@protoc_insertion_point(field_get:executor.AllocRequest.alignment)
  return alignment_;
}
void AllocRequest::set_alignment(::google::protobuf::uint64 value) {
  
  alignment_ = value;
  // @@protoc_insertion_point(field_set:executor.AllocRequest.alignment)
}

// uint64 num_bytes = 2;
void AllocRequest::clear_num_bytes() {
  num_bytes_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AllocRequest::num_bytes() const {
  // @@protoc_insertion_point(field_get:executor.AllocRequest.num_bytes)
  return num_bytes_;
}
void AllocRequest::set_num_bytes(::google::protobuf::uint64 value) {
  
  num_bytes_ = value;
  // @@protoc_insertion_point(field_set:executor.AllocRequest.num_bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocResponse::kResultFieldNumber;
const int AllocResponse::kAddrHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocResponse::AllocResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.AllocResponse)
}
AllocResponse::AllocResponse(const AllocResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::executor::Status(*from.result_);
  } else {
    result_ = NULL;
  }
  addr_handle_ = from.addr_handle_;
  // @@protoc_insertion_point(copy_constructor:executor.AllocResponse)
}

void AllocResponse::SharedCtor() {
  ::memset(&result_, 0, reinterpret_cast<char*>(&addr_handle_) -
    reinterpret_cast<char*>(&result_) + sizeof(addr_handle_));
  _cached_size_ = 0;
}

AllocResponse::~AllocResponse() {
  // @@protoc_insertion_point(destructor:executor.AllocResponse)
  SharedDtor();
}

void AllocResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete result_;
  }
}

void AllocResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocResponse::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[9].descriptor;
}

const AllocResponse& AllocResponse::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllocResponse* AllocResponse::New(::google::protobuf::Arena* arena) const {
  AllocResponse* n = new AllocResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllocResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.AllocResponse)
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  addr_handle_ = GOOGLE_ULONGLONG(0);
}

bool AllocResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.AllocResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .executor.Status result = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 addr_handle = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &addr_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.AllocResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.AllocResponse)
  return false;
#undef DO_
}

void AllocResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.AllocResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->result_, output);
  }

  // uint64 addr_handle = 2;
  if (this->addr_handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->addr_handle(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.AllocResponse)
}

::google::protobuf::uint8* AllocResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.AllocResponse)
  // .executor.Status result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->result_, false, target);
  }

  // uint64 addr_handle = 2;
  if (this->addr_handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->addr_handle(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.AllocResponse)
  return target;
}

size_t AllocResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.AllocResponse)
  size_t total_size = 0;

  // .executor.Status result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  // uint64 addr_handle = 2;
  if (this->addr_handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->addr_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.AllocResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.AllocResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.AllocResponse)
    MergeFrom(*source);
  }
}

void AllocResponse::MergeFrom(const AllocResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.AllocResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    mutable_result()->::executor::Status::MergeFrom(from.result());
  }
  if (from.addr_handle() != 0) {
    set_addr_handle(from.addr_handle());
  }
}

void AllocResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.AllocResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocResponse::CopyFrom(const AllocResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.AllocResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocResponse::IsInitialized() const {
  return true;
}

void AllocResponse::Swap(AllocResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocResponse::InternalSwap(AllocResponse* other) {
  std::swap(result_, other->result_);
  std::swap(addr_handle_, other->addr_handle_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllocResponse::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllocResponse

// .executor.Status result = 1;
bool AllocResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
void AllocResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
const ::executor::Status& AllocResponse::result() const {
  // @@protoc_insertion_point(field_get:executor.AllocResponse.result)
  return result_ != NULL ? *result_
                         : *::executor::Status::internal_default_instance();
}
::executor::Status* AllocResponse::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::executor::Status;
  }
  // @@protoc_insertion_point(field_mutable:executor.AllocResponse.result)
  return result_;
}
::executor::Status* AllocResponse::release_result() {
  // @@protoc_insertion_point(field_release:executor.AllocResponse.result)
  
  ::executor::Status* temp = result_;
  result_ = NULL;
  return temp;
}
void AllocResponse::set_allocated_result(::executor::Status* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:executor.AllocResponse.result)
}

// uint64 addr_handle = 2;
void AllocResponse::clear_addr_handle() {
  addr_handle_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AllocResponse::addr_handle() const {
  // @@protoc_insertion_point(field_get:executor.AllocResponse.addr_handle)
  return addr_handle_;
}
void AllocResponse::set_addr_handle(::google::protobuf::uint64 value) {
  
  addr_handle_ = value;
  // @@protoc_insertion_point(field_set:executor.AllocResponse.addr_handle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpKernelDef::kOplibraryFieldNumber;
const int OpKernelDef::kIdFieldNumber;
const int OpKernelDef::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpKernelDef::OpKernelDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.OpKernelDef)
}
OpKernelDef::OpKernelDef(const OpKernelDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  oplibrary_ = from.oplibrary_;
  // @@protoc_insertion_point(copy_constructor:executor.OpKernelDef)
}

void OpKernelDef::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oplibrary_ = 0;
  _cached_size_ = 0;
}

OpKernelDef::~OpKernelDef() {
  // @@protoc_insertion_point(destructor:executor.OpKernelDef)
  SharedDtor();
}

void OpKernelDef::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpKernelDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpKernelDef::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[10].descriptor;
}

const OpKernelDef& OpKernelDef::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpKernelDef* OpKernelDef::New(::google::protobuf::Arena* arena) const {
  OpKernelDef* n = new OpKernelDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpKernelDef::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.OpKernelDef)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oplibrary_ = 0;
}

bool OpKernelDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.OpKernelDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .executor.OpLibraryType oplibrary = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oplibrary(static_cast< ::executor::OpLibraryType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "executor.OpKernelDef.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes extra = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.OpKernelDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.OpKernelDef)
  return false;
#undef DO_
}

void OpKernelDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.OpKernelDef)
  // .executor.OpLibraryType oplibrary = 1;
  if (this->oplibrary() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oplibrary(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.OpKernelDef.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // bytes extra = 3;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.OpKernelDef)
}

::google::protobuf::uint8* OpKernelDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.OpKernelDef)
  // .executor.OpLibraryType oplibrary = 1;
  if (this->oplibrary() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oplibrary(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.OpKernelDef.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // bytes extra = 3;
  if (this->extra().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.OpKernelDef)
  return target;
}

size_t OpKernelDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.OpKernelDef)
  size_t total_size = 0;

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // bytes extra = 3;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra());
  }

  // .executor.OpLibraryType oplibrary = 1;
  if (this->oplibrary() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oplibrary());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpKernelDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.OpKernelDef)
  GOOGLE_DCHECK_NE(&from, this);
  const OpKernelDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpKernelDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.OpKernelDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.OpKernelDef)
    MergeFrom(*source);
  }
}

void OpKernelDef::MergeFrom(const OpKernelDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.OpKernelDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.oplibrary() != 0) {
    set_oplibrary(from.oplibrary());
  }
}

void OpKernelDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.OpKernelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpKernelDef::CopyFrom(const OpKernelDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.OpKernelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpKernelDef::IsInitialized() const {
  return true;
}

void OpKernelDef::Swap(OpKernelDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpKernelDef::InternalSwap(OpKernelDef* other) {
  id_.Swap(&other->id_);
  extra_.Swap(&other->extra_);
  std::swap(oplibrary_, other->oplibrary_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpKernelDef::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpKernelDef

// .executor.OpLibraryType oplibrary = 1;
void OpKernelDef::clear_oplibrary() {
  oplibrary_ = 0;
}
::executor::OpLibraryType OpKernelDef::oplibrary() const {
  // @@protoc_insertion_point(field_get:executor.OpKernelDef.oplibrary)
  return static_cast< ::executor::OpLibraryType >(oplibrary_);
}
void OpKernelDef::set_oplibrary(::executor::OpLibraryType value) {
  
  oplibrary_ = value;
  // @@protoc_insertion_point(field_set:executor.OpKernelDef.oplibrary)
}

// string id = 2;
void OpKernelDef::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OpKernelDef::id() const {
  // @@protoc_insertion_point(field_get:executor.OpKernelDef.id)
  return id_.GetNoArena();
}
void OpKernelDef::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.OpKernelDef.id)
}
#if LANG_CXX11
void OpKernelDef::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.OpKernelDef.id)
}
#endif
void OpKernelDef::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.OpKernelDef.id)
}
void OpKernelDef::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.OpKernelDef.id)
}
::std::string* OpKernelDef::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:executor.OpKernelDef.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpKernelDef::release_id() {
  // @@protoc_insertion_point(field_release:executor.OpKernelDef.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpKernelDef::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:executor.OpKernelDef.id)
}

// bytes extra = 3;
void OpKernelDef::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OpKernelDef::extra() const {
  // @@protoc_insertion_point(field_get:executor.OpKernelDef.extra)
  return extra_.GetNoArena();
}
void OpKernelDef::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.OpKernelDef.extra)
}
#if LANG_CXX11
void OpKernelDef::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.OpKernelDef.extra)
}
#endif
void OpKernelDef::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.OpKernelDef.extra)
}
void OpKernelDef::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.OpKernelDef.extra)
}
::std::string* OpKernelDef::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.OpKernelDef.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpKernelDef::release_extra() {
  // @@protoc_insertion_point(field_release:executor.OpKernelDef.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpKernelDef::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.OpKernelDef.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpContextDef::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpContextDef::OpContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.OpContextDef)
}
OpContextDef::OpContextDef(const OpContextDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  // @@protoc_insertion_point(copy_constructor:executor.OpContextDef)
}

void OpContextDef::SharedCtor() {
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OpContextDef::~OpContextDef() {
  // @@protoc_insertion_point(destructor:executor.OpContextDef)
  SharedDtor();
}

void OpContextDef::SharedDtor() {
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpContextDef::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[11].descriptor;
}

const OpContextDef& OpContextDef::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpContextDef* OpContextDef::New(::google::protobuf::Arena* arena) const {
  OpContextDef* n = new OpContextDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.OpContextDef)
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OpContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.OpContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes extra = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.OpContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.OpContextDef)
  return false;
#undef DO_
}

void OpContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.OpContextDef)
  // bytes extra = 1;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.OpContextDef)
}

::google::protobuf::uint8* OpContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.OpContextDef)
  // bytes extra = 1;
  if (this->extra().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.OpContextDef)
  return target;
}

size_t OpContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.OpContextDef)
  size_t total_size = 0;

  // bytes extra = 1;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.OpContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  const OpContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.OpContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.OpContextDef)
    MergeFrom(*source);
  }
}

void OpContextDef::MergeFrom(const OpContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.OpContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
}

void OpContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.OpContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpContextDef::CopyFrom(const OpContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.OpContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpContextDef::IsInitialized() const {
  return true;
}

void OpContextDef::Swap(OpContextDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpContextDef::InternalSwap(OpContextDef* other) {
  extra_.Swap(&other->extra_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpContextDef::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpContextDef

// bytes extra = 1;
void OpContextDef::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OpContextDef::extra() const {
  // @@protoc_insertion_point(field_get:executor.OpContextDef.extra)
  return extra_.GetNoArena();
}
void OpContextDef::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.OpContextDef.extra)
}
#if LANG_CXX11
void OpContextDef::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.OpContextDef.extra)
}
#endif
void OpContextDef::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.OpContextDef.extra)
}
void OpContextDef::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.OpContextDef.extra)
}
::std::string* OpContextDef::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:executor.OpContextDef.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpContextDef::release_extra() {
  // @@protoc_insertion_point(field_release:executor.OpContextDef.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpContextDef::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:executor.OpContextDef.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Status::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Status::Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.Status)
}
Status::Status(const Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:executor.Status)
}

void Status::SharedCtor() {
  code_ = 0;
  _cached_size_ = 0;
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:executor.Status)
  SharedDtor();
}

void Status::SharedDtor() {
}

void Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Status::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[12].descriptor;
}

const Status& Status::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

Status* Status::New(::google::protobuf::Arena* arena) const {
  Status* n = new Status;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.Status)
  code_ = 0;
}

bool Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.Status)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.Status)
  return false;
#undef DO_
}

void Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.Status)
  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.Status)
}

::google::protobuf::uint8* Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.Status)
  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.Status)
  size_t total_size = 0;

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::Swap(Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Status::InternalSwap(Status* other) {
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Status::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Status

// int32 code = 1;
void Status::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 Status::code() const {
  // @@protoc_insertion_point(field_get:executor.Status.code)
  return code_;
}
void Status::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:executor.Status.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvenlopDef::kTypeFieldNumber;
const int EvenlopDef::kSeqFieldNumber;
const int EvenlopDef::kRecvIdentityFieldNumber;
const int EvenlopDef::kSessionIdFieldNumber;
const int EvenlopDef::kOplibraryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvenlopDef::EvenlopDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_executor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:executor.EvenlopDef)
}
EvenlopDef::EvenlopDef(const EvenlopDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  recvidentity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recvidentity().size() > 0) {
    recvidentity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvidentity_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionid().size() > 0) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  ::memcpy(&seq_, &from.seq_,
    reinterpret_cast<char*>(&oplibrary_) -
    reinterpret_cast<char*>(&seq_) + sizeof(oplibrary_));
  // @@protoc_insertion_point(copy_constructor:executor.EvenlopDef)
}

void EvenlopDef::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvidentity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seq_, 0, reinterpret_cast<char*>(&oplibrary_) -
    reinterpret_cast<char*>(&seq_) + sizeof(oplibrary_));
  _cached_size_ = 0;
}

EvenlopDef::~EvenlopDef() {
  // @@protoc_insertion_point(destructor:executor.EvenlopDef)
  SharedDtor();
}

void EvenlopDef::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvidentity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EvenlopDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvenlopDef::descriptor() {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[13].descriptor;
}

const EvenlopDef& EvenlopDef::default_instance() {
  protobuf_executor_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvenlopDef* EvenlopDef::New(::google::protobuf::Arena* arena) const {
  EvenlopDef* n = new EvenlopDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvenlopDef::Clear() {
// @@protoc_insertion_point(message_clear_start:executor.EvenlopDef)
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvidentity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seq_, 0, reinterpret_cast<char*>(&oplibrary_) -
    reinterpret_cast<char*>(&seq_) + sizeof(oplibrary_));
}

bool EvenlopDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:executor.EvenlopDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "executor.EvenlopDef.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 seq = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes recvIdentity = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_recvidentity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sessionId = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sessionid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .executor.OpLibraryType oplibrary = 5;
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oplibrary(static_cast< ::executor::OpLibraryType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:executor.EvenlopDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:executor.EvenlopDef)
  return false;
#undef DO_
}

void EvenlopDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:executor.EvenlopDef)
  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.EvenlopDef.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // uint64 seq = 2;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->seq(), output);
  }

  // bytes recvIdentity = 3;
  if (this->recvidentity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->recvidentity(), output);
  }

  // bytes sessionId = 4;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sessionid(), output);
  }

  // .executor.OpLibraryType oplibrary = 5;
  if (this->oplibrary() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->oplibrary(), output);
  }

  // @@protoc_insertion_point(serialize_end:executor.EvenlopDef)
}

::google::protobuf::uint8* EvenlopDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:executor.EvenlopDef)
  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "executor.EvenlopDef.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // uint64 seq = 2;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->seq(), target);
  }

  // bytes recvIdentity = 3;
  if (this->recvidentity().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->recvidentity(), target);
  }

  // bytes sessionId = 4;
  if (this->sessionid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sessionid(), target);
  }

  // .executor.OpLibraryType oplibrary = 5;
  if (this->oplibrary() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->oplibrary(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:executor.EvenlopDef)
  return target;
}

size_t EvenlopDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:executor.EvenlopDef)
  size_t total_size = 0;

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bytes recvIdentity = 3;
  if (this->recvidentity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->recvidentity());
  }

  // bytes sessionId = 4;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sessionid());
  }

  // uint64 seq = 2;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq());
  }

  // .executor.OpLibraryType oplibrary = 5;
  if (this->oplibrary() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oplibrary());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvenlopDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:executor.EvenlopDef)
  GOOGLE_DCHECK_NE(&from, this);
  const EvenlopDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvenlopDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:executor.EvenlopDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:executor.EvenlopDef)
    MergeFrom(*source);
  }
}

void EvenlopDef::MergeFrom(const EvenlopDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:executor.EvenlopDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.recvidentity().size() > 0) {

    recvidentity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvidentity_);
  }
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.oplibrary() != 0) {
    set_oplibrary(from.oplibrary());
  }
}

void EvenlopDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:executor.EvenlopDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvenlopDef::CopyFrom(const EvenlopDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:executor.EvenlopDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvenlopDef::IsInitialized() const {
  return true;
}

void EvenlopDef::Swap(EvenlopDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvenlopDef::InternalSwap(EvenlopDef* other) {
  type_.Swap(&other->type_);
  recvidentity_.Swap(&other->recvidentity_);
  sessionid_.Swap(&other->sessionid_);
  std::swap(seq_, other->seq_);
  std::swap(oplibrary_, other->oplibrary_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvenlopDef::GetMetadata() const {
  protobuf_executor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_executor_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvenlopDef

// string type = 1;
void EvenlopDef::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EvenlopDef::type() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.type)
  return type_.GetNoArena();
}
void EvenlopDef::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.type)
}
#if LANG_CXX11
void EvenlopDef::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.EvenlopDef.type)
}
#endif
void EvenlopDef::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.EvenlopDef.type)
}
void EvenlopDef::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.EvenlopDef.type)
}
::std::string* EvenlopDef::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:executor.EvenlopDef.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EvenlopDef::release_type() {
  // @@protoc_insertion_point(field_release:executor.EvenlopDef.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EvenlopDef::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:executor.EvenlopDef.type)
}

// uint64 seq = 2;
void EvenlopDef::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 EvenlopDef::seq() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.seq)
  return seq_;
}
void EvenlopDef::set_seq(::google::protobuf::uint64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.seq)
}

// bytes recvIdentity = 3;
void EvenlopDef::clear_recvidentity() {
  recvidentity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EvenlopDef::recvidentity() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.recvIdentity)
  return recvidentity_.GetNoArena();
}
void EvenlopDef::set_recvidentity(const ::std::string& value) {
  
  recvidentity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.recvIdentity)
}
#if LANG_CXX11
void EvenlopDef::set_recvidentity(::std::string&& value) {
  
  recvidentity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.EvenlopDef.recvIdentity)
}
#endif
void EvenlopDef::set_recvidentity(const char* value) {
  
  recvidentity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.EvenlopDef.recvIdentity)
}
void EvenlopDef::set_recvidentity(const void* value, size_t size) {
  
  recvidentity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.EvenlopDef.recvIdentity)
}
::std::string* EvenlopDef::mutable_recvidentity() {
  
  // @@protoc_insertion_point(field_mutable:executor.EvenlopDef.recvIdentity)
  return recvidentity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EvenlopDef::release_recvidentity() {
  // @@protoc_insertion_point(field_release:executor.EvenlopDef.recvIdentity)
  
  return recvidentity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EvenlopDef::set_allocated_recvidentity(::std::string* recvidentity) {
  if (recvidentity != NULL) {
    
  } else {
    
  }
  recvidentity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recvidentity);
  // @@protoc_insertion_point(field_set_allocated:executor.EvenlopDef.recvIdentity)
}

// bytes sessionId = 4;
void EvenlopDef::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EvenlopDef::sessionid() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.sessionId)
  return sessionid_.GetNoArena();
}
void EvenlopDef::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.sessionId)
}
#if LANG_CXX11
void EvenlopDef::set_sessionid(::std::string&& value) {
  
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:executor.EvenlopDef.sessionId)
}
#endif
void EvenlopDef::set_sessionid(const char* value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:executor.EvenlopDef.sessionId)
}
void EvenlopDef::set_sessionid(const void* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:executor.EvenlopDef.sessionId)
}
::std::string* EvenlopDef::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:executor.EvenlopDef.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EvenlopDef::release_sessionid() {
  // @@protoc_insertion_point(field_release:executor.EvenlopDef.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EvenlopDef::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:executor.EvenlopDef.sessionId)
}

// .executor.OpLibraryType oplibrary = 5;
void EvenlopDef::clear_oplibrary() {
  oplibrary_ = 0;
}
::executor::OpLibraryType EvenlopDef::oplibrary() const {
  // @@protoc_insertion_point(field_get:executor.EvenlopDef.oplibrary)
  return static_cast< ::executor::OpLibraryType >(oplibrary_);
}
void EvenlopDef::set_oplibrary(::executor::OpLibraryType value) {
  
  oplibrary_ = value;
  // @@protoc_insertion_point(field_set:executor.EvenlopDef.oplibrary)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace executor

// @@protoc_insertion_point(global_scope)
