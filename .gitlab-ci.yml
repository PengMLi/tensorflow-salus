stages:
  - build
  - test
  - release

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  LATEST_TAG: $CI_REGISTRY_IMAGE:latest
  TF_BASE_VERSION: 1.5.1

build:
  image: tensorflow/tensorflow:${TF_BASE_VERSION}-devel-gpu-py3
  stage: build
  script:
    - pip install conan
    - mkdir deps
    - cd deps && conan install ..
    - env ZEROMQ_PATH=deps/packages tensorflow/tools/ci_build/configured GPU bazel build //tensorflow/tools/pip_package:build_pip_package //tensorflow:libtensorflow_kernels.so //tensorflow:libtensorflow_framework.so
    # build pip wheel
    - mkdir dist && bazel-bin/tensorflow/tools/pip_package/build_pip_package dist
    # build source package for salus
    - rsync -avL --filter "merge docker/whitelist.rsync-filter" --prune-empty-dirs bazel-bin bazel-genfiles bazel-tensorflow dist/devel
    - chmod -R go-w dist/devel
    - cd dist/devel && zip ../${CI_PROJECT_NAME}-devel-${CI_COMMIT_REF_NAME}.zip -r .
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - ${CI_PROJECT_DIR}/dist/*.zip
      - ${CI_PROJECT_DIR}/dist/*.whl
    expire_in: 1 week

test-pyimport:
  stage: test
  image: tensorflow/tensorflow:${TF_BASE_VERSION}-gpu-py3
  tags:
    - gpu
  script:
    # We need to get out of the tensorflow source folder, otherwise import won't work
    - pip install ${CI_PROJECT_DIR}/dist/*.whl
    - python -c 'import tensorflow'

test-tfsrc:
  stage: test
  script:
    - test -d dist/devel/bazel-genfiles
    - test -d dist/devel/bazel-tensorflow/tensorflow/core
    - test -d dist/devel/bazel-tensorflow/tensorflow/cc
    - test -d dist/devel/bazel-tensorflow/third_party
    - test -d dist/devel/bazel-bin/tensorflow
    - test -f dist/devel/bazel-tensorflow/third_party/eigen3/unsupported/Eigen/CXX11/Tensor
    - test -f dist/devel/bazel-tensorflow/external/eigen_archive/unsupported/Eigen/CXX11/Tensor
    - test -f dist/devel/bazel-bin/tensorflow/libtensorflow_framework.so
    - test -f dist/devel/bazel-bin/tensorflow/libtensorflow_kernels.so

release:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $LATEST_TAG
    - docker push $LATEST_TAG
  only:
    - master
  artifacts:  # keep the artifacts (default expire forever)
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - ${CI_PROJECT_DIR}/dist/*.zip
      - ${CI_PROJECT_DIR}/dist/*.whl
